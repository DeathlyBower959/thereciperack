{"version":3,"sources":["contexts/AccountContext.js","components/Routes/Routes.js","components/Routes/Private.jsx","components/Routes/Public.jsx","settings.js","api/cookbook.js","api/recipe.js","api/users.js","api/urls.js","assets/ripped.png","pages/PageNotFound/PageNotFound.jsx","pages/Landing/Landing.jsx","contexts/IsCrushedContext.js","contexts/ToastNotifContext.js","components/Navigation/NavButton.jsx","components/Navigation/NavLink.jsx","components/Navigation/Navbar.js","assets/logo.svg","components/Navigation/Navbar.jsx","components/Forms/Checkbox.jsx","components/Forms/FileInput.jsx","components/Forms/Textbox.jsx","components/Forms/Button.jsx","components/Forms/Label.jsx","components/Forms/TextArea.jsx","components/Forms/Form.js","pages/Account/CreateThemeModal.jsx","pages/Account/DeleteAccountModal.jsx","api/settings.js","components/Pages/PageBody.jsx","components/Pages/Pages.js","pages/Account/Account.jsx","pages/About/About.jsx","hooks/useForm.js","pages/Signup-Login/SignupValidation.js","pages/Signup-Login/SignupForm.jsx","pages/Signup-Login/LoginValidation.js","pages/Signup-Login/LoginForm.jsx","pages/Signup-Login/Signup-Login.jsx","pages/CookbookPages/Cookbooks/CookbookCard.jsx","pages/CookbookPages/Cookbooks/CookbooksList.jsx","pages/CookbookPages/Cookbooks/SearchBar.jsx","pages/CookbookPages/Cookbooks/Cookbooks.jsx","pages/CookbookPages/CreateCookbook/CreateValidation.js","utils/image.js","pages/CookbookPages/CreateCookbook/CreateCookbook.jsx","pages/RecipePages/Recipes/RecipeCard.jsx","pages/RecipePages/Recipes/RecipeList.jsx","pages/RecipePages/Recipes/SearchBar.jsx","pages/RecipePages/Recipes/Recipes.jsx","App.js","hooks/useLocalStorage.js","index.js"],"names":["Account","createContext","Private","userData","useContext","AccountContext","undefined","to","Public","settings","isDevMode","activeDevelopment","SERVER_URL","getCookbooks","userID","a","console","error","Axios","get","params","res","response","request","log","message","createCookbook","cookbook","post","editCookbook","cookbookID","newCookbookData","put","deleteCookbook","delete","data","getRecipes","createRecipe","recipe","editRecipe","recipeID","newRecipeData","deleteRecipe","getUser","email","password","getUserHashed","hashedPass","createUser","name","regenJWTToken","editUser","oldPass","newUser","deleteUser","shortenURL","longUrl","getURL","code","DivBody","styled","div","props","theme","secondaryBackground","Header404","h2","secondaryForeground","Desc","h1","foreground","GoBack","button","accent","secondaryAccent","PageNotFound","navigate","useNavigate","style","userSelect","draggable","src","ripped","width","onClick","Landing","useParams","useEffect","urls","then","status","window","open","IsCrushed","ToastNotif","LinkDiv","NavButton","path","title","Nav","Link","padding","as","cursor","muted","Bar","Navbar","Button","DropdownItem","NavDropdown","Item","RightNavigationDropdown","StyledSpinner","Spinner","NavigationBar","ThemeContext","isCrushed","IsCrushedContext","AuthLogout","useState","menuOpen","setMenuOpen","sticky","background","navbar","expand","Container","fluid","textDecoration","alt","Logo","transform","height","className","Brand","color","Toggle","borderWidth","toggled","toggle","rounded","Collapse","id","Divider","marginRight","animation","align","Check","FormCheck","substring","inputBackground","Checkbox","label","checked","display","marginLeft","paddingTop","File","input","attrs","type","FileDiv","Title","disabled","ChooseFile","DeleteButton","FileInput","inputRef","selectedFileName","setSelectedFile","current","files","value","ref","onChange","target","click","placeholder","TextboxInput","Textbox","InputButton","TextLabel","p","Label","TextAreaStyled","textarea","Text","TextArea","e","computed","getComputedStyle","parseInt","getPropertyValue","scrollHeight","StyledModal","Modal","CreateThemeModal","themeName","setThemeName","size","centered","onHide","Header","closeButton","Body","Form","Footer","createthememodaltrue","Description","confirmPassword","setConfirmPassword","restoreFocus","backdrop","keyboard","deleteAccountModalTrue","createTheme","newTheme","deleteTheme","themeID","PageBody","children","Sidebar","SidebarButton","StickyItems","h4","Sections","Section","SectionTitle","h5","InputGroup","ErrorMessage","ThemeChooser","select","StyledSketchPicker","SketchPicker","AppearanceColorTitle","disabledText","ShownOnHover","span","FormButton","FormText","scrollTo","element","document","getElementById","pos","position","top","scrollIntoView","behavior","block","inline","setLocalAuth","setUserData","Toast","errors","setErrors","NewData","setNewData","deleteAccount","modalShow","setModalShow","visibleAppearance","setVisibleAppearance","handleChange","prev","updateItem","newErr","toString","trim","length","users","test","newPassword","cNewPassword","updateSetting","seePublicRecipes","themes","find","x","selectedTheme","res2","show","toLowerCase","DeleteAccountModal","Pages","flexDirection","token","margin","fontSize","sharePublicRecipes","marginTop","map","index","selected","startsWith","onChangeComplete","newColor","findIndex","newThemes","hex","faded","navigator","clipboard","writeText","DivClamp","h3","About","marginBottom","href","rel","xmlns","viewBox","fill","d","useForm","callback","validate","defaultValues","customFunctions","values","setValues","isSubmitting","setIsSubmitting","Object","keys","handleSubmit","event","preventDefault","validation","persist","addError","isSubmit","cPassword","BoxContainer","FormContainer","form","MutedText","BoldLink","TextInput","SubmitButton","SignupForm","AuthLogin","SignUp","result","onSubmit","noValidate","required","LoginForm","TopContainer","BackDrop","motion","HeaderContainer","HeaderText","SmallText","InnerContainer","backdropVariants","expanded","borderRadius","collapsed","expandingTransition","duration","stiffness","SignupLogin","login","isExpanded","setExpanded","active","setActive","playExpandingAnimation","setTimeout","time","initial","animate","variants","transition","CardBody","thirdBackground","ImageWrapper","Col","CoverImage","img","CardInfo","CardTitle","CardDescription","CardTags","CookbookCard","coverImage","description","tags","loading","setLoading","sm","defaultImage","onLoad","join","filter","variant","CookbooksList","filteredCookbooks","onDragEnd","destination","items","Array","from","splice","source","reorderedItem","cookbooks","droppableId","provided","droppableProps","innerRef","book","draggableId","draggableProps","dragHandleProps","Alert","backgroundColor","alert","borderColor","border","Heading","SearchBox","TagSelect","SearchBar","searchField","setSearchField","tagField","setTagField","includes","tagOptions","forEach","tag","push","getTags","charCodeAt","Math","random","justifyContent","Cookbooks","CookbookName","FormRow","Row","CreateCookbook","Create","split","item","coverImageRef","useRef","some","ex","endsWith","reader","FileReader","onload","string","unit","Blob","byteSize","readAsDataURL","filteredRecipes","RecipeCard","recipes","RecipeList","Recipes","AppContainer","Background","App","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","localAuth","LoginPromise","Promise","resolve","reject","retrievedUser","SendToast","promise","pending","success","setIsCrushed","defaultThemes","IoConstructSharp","onWindowResize","innerWidth","removeEventListener","addEventListener","bind","currentTheme","icon","toast","progressStyle","info","warn","render","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","ToastNotifContext","Provider","Routes","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d3f20309.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst Account = createContext()\r\nexport default Account","import Private from './Private'\r\nimport Public from './Public'\r\n\r\nexport default {\r\n    Private,\r\n    Public,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet } from 'react-router'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst Private = () => {\r\n    const { userData} = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Navigate to='/login' />\r\n    ) : (\r\n        <Outlet />\r\n    )\r\n}\r\n\r\nexport default Private\r\n","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet, useLocation } from 'react-router'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst Public = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Outlet />\r\n    ) : (\r\n        <Navigate to='/' />\r\n\r\n    )\r\n}\r\n\r\nexport default Public\r\n","let settings = {\r\n    isDevMode: false,\r\n    activeDevelopment: true,\r\n    SERVER_URL: '',\r\n}\r\n\r\nif (settings.isDevMode) settings.SERVER_URL = 'http://localhost:5000'\r\nelse settings.SERVER_URL = 'https://thereciperack-api.deathlybower959.repl.co'\r\n\r\nexport default settings\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getCookbooks = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/cookbook', {\r\n            params: {\r\n            userID,\r\n            }\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createCookbook = async (userID, cookbook) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbook) return console.error('Missing cookbook')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbook,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editCookbook = async (userID, cookbookID, newCookbookData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n    if (!newCookbookData) return console.error('Missing newCookbookData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbookID,\r\n            newCookbookData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCookbook = async (userID, cookbookID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n\r\n    try {\r\n        const res = await Axios.delete(settings.SERVER_URL + '/cookbook', {\r\n            data: {\r\n                userID,\r\n                cookbookID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getRecipes = async (userID, cookbookID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/recipe', {\r\n            params: {\r\n            userID,\r\n            cookbookID,\r\n            }\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createRecipe = async (userID, cookbookID, recipe) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n    if (!recipe) return console.error('Missing recipe')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/recipe', {\r\n            userID,\r\n            cookbookID,\r\n            recipe,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editRecipe = async (\r\n    userID,\r\n    cookbookID,\r\n    recipeID,\r\n    newRecipeData\r\n) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n    if (!recipeID) return console.error('Missing recipeID')\r\n    if (!newRecipeData) return console.error('Missing newRecipeData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/recipe', {\r\n            userID,\r\n            cookbookID,\r\n            recipeID,\r\n            newRecipeData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteRecipe = async (userID, cookbookID, recipeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n    if (!recipeID) return console.error('Missing recipeID')\r\n    try {\r\n        const res = await Axios.delete(settings.SERVER_URL + '/recipe', {\r\n            data: {\r\n                userID,\r\n                cookbookID,\r\n                recipeID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getUser = async (email, password) => {\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                email,\r\n                password,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserHashed = async (email, hashedPass) => {\r\n    if (!email) return console.error('Missing email')\r\n    if (!hashedPass) return console.error('Missing hashedPass')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                email,\r\n                hashedPass,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createUser = async (name, email, password) => {\r\n    if (!name) return console.error('Missing name')\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/users', {\r\n            name,\r\n            email,\r\n            password,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const regenJWTToken = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users/regenToken', {\r\n            params: {\r\n                userID\r\n            }\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editUser = async (userID, oldPass, newUser) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newUser) return console.error('Missing newUser')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/users', {\r\n            userID,\r\n            oldPass, \r\n            newUser,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = Axios.delete(settings.SERVER_URL + '/users', {\r\n            data: { userID },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import Axios from 'axios'\r\nimport settings from '../settings'\r\n\r\nexport const shortenURL = async (longUrl) => {\r\n    if (!longUrl) return console.error('Missing longUrl')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/urls/create', {\r\n            longUrl,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const getURL = async (code) => {\r\n    if (!code) return console.error('Missing code')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/urls/', {\r\n            params: {\r\n                code\r\n            }\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ripped.6e33437a.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ripped from '../../assets/ripped.png'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst DivBody = styled.div`\r\n    text-align: center;\r\n    width: 60%;\r\n    padding-bottom: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Header404 = styled.h2`\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst Desc = styled.h1`\r\n    padding: 0px 10px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst GoBack = styled.button`\r\n    width: 100px;\r\n    padding: 10px 10px;\r\n    margin: 20px auto 0px auto;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst PageNotFound = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <DivBody style={{ userSelect: 'none' }}>\r\n            <Header404>404 Error</Header404>\r\n            <Desc>Sorry, we can't seem to find what you're looking for.</Desc>\r\n            <img draggable={false} src={ripped} width='100%' />\r\n            <GoBack onClick={() => navigate(-1)}>Go Back</GoBack>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import { useContext, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport { useParams } from 'react-router'\r\nimport { urls } from '../../api/api'\r\nimport PageNotFound from '../PageNotFound/PageNotFound'\r\n\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst Landing = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    const { code } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (code) {\r\n            urls.getURL(code).then((res) => {\r\n                if (res.status != 200) {\r\n                    return <PageNotFound />\r\n                } else {\r\n                    window.open(res.data.longUrl)\r\n                }\r\n            })\r\n        }\r\n    }, [code])\r\n\r\n    return <DivBody>{/* <SearchBar /> */}</DivBody>\r\n}\r\n\r\nexport default Landing\r\n","import { createContext } from \"react\";\r\n\r\nconst IsCrushed = createContext()\r\nexport default IsCrushed","import { createContext } from \"react\";\r\n\r\nconst ToastNotif = createContext()\r\nexport default ToastNotif","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    padding: 0.5rem 1rem;\r\n    margin-right: -3px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst NavButton = ({ path, title }) => {\r\n    return (\r\n        <Nav.Link style={{ padding: '0' }} as={Link} to={path}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavButton\r\n","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    color: ${(props) => props.theme.muted};\r\n    transition: color 300ms ease;\r\n\r\n    &:hover {\r\n        color: ${(props) => props.theme.secondaryForeground};\r\n    }\r\n`\r\n\r\nconst NavLink = ({ path, title, ...props }) => {\r\n    return (\r\n        <Nav.Link as={Link} to={path} {...props}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import Navbar from './Navbar'\r\nimport NavButton from './NavButton'\r\nimport NavLink from './NavLink'\r\n\r\nexport default {\r\n    Bar: Navbar,\r\n    Button: NavButton,\r\n    Link: NavLink\r\n}","export default __webpack_public_path__ + \"static/media/logo.2573ae00.svg\";","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Fade as Hamburger } from 'hamburger-react'\r\nimport {\r\n    Navbar,\r\n    Container,\r\n    Nav,\r\n    NavDropdown,\r\n    Spinner,\r\n} from 'react-bootstrap'\r\nimport IsCrushedContext from '../../contexts/IsCrushedContext'\r\n\r\nimport NavBarComponents from './Navbar.js'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nimport Logo from '../../assets/logo.svg'\r\n\r\nconst DropdownItem = styled(NavDropdown.Item)`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.25rem 1rem;\r\n    color: ${(props) => props.theme.muted};\r\n    clear: both;\r\n    font-weight: 400;\r\n    text-align: inherit;\r\n    text-decoration: none;\r\n    white-space: nowrap;\r\n    background-color: transparent;\r\n    border: 0;\r\n\r\n    transition: color 300ms ease;\r\n\r\n    &:hover {\r\n        color: ${(props) => props.theme.secondaryForeground};\r\n    }\r\n`\r\n\r\nconst NavigationDropdown = styled(NavDropdown)`\r\n    .dropdown-menu.show {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n    }\r\n\r\n    .dropdown-toggle.nav-link {\r\n        color: ${(props) => props.theme.muted} !important;\r\n        transition: color 300ms ease;\r\n\r\n        &:hover {\r\n            color: ${(props) => props.theme.secondaryForeground} !important;\r\n        }\r\n    }\r\n`\r\n\r\nconst RightNavigationDropdown = styled(NavDropdown)`\r\n    .dropdown-menu.show {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n    }\r\n\r\n    .dropdown-toggle.nav-link {\r\n        color: ${(props) => props.theme.muted} !important;\r\n        transition: color 300ms ease;\r\n\r\n        &:hover {\r\n            color: ${(props) => props.theme.secondaryForeground} !important;\r\n        }\r\n        padding-left: 0;\r\n    }\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst NavigationBar = () => {\r\n    const theme = useContext(ThemeContext)\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, AuthLogout } = useContext(AccountContext)\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n\r\n    return (\r\n        <Navbar\r\n            sticky='top'\r\n            style={{ background: theme.navbar.background }}\r\n            expand='md'\r\n        >\r\n            <Container fluid>\r\n                <Link to='/' style={{ textDecoration: 'none' }}>\r\n                    <img\r\n                        alt=''\r\n                        src={Logo}\r\n                        style={{ transform: 'rotate(7deg)' }}\r\n                        width='30'\r\n                        height='30'\r\n                        className='align-top'\r\n                    />{' '}\r\n                    <Navbar.Brand style={{ color: theme.foreground }}>\r\n                        The Recipe Rack\r\n                    </Navbar.Brand>\r\n                </Link>\r\n\r\n                <Navbar.Toggle\r\n                    style={{ borderWidth: '0' }}\r\n                    aria-controls='basic-navbar-nav'\r\n                >\r\n                    <Hamburger\r\n                        color={theme.foreground}\r\n                        toggled={menuOpen}\r\n                        toggle={setMenuOpen}\r\n                        rounded\r\n                    />\r\n                </Navbar.Toggle>\r\n\r\n                <Navbar.Collapse id='basic-navbar-nav'>\r\n                    <Nav className='me-auto my-2 my-lg-0'>\r\n                        {/* <NavigationDropdown title='Test'>\r\n                            <DropdownItem as={Link} to='/link'>\r\n                                Link\r\n                            </DropdownItem>\r\n                            <NavDropdown.Divider />\r\n                        </NavigationDropdown> */}\r\n                        <NavBarComponents.Link title='My Cookbooks' path='/cookbooks' />\r\n                        <NavBarComponents.Link title='About' path='/about' />\r\n                    </Nav>\r\n                    <Nav>\r\n                        {isCrushed && <NavDropdown.Divider />}\r\n\r\n                        {userData == null || userData == undefined ? (\r\n                            <>\r\n                                <NavBarComponents.Link title='Sign up' path='/signup' style={{marginRight: '8px'}}/>\r\n                                {isCrushed ? (\r\n                                    <NavBarComponents.Link title='Login' path='/login' />\r\n                                ) : (\r\n                                    <NavBarComponents.Button title='Login' path='/login' />\r\n                                )}\r\n                            </>\r\n                        ) : userData == 'none' ? (\r\n                            <StyledSpinner animation='border' />\r\n                        ) : (\r\n                            <RightNavigationDropdown\r\n                                align='end'\r\n                                title={userData?.name ?? 'My Account'}\r\n                            >\r\n                                <DropdownItem as={Link} to='/account'>\r\n                                    My Account\r\n                                </DropdownItem>\r\n                                <NavDropdown.Divider />\r\n                                <DropdownItem\r\n                                    as={Link}\r\n                                    to='#'\r\n                                    onClick={AuthLogout}\r\n                                >\r\n                                    Sign out\r\n                                </DropdownItem>\r\n                            </RightNavigationDropdown>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n","import { useContext } from 'react'\r\nimport { FormCheck } from 'react-bootstrap'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst Check = styled(FormCheck)`\r\n    .form-check-input:checked[type='checkbox'] {\r\n        background-image: url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23${props => props.theme.secondaryForeground.substring(1)}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e\\\")!important;\r\n    }\r\n    .form-check-input {\r\n        background-color: ${(props) => props.theme.inputBackground};\r\n        border: 0;\r\n        cursor: pointer;\r\n        width: 1.3em;\r\n        height: 1.3em;\r\n        margin-left: 10px;\r\n    }\r\n    .form-check-input:focus {\r\n        box-shadow: none;\r\n    }\r\n`\r\n\r\nconst Checkbox = ({ label, checked, ...props }) => {\r\n    const theme = useContext(ThemeContext)\r\n    \r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Check checked={checked || false} {...props} />\r\n            <p\r\n                style={{\r\n                    marginLeft: '6px',\r\n                    paddingTop: '2px',\r\n                    color: theme.foreground,\r\n                }}\r\n            >\r\n                {label ?? 'No checkbox name'}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst File = styled.input.attrs({ type: 'file' })`\r\n    display: none;\r\n`\r\n\r\nconst FileDiv = styled.div`\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    height: 42px;\r\n    font-size: 12px;\r\n    display: flex;\r\n    border-radius: 0.5rem;\r\n`\r\n\r\nconst Title = styled.input.attrs({ disabled: true })`\r\n    height: 42px;\r\n    outline: none;\r\n    padding: 0px 10px 0px 5px;\r\n    font-size: 12px;\r\n    border: 0;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    background-color: transparent;\r\n`\r\n\r\nconst ChooseFile = styled.button`\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    border: 0;\r\n    border-right: solid 2px ${(props) => props.theme.secondaryBackground};\r\n    outline: 0;\r\n    color: ${(props) => props.theme.muted};\r\n    border-top-left-radius: 0.5rem;\r\n    border-bottom-left-radius: 0.5rem;\r\n\r\n    transition: filter 250ms ease-in-out;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n    color: red;\r\n    width: 20px;\r\n    font-weight: bold;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border-width: 0px;\r\n    margin-left: 5px;\r\n`\r\n\r\nconst FileInput = ({ label, className, inputRef, ...props }) => {\r\n    const [selectedFileName, setSelectedFile] = useState()\r\n    useEffect(() => {\r\n        setSelectedFile(inputRef.current.files[0]?.name)\r\n    }, [inputRef, inputRef.current?.value, inputRef.current?.files])\r\n\r\n    return (\r\n        <>\r\n            <File ref={inputRef} {...props} />\r\n\r\n            <FileDiv>\r\n                {selectedFileName != null ? (\r\n                    <DeleteButton\r\n                        type='button'\r\n                        onClick={() => {\r\n                            inputRef.current.value = null\r\n                            props.onChange({ target: {name: inputRef.current.name, files: []} })\r\n                            setSelectedFile(null)\r\n                        }}\r\n                    >\r\n                        X\r\n                    </DeleteButton>\r\n                ) : (\r\n                    <ChooseFile\r\n                        onClick={() => inputRef.current.click()}\r\n                        type='button'\r\n                    >\r\n                        Choose File\r\n                    </ChooseFile>\r\n                )}\r\n                <Title placeholder={selectedFileName ?? label} />\r\n            </FileDiv>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextboxInput = styled.input`\r\n    border-radius: 0.5rem;\r\n    \r\n    max-width: 500px;\r\n    width: 50%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n\r\n    margin-left: 7px;\r\n`\r\n\r\nconst Textbox = (props) => {\r\n    return (\r\n        <TextboxInput {...props}/>\r\n    )\r\n}\r\n\r\nexport default Textbox\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InputButton = styled.button`\r\n    margin-left: 10px;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: clamp(12px, 4vw, 15px);\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <InputButton {...props}/>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextLabel = styled.p`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-top: 15px;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst Label = (props) => {\r\n    return (\r\n        <TextLabel {...props}/>\r\n    )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextAreaStyled = styled.textarea`\r\n    width: 60%;\r\n    border-radius: 0.5rem;\r\n    resize: none;\r\n    min-height: 42px;\r\n    height: 60px;\r\n    overflow: hidden;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 5px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\nconst TextArea = (props) => {\r\n    return (\r\n        <TextAreaStyled {...props} onChange={(e) => {\r\n            props.onChange(e)\r\n\r\n            // Reset field height\r\n            e.target.style.height = 'inherit'\r\n\r\n            // Get the computed styles for the element\r\n            const computed = window.getComputedStyle(\r\n                e.target\r\n            )\r\n\r\n            // Calculate the height\r\n            const height =\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'border-top-width'\r\n                    ),\r\n                    10\r\n                ) +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'padding-top'\r\n                    ),\r\n                    10\r\n                ) +\r\n                e.target.scrollHeight +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'padding-bottom'\r\n                    ),\r\n                    10\r\n                ) +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'border-bottom-width'\r\n                    ),\r\n                    10\r\n                )\r\n\r\n            e.target.style.height = `${height}px`\r\n        }}/>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","import Checkbox from './Checkbox'\r\nimport FileInput from './FileInput'\r\nimport Textbox from './Textbox'\r\nimport Button from './Button'\r\nimport Label from './Label'\r\nimport TextArea from './TextArea'\r\n\r\nexport default {\r\n    File: FileInput,\r\n    Check: Checkbox,\r\n    Text: Textbox,\r\n    Button,\r\n    Label,\r\n    TextArea: TextArea\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${props => props.theme.secondaryBackground};\r\n        color: ${props => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n\r\n    const [themeName, setThemeName] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            onHide={(e) => {\r\n                setThemeName('')\r\n                props.onHide(e)\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                   New Theme\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Label>Theme Name</Form.Label>\r\n                <Form.Text onChange={(e) => setThemeName(e.target.value)} value={themeName}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Form.Button onClick={() => props.createthememodaltrue(themeName)}>Create</Form.Button>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n        color: ${(props) => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst Description = styled.p`\r\n    color: white;\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            restoreFocus\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            onHide={(e) => {\r\n                setConfirmPassword('')\r\n                props.onHide(e)\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                    Confirm Account Deletion\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Description>\r\n                    Deleting your account will mean all of your recipes,\r\n                    cookbooks, and account data will be removed.\r\n                </Description>\r\n                <Description>\r\n                    If you are sure you want to delete your account, please confirm your\r\n                    password.\r\n                </Description>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Text\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Form.Button\r\n                    disabled={confirmPassword != props.password}\r\n                    onClick={props.deleteAccountModalTrue}\r\n                >\r\n                    Delete Account\r\n                </Form.Button>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getSettings = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/settings', {\r\n            params: {\r\n            userID,\r\n            }\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editSettings = async (userID, newSettingData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newSettingData) return console.error('Missing newSettingData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings', {\r\n            userID,\r\n            newSettingData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createTheme = async (userID, newTheme) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newTheme) return console.error('Missing newTheme')\r\n    \r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newTheme,\r\n        })\r\n        \r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTheme = async (userID, newThemeData, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newThemeData) return console.error('Missing newThemeData')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newThemeData,\r\n            themeID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTheme = async (userID, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.delete(\r\n            settings.SERVER_URL + '/settings/theme',\r\n            {\r\n                data: {\r\n                    userID,\r\n                    themeID,\r\n                },\r\n            }\r\n        )\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n\r\n    border-radius: 20px;\r\n`\r\n\r\nconst PageBody = ({ children, ...props }) => {\r\n    return <DivBody {...props}>{children}</DivBody>\r\n}\r\n\r\nexport default PageBody\r\n","import PageBody from './PageBody'\r\n\r\nexport default {\r\n    PageBody,\r\n}","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nimport { users } from '../../api/api'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\n\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nimport { SketchPicker } from 'react-color'\r\nimport CreateThemeModal from './CreateThemeModal'\r\nimport DeleteAccountModal from './DeleteAccountModal'\r\nimport { createTheme, deleteTheme } from '../../api/settings'\r\n\r\nimport Form from '../../components/Forms/Form'\r\nimport Pages from '../../components/Pages/Pages'\r\nimport IsCrushed from '../../contexts/IsCrushedContext'\r\nimport { IoConstructOutline } from 'react-icons/io5'\r\n\r\n// Holds navigation for settings\r\nconst Sidebar = styled.div`\r\n    border-radius: 20px;\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\n// Button for sidebar\r\nconst SidebarButton = styled.button`\r\n    width: 100%;\r\n    display: block;\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n\r\n    transition: filter 240ms ease-in-out;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    text-align: left;\r\n    padding: 10px 10px 10px 17px;\r\n    margin-right: 30px;\r\n`\r\n\r\n// Wraps navigation items, and makes them move down once top of the screen is hit.\r\nconst StickyItems = styled.div`\r\n    position: sticky;\r\n    top: 100px;\r\n`\r\n\r\n// Navigation Header\r\nconst Header = styled.h4`\r\n    color: ${(props) => props.theme.foreground};\r\n    margin: 15px 20px 15px 15px;\r\n`\r\n\r\n// Holds all <Section> element\r\nconst Sections = styled.div`\r\n    margin-left: 20px;\r\n    width: 100%;\r\n`\r\n\r\n// Setting section\r\nconst Section = styled.div`\r\n    margin-top: 20px;\r\n`\r\n\r\n// Setting section title\r\nconst SectionTitle = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\n// Group for an input area\r\nconst InputGroup = styled.div`\r\n    margin-left: 8px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\n// Paragraph that is added when error is shown\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\n// Select Dropdown to choose theme\r\nconst ThemeChooser = styled.select`\r\n    display: block;\r\n    max-width: 500px;\r\n    width: 50%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    appearance: none;\r\n    border-radius: 0.5rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n    margin-left: 7px;\r\n    margin-right: 10px;\r\n`\r\n// Color picker\r\nconst StyledSketchPicker = styled(SketchPicker)`\r\n    background: transparent !important;\r\n    margin-top: 10px;\r\n    margin-left: 10px;\r\n\r\n    input {\r\n        background-color: ${(props) => props.theme.inputBackground};\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    label {\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    input:focus-visible {\r\n        outline: 0 !important;\r\n    }\r\n`\r\n\r\n// Buttons to display color pickers\r\nconst AppearanceColorTitle = styled.button`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-left: 10px;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: transparent;\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: none;\r\n        color: ${(props) => props.theme.disabledText};\r\n    }\r\n`\r\n\r\nconst ShownOnHover = styled.span`\r\n    filter: blur(3px);\r\n    transition: filter 250ms;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    &:hover {\r\n        filter: none;\r\n    }\r\n`\r\n\r\nconst FormButton = styled(Form.Button)`\r\n    margin-left: 0;\r\n`\r\n\r\nconst FormText = styled(Form.Text)`\r\n    margin-right: 10px;\r\n`\r\n\r\n// Scroll to any element, with an offset of x pixels\r\nconst scrollTo = (id) => {\r\n    var element = document.getElementById(id)\r\n\r\n    let pos = element.style.position\r\n    let top = element.style.top\r\n\r\n    element.style.position = 'relative'\r\n    element.style.top = '-75px'\r\n\r\n    element?.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n        inline: 'nearest',\r\n    })\r\n\r\n    element.style.top = top\r\n    element.style.position = pos\r\n}\r\n\r\nconst Account = () => {\r\n    const theme = useContext(ThemeContext)\r\n    const { setLocalAuth, userData, setUserData, AuthLogout } =\r\n        useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n    const isCrushed = useContext(IsCrushed)\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [NewData, setNewData] = useState({ ...userData, password: null })\r\n\r\n    const [modalShow, setModalShow] = useState({\r\n        createTheme: false,\r\n        deleteAccount: false,\r\n    })\r\n    const [visibleAppearance, setVisibleAppearance] = useState('')\r\n\r\n    // Updating state on inputs\r\n    const handleChange = (e) => {\r\n        setNewData((prev) => {\r\n            setErrors((prev) => {\r\n                return { ...prev, [e.target.name]: null }\r\n            })\r\n            return {\r\n                ...prev,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        })\r\n    }\r\n\r\n    // Update item in database\r\n    const updateItem = async (e) => {\r\n        let newErr = {}\r\n        if (e.target.name == 'name') {\r\n            if (!NewData.name) newErr.name = 'Your name is required'\r\n            else if (NewData.name?.toString().trim() == '')\r\n                newErr.name = 'Your name is required'\r\n            else if (NewData.name?.length < 5)\r\n                newErr.name = 'Too short, must be at least 5 characters long'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update name...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    Toast('Name updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'email') {\r\n            if (!NewData.email) newErr.email = 'Your email is required'\r\n            else if (NewData.email?.toString().trim() == '')\r\n                newErr.email = 'Your email is required'\r\n            else if (!/\\S+@\\S+\\.\\S+/.test(NewData.email))\r\n                newErr.email = 'Email address is invalid'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update email...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n\r\n                    Toast('Email updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'password') {\r\n            if (!NewData.password)\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password.toString().trim() == '')\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password?.length < 8)\r\n                newErr.password = 'Password must be 8 or more characters'\r\n        }\r\n\r\n        if (e.target.name == 'cNewPassword') {\r\n            if (\r\n                !NewData.newPassword ||\r\n                NewData.newPassword.toString().trim() == '' ||\r\n                NewData?.password?.trim() == NewData?.newPassword?.trim() ||\r\n                !NewData.cNewPassword ||\r\n                NewData.password.toString().trim() == '' ||\r\n                NewData?.password?.trim() == NewData?.cNewPassword?.trim()\r\n            )\r\n                newErr.cNewPassword = 'You must specify a new password'\r\n            else if (\r\n                NewData?.newPassword?.trim() !== NewData?.cNewPassword?.trim()\r\n            )\r\n                newErr.cNewPassword = 'Passwords do not match'\r\n            else if (\r\n                NewData.newPassword?.length < 8 ||\r\n                NewData.cNewPassword?.length < 8\r\n            )\r\n                newErr.cNewPassword =\r\n                    'New password must be 8 or more characters'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData.password, {\r\n                    ...NewData,\r\n                    password: NewData.newPassword,\r\n                })\r\n                if (res.status != 201) {\r\n                    console.error(res.data.message)\r\n                    Toast('Failed to update password...', 'error')\r\n                } else {\r\n                    setUserData(res.data)\r\n                    setNewData((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            password: null,\r\n                            newPassword: null,\r\n                            cNewPassword: null,\r\n                        }\r\n                    })\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n                    Toast(\r\n                        'Password updated! Make sure to remember it!',\r\n                        'success'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setErrors(newErr)\r\n    }\r\n\r\n    const updateSetting = async (e) => {\r\n        if (e.target.name == 'seePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('You can now see public recipes!', 'success')\r\n                else Toast(\"You can't see public recipes anymore!\", 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'sharePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('Your public recipes are now visible!', 'success')\r\n                else Toast('Your public recipes are now hidden!', 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'selectedTheme') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.value,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n                console.log(res.data)\r\n            } else {\r\n                setUserData(res.data)\r\n                setVisibleAppearance('')\r\n                Toast(\r\n                    'Your theme was changed!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == e.target.value\r\n                    )\r\n                )\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'deleteTheme') {\r\n            const res = await deleteTheme(\r\n                userData.id,\r\n                userData.settings.selectedTheme\r\n            )\r\n\r\n            if (res.status != 200)\r\n                return Toast('Failed to delete theme', 'error')\r\n\r\n            const res2 = await users.editUser(userData.id, {\r\n                ...res.data,\r\n                settings: {\r\n                    ...res.data.settings,\r\n                    selectedTheme: 'default_themes.dark',\r\n                },\r\n            })\r\n\r\n            if (res2.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n            } else {\r\n                setUserData(res2.data)\r\n                Toast(\r\n                    'Theme deleted!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == res.data.settings.selectedTheme\r\n                    )\r\n                )\r\n                setVisibleAppearance('')\r\n            }\r\n        }\r\n    }\r\n\r\n    // Used as when data is saved to database, it sets password to null\r\n    useEffect(() => {\r\n        setNewData({ ...userData, password: null })\r\n    }, [userData])\r\n\r\n    return (\r\n        <>\r\n            <CreateThemeModal\r\n                show={modalShow.createTheme}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n                }\r\n                createthememodaltrue={async (name) => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n\r\n                    const res = await createTheme(userData.id, {\r\n                        name,\r\n                        themeID: 'user_themes.' + name.trim().toLowerCase(),\r\n                    })\r\n\r\n                    if (res.status != 201)\r\n                        return Toast('Failed to create theme', 'error')\r\n\r\n                    setUserData(res.data)\r\n                }}\r\n            />\r\n\r\n            <DeleteAccountModal\r\n                show={modalShow.deleteAccount}\r\n                password={userData.password}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n                }\r\n                deleteAccountModalTrue={async () => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n\r\n                    const id = userData.id\r\n                    setLocalAuth({ email: null, password: null })\r\n                    AuthLogout()\r\n                    Toast('Account Deleted!', 'warn ')\r\n                    users.deleteUser(id)\r\n                }}\r\n            />\r\n            <Pages.PageBody\r\n                style={{ flexDirection: isCrushed ? 'column' : 'row' }}\r\n            >\r\n                <Sidebar>\r\n                    <StickyItems>\r\n                        <Header>Settings</Header>\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-account')}\r\n                        >\r\n                            Account\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-privacy')}\r\n                        >\r\n                            Privacy\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-appearance')}\r\n                        >\r\n                            Appearance\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-adv.settings')}\r\n                        >\r\n                            Advanced settings\r\n                        </SidebarButton>\r\n                    </StickyItems>\r\n                </Sidebar>\r\n                <Sections>\r\n                    <Section id='account-account'>\r\n                        <SectionTitle>Account</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <FormText\r\n                                onChange={handleChange}\r\n                                name='name'\r\n                                value={NewData?.name ?? ''}\r\n                            />\r\n                            <FormButton\r\n                                disabled={\r\n                                    userData?.name?.trim() ==\r\n                                    NewData.name?.trim()\r\n                                }\r\n                                name='name'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </FormButton>\r\n\r\n                            {errors.name && (\r\n                                <ErrorMessage>{errors.name}</ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <FormText\r\n                                onChange={handleChange}\r\n                                name='email'\r\n                                value={NewData?.email ?? ''}\r\n                            />\r\n                            <FormButton\r\n                                disabled={\r\n                                    userData?.email?.trim() ==\r\n                                    NewData?.email?.trim()\r\n                                }\r\n                                name='email'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </FormButton>\r\n\r\n                            {errors.email ? (\r\n                                <ErrorMessage>{errors.email}</ErrorMessage>\r\n                            ) : (\r\n                                userData?.email?.trim() ==\r\n                                    NewData?.email?.trim() &&\r\n                                userData.token != null && (\r\n                                    <Form.Label\r\n                                        style={{\r\n                                            margin: '3px auto auto 12px',\r\n                                            color: theme.secondaryForeground,\r\n                                            fontSize: '12px',\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            users.regenJWTToken(userData.id)\r\n\r\n                                            Toast(\r\n                                                'Check your email for a verification link!(Check your spam)',\r\n                                                'info'\r\n                                            )\r\n                                        }}\r\n                                    >\r\n                                        Resend Email\r\n                                    </Form.Label>\r\n                                )\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <FormText\r\n                                onChange={handleChange}\r\n                                name='password'\r\n                                type='password'\r\n                                value={NewData?.password ?? ''}\r\n                            />\r\n\r\n                            {errors.password && (\r\n                                <ErrorMessage>{errors.password}</ErrorMessage>\r\n                            )}\r\n\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <FormText\r\n                                onChange={handleChange}\r\n                                name='newPassword'\r\n                                type='password'\r\n                                value={NewData?.newPassword ?? ''}\r\n                            />\r\n                            {errors.newPassword && (\r\n                                <ErrorMessage>\r\n                                    {errors.newPassword}\r\n                                </ErrorMessage>\r\n                            )}\r\n\r\n                            <Form.Label>Confirm New Password</Form.Label>\r\n                            <FormText\r\n                                onChange={handleChange}\r\n                                name='cNewPassword'\r\n                                type='password'\r\n                                value={NewData?.cNewPassword ?? ''}\r\n                            />\r\n\r\n                            <FormButton\r\n                                disabled={\r\n                                    !NewData?.password?.trim() ||\r\n                                    !NewData?.newPassword?.trim() ||\r\n                                    !NewData?.cNewPassword?.trim() ||\r\n                                    NewData?.newPassword?.trim() !==\r\n                                        NewData?.cNewPassword?.trim() ||\r\n                                    NewData?.password?.trim() ==\r\n                                        NewData?.newPassword?.trim() ||\r\n                                    NewData?.password?.trim() ==\r\n                                        NewData?.cNewPassword?.trim()\r\n                                }\r\n                                name='cNewPassword'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </FormButton>\r\n                            {errors.cNewPassword && (\r\n                                <ErrorMessage>\r\n                                    {errors.cNewPassword}\r\n                                </ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-privacy'>\r\n                        <SectionTitle>Privacy</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Check\r\n                                name='seePublicRecipes'\r\n                                label='See public recipes'\r\n                                checked={NewData?.settings?.seePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                            <Form.Check\r\n                                name='sharePublicRecipes'\r\n                                label='Share your public recipes'\r\n                                checked={NewData.settings?.sharePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-appearance'>\r\n                        <SectionTitle>Appearance</SectionTitle>\r\n\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                                marginTop: '20px',\r\n                            }}\r\n                        >\r\n                            <div style={{ width: '100%', display: 'flex' }}>\r\n                                <ThemeChooser\r\n                                    name='selectedTheme'\r\n                                    onChange={updateSetting}\r\n                                >\r\n                                    {userData.settings?.themes?.map(\r\n                                        (theme, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    selected={\r\n                                                        userData.settings\r\n                                                            ?.selectedTheme ==\r\n                                                        theme.themeID\r\n                                                    }\r\n                                                    value={theme.themeID}\r\n                                                >\r\n                                                    {theme.name}\r\n                                                </option>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n                                </ThemeChooser>\r\n                                <FormButton\r\n                                    onClick={() =>\r\n                                        setModalShow((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                createTheme: true,\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Create\r\n                                </FormButton>\r\n                            </div>\r\n                        </InputGroup>\r\n\r\n                        {/* Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor' ? '' : 'bgcolor'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            background: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor2' ? '' : 'bgcolor2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Textbox Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'textbg' ? '' : 'textbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Textbox Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'textbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            inputBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).inputBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent' ? '' : 'accent'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            accent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).accent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent2' ? '' : 'accent2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryAccent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryAccent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground' ? '' : 'foreground'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            foreground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).foreground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground2'\r\n                                            ? ''\r\n                                            : 'foreground2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryForeground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryForeground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Muted Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'muted' ? '' : 'muted'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Muted Text\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'muted' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            muted: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).muted\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Faded Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'faded' ? '' : 'faded'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Faded\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'faded' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            faded: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).faded\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Error Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'error' ? '' : 'error'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Error\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'error' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            error: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).error\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Navbar background Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'navbarbg' ? '' : 'navbarbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Navigation Bar Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'navbarbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            navbar: {\r\n                                                ...newThemes[index].navbar,\r\n                                                background: newColor.hex,\r\n                                            },\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).navbar.background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Only displays delete button if the user created the theme */}\r\n                        {!userData?.settings?.selectedTheme.startsWith(\r\n                            'default_themes'\r\n                        ) &&\r\n                            NewData?.id != null && (\r\n                                <FormButton\r\n                                    name='deleteTheme'\r\n                                    style={{ marginTop: '7px' }}\r\n                                    onClick={updateSetting}\r\n                                >\r\n                                    Delete Theme\r\n                                </FormButton>\r\n                            )}\r\n                    </Section>\r\n\r\n                    <Section id='account-adv.settings'>\r\n                        <SectionTitle>Advanced Settings</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>\r\n                                User ID:{' '}\r\n                                <ShownOnHover\r\n                                    onClick={() => {\r\n                                        navigator.clipboard.writeText(\r\n                                            userData.id\r\n                                        )\r\n                                        Toast('Copied to clipboard!', 'info')\r\n                                    }}\r\n                                >\r\n                                    {userData.id}\r\n                                </ShownOnHover>\r\n                            </Form.Label>\r\n                        </InputGroup>\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <FormButton\r\n                                style={{ marginLeft: '0' }}\r\n                                name='closeAccount'\r\n                                onClick={() =>\r\n                                    setModalShow((prev) => {\r\n                                        return { ...prev, deleteAccount: true }\r\n                                    })\r\n                                }\r\n                            >\r\n                                Close Account\r\n                            </FormButton>\r\n                        </InputGroup>\r\n                    </Section>\r\n                </Sections>\r\n            </Pages.PageBody>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React, { useContext, useEffect } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport settings from '../../settings'\r\nimport { IoConstructSharp } from 'react-icons/io5'\r\nimport Pages from '../../components/Pages/Pages'\r\n\r\nconst DivClamp = styled.div`\r\n    text-align: center;\r\n    max-width: 85%;\r\n    width: 1000px;\r\n    margin: auto;\r\n`\r\n\r\nconst Header = styled.h2`\r\n    font-size: clamp(28px, 4vw, 34px);\r\n\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst SectionTitle = styled.h3`\r\n    font-size: clamp(22px, 4vw, 28px);\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n    margin-top: 20px;\r\n`\r\n\r\nconst Description = styled.p`\r\n    font-size: clamp(16px, 4vw, 22px);\r\n\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n`\r\n\r\nconst About = () => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    return (\r\n        <Pages.PageBody>\r\n            <DivClamp>\r\n                <Header>About</Header>\r\n\r\n                <SectionTitle>Creator</SectionTitle>\r\n                <Description>\r\n                    My name is Benjamin, and I am a 13 year old developer, that\r\n                    strives to learn more. I wanted to learn something along the\r\n                    lines of web development. I didn't want to just use html,\r\n                    css, and js, I wanted to try something new! I looked around,\r\n                    and I eventually found a framework called React. Put very\r\n                    simply, it allows me to create much cleaner user interfaces,\r\n                    with much more interactive pages, and a faster websites.\r\n                </Description>\r\n\r\n                <SectionTitle>The Purpose</SectionTitle>\r\n                <Description>\r\n                    I had found some tutorials showing how to create some React\r\n                    projects, but I soon found myself in tutorial hell. I was\r\n                    just following along, not really learning. Since the best\r\n                    way for me to learn is to teach myself, I decided to come up\r\n                    with a project. I didn't want to make a pointless project,\r\n                    one that wasn't used. I wanted to create something my\r\n                    family, and friends could use. I eventually came up with\r\n                    this idea when I was helping my mother cook. She kept having\r\n                    to switch between recipes, and it seemed very annoying. I\r\n                    decided to make this website to help manage, and share your\r\n                    recipes. I know that they are many websites out there just\r\n                    like this, but I wanted it to have more features, no ads,\r\n                    and a cleaner user interface!\r\n                </Description>\r\n\r\n                <SectionTitle>How was it made?</SectionTitle>\r\n                <Description>\r\n                    Since this was my first <i>real</i> React project that I was\r\n                    doing without a tutorial, Stack Overflow, Youtube, Google,\r\n                    and Discord were my best friends. I first figured out how to\r\n                    make the client side of the website, the part that you see.\r\n                    It took a bit to figure out, but I picked it up in the end.\r\n                    I then had to learn how to make the sever side, the part\r\n                    that creates your account, and saves your data and settings.\r\n                    This bit was a little harder than I had originally thought\r\n                    it would be, but it worked out in the end. It's really nice\r\n                    to see that I thought about the code that went into this\r\n                    website, and that I can be proud of it, instead of just\r\n                    writing the code from videos online.\r\n                </Description>\r\n\r\n                {settings.activeDevelopment && (\r\n                    <h5 style={{ color: theme.error }}>\r\n                        <IoConstructSharp /> Development underway...{' '}\r\n                        <IoConstructSharp />\r\n                    </h5>\r\n                )}\r\n\r\n                <div style={{ marginBottom: '20px', marginTop: '20px' }}>\r\n                    <a\r\n                        href='https://github.com/DeathlyBower959/thereciperack'\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        <svg\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0 1 12 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                    <a\r\n                        href='https://youtube.com/DeathlyBower959?sub_confirmation=1'\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                    >\r\n                        <svg\r\n                            style={{ marginLeft: '10px' }}\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M19.615 3.184c-3.604-.246-11.631-.245-15.23 0C.488 3.45.029 5.804 0 12c.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0C23.512 20.55 23.971 18.196 24 12c-.029-6.185-.484-8.549-4.385-8.816zM9 16V8l8 3.993L9 16z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n            </DivClamp>\r\n        </Pages.PageBody>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useForm = (callback, validate, defaultValues = {}, customFunctions = {}) => {\r\n    const [values, setValues] = useState(defaultValues)\r\n    const [errors, setErrors] = useState({})\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback()\r\n        }\r\n    }, [errors])\r\n\r\n    const handleSubmit = (event) => {\r\n        if (customFunctions.handleSubmit) return customFunctions.handleSubmit(event)\r\n\r\n        event?.preventDefault()\r\n\r\n        setErrors(() => {\r\n            const validation = validate(values, true)\r\n\r\n            setIsSubmitting(Object.keys(validation).length === 0)\r\n\r\n            return validation\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (customFunctions.handleChange) return customFunctions.handleChange(event)\r\n\r\n\r\n        event?.persist()\r\n        setErrors((prev) => {\r\n            return { ...prev, [event.target.name]: null }\r\n        })\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }))\r\n    }\r\n\r\n    const addError = (name, message) => {\r\n        if (customFunctions.addError) return customFunctions.addError(name, message)\r\n\r\n        setErrors((prev) => {\r\n            return { ...prev, [name]: message }\r\n        })\r\n    }\r\n\r\n    return {\r\n        addError,\r\n        handleChange,\r\n        setErrors, \r\n        setValues,\r\n        setIsSubmitting,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n    }\r\n}\r\n\r\nexport default useForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.name || isSubmit) {\r\n        if (!values.name) errors.name = 'Your name is required'\r\n        else if (values.name?.toString().trim() == '')\r\n            errors.name = 'Your name is required'\r\n        else if (values.name?.length < 5)\r\n        errors.name = 'Too short, must be at least 5 characters long'\r\n    }\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    if (values.cPassword || isSubmit) {\r\n        if (\r\n            !values.cPassword ||\r\n            values.cPassword?.toString().trim() == '' ||\r\n            values.cPassword != values.password\r\n        )\r\n            errors.cPassword = 'Password does not match'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './SignupValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { cookbook, recipe, shopping, users } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.muted};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    transition: filter 250ms ease-in-out;\r\n`\r\n\r\nconst TextInput = styled(Form.Text)`\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    margin-left: 0;\r\n`\r\n\r\nconst SubmitButton = styled(Form.Button)`\r\n    width: 100%;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst SignupForm = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { AuthLogin } = useContext(AccountContext)\r\n\r\n    const SignUp = async () => {\r\n        const result = await users.createUser(\r\n            values.name,\r\n            values.email,\r\n            values.password\r\n        )\r\n\r\n        if (result?.status == 201) {\r\n            AuthLogin(values.email, values.password)\r\n\r\n            navigate('/')\r\n        } else if (result?.status == 403) {\r\n            addError(\r\n                'email',\r\n                'User with this email already exists, maybe login instead?'\r\n            )\r\n        } else {\r\n            console.log(result)\r\n        }\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit, addError } = useForm(\r\n        SignUp,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <TextInput\r\n                    type='text'\r\n                    name='name'\r\n                    onChange={handleChange}\r\n                    value={values.name || ''}\r\n                    placeholder='Name'\r\n                    required\r\n                />\r\n                {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n                <TextInput\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <TextInput\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n                <TextInput\r\n                    type='password'\r\n                    name='cPassword'\r\n                    onChange={handleChange}\r\n                    value={values.cPassword || ''}\r\n                    placeholder='Confirm Password'\r\n                    required\r\n                />\r\n                {errors.cPassword && (\r\n                    <ErrorMessage>{errors.cPassword}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <SubmitButton style={{ marginTop: '15px' }} onClick={handleSubmit}>\r\n                Sign Up\r\n            </SubmitButton>\r\n            <MutedText style={{ marginTop: '5px', marginBottom: '0' }}>\r\n                Already have an account?\r\n            </MutedText>\r\n            <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Login</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './LoginValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { users, cookbook, recipe, shopping } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.muted};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    transition: filter 250ms ease-in-out;\r\n`\r\n\r\nconst SubmitButton = styled(Form.Button)`\r\n    width: 100%;\r\n`\r\n\r\nconst TextInput = styled(Form.Text)`\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    margin-left: 0;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst LoginForm = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { AuthLogin } = useContext(AccountContext)\r\n\r\n    const Login = () => {\r\n        AuthLogin(values.email, values.password)\r\n\r\n        navigate('/')\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n        Login,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <TextInput\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <TextInput\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <Link to='/resetpassword' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ margin: '5px auto 15px auto' }}>\r\n                    Forgot your password?\r\n                </BoldLink>\r\n            </Link>\r\n            <SubmitButton onClick={handleSubmit}>Login</SubmitButton>\r\n            <MutedText style={{ margin: '10px auto 0 auto' }} href='#'>\r\n                Don't have an account?\r\n            </MutedText>\r\n            <Link to='/signup' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Create one</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion'\r\nimport Account from '../../contexts/AccountContext'\r\nimport SignupForm from './SignupForm'\r\nimport LoginForm from './LoginForm'\r\n\r\nconst BoxContainer = styled.div`\r\n    max-width: 280px;\r\n    width: 75%;\r\n    min-height: 550px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst TopContainer = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    padding: 0 1.8em;\r\n    padding-bottom: 5em;\r\n`\r\n\r\nconst BackDrop = styled(motion.div)`\r\n    width: 160%;\r\n    height: 550px;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 50%;\r\n    transform: rotate(60deg);\r\n    top: -290px;\r\n    left: -70px;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        0deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 80%\r\n    );\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst HeaderText = styled.h2`\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    line-height: 1.24;\r\n    color: ${(props) => props.theme.foreground};\r\n    z-index: 10;\r\n    margin: 0;\r\n`\r\n\r\nconst SmallText = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: 500;\r\n    font-size: 11px;\r\n    z-index: 10;\r\n    margin: 0;\r\n    margin-top: 7px;\r\n`\r\n\r\nconst InnerContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 1.8em;\r\n`\r\n\r\nconst backdropVariants = {\r\n    expanded: {\r\n        width: '233%',\r\n        height: '1050px',\r\n        borderRadius: '20%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n    collapsed: {\r\n        width: '160%',\r\n        height: '550px',\r\n        borderRadius: '50%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n}\r\n\r\nconst expandingTransition = {\r\n    type: 'spring',\r\n    duration: 2.3,\r\n    stiffness: 30,\r\n}\r\n\r\nconst SignupLogin = ({ login }) => {\r\n    const [isExpanded, setExpanded] = useState(true)\r\n\r\n    const [active, setActive] = useState(login ? 'login' : 'signup')\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation(250)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive(login ? 'login' : 'signup')\r\n        }, expandingTransition.duration * 1000 - 1500)\r\n    }, [login])\r\n\r\n    const playExpandingAnimation = (time) => {\r\n        setExpanded(true)\r\n        setTimeout(() => {\r\n            setExpanded(false)\r\n        }, time ?? expandingTransition.duration * 1000 - 1500)\r\n    }\r\n\r\n    const switchToSignup = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('signup')\r\n        }, 400)\r\n    }\r\n\r\n    const switchToSignin = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('login')\r\n        }, 400)\r\n    }\r\n\r\n    return (\r\n            <BoxContainer>\r\n                <TopContainer>\r\n                    <BackDrop\r\n                        initial={false}\r\n                        animate={isExpanded ? 'expanded' : 'collapsed'}\r\n                        variants={backdropVariants}\r\n                        transition={expandingTransition}\r\n                    />\r\n                    {active === 'login' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Welcome</HeaderText>\r\n                            <HeaderText>Back!</HeaderText>\r\n                            <SmallText>Please login to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                    {active === 'signup' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Create</HeaderText>\r\n                            <HeaderText>Account</HeaderText>\r\n                            <SmallText>Please sign-up to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                </TopContainer>\r\n                <InnerContainer>\r\n                    {active === 'login' && <LoginForm />}\r\n                    {active === 'signup' && <SignupForm />}\r\n                </InnerContainer>\r\n            </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupLogin\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { cookbook as cookbookAPI } from '../../../api/api'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner' \r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport defaultImage from '../../../assets/logo.svg'\r\nimport IsCrushed from '../../../contexts/IsCrushedContext'\r\n\r\nconst CardBody = styled(Container)`\r\n    transition: transform 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n\r\n    border-radius: 20px;\r\n    margin-bottom: 15px;\r\n\r\n    background-color: ${(props) => props.theme.thirdBackground};\r\n\r\n    display: flex;\r\n    padding: 0;\r\n`\r\n\r\nconst ImageWrapper = styled(Col)`\r\n    padding: 10px;\r\n    min-height: 100px;\r\n    min-width: 100px;\r\n`\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n    min-height: 100px;\r\n    min-width: 100px;\r\n`\r\n\r\nconst CardInfo = styled(Col)`\r\n    padding: 1rem;\r\n`\r\n\r\nconst CardTitle = styled.h5`\r\n    margin-bottom: 0px;\r\n    margin-left: 10px;\r\n    overflow-wrap: anywhere;\r\n    word-break: break-all;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst CardDescription = styled.p`\r\n    margin-left: 10px;\r\n    margin-top: 5px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n    overflow-wrap: anywhere;\r\n    word-break: break-all;\r\n`\r\n\r\nconst CardTags = styled.p`\r\n    margin: 2px auto 0px 18px;\r\n    color: ${(props) => props.theme.muted};\r\n\r\n    word-break: break-all;\r\n    overflow-wrap: anywhere;\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst CookbookCard = ({ cookbook, deleteCookbook }) => {\r\n    const {\r\n        name = 'No Name',\r\n        coverImage,\r\n        description = 'No Description',\r\n        tags,\r\n        id,\r\n    } = cookbook\r\n\r\n    const isCrushed = useContext(IsCrushed)\r\n\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    return (\r\n        <CardBody style={{ display: isCrushed ? 'block' : 'flex' }}>\r\n            <ImageWrapper sm={3} style={{width: isCrushed && '100%'}}>\r\n                {loading && <StyledSpinner animation='border' />}\r\n\r\n                <Link to={`/cookbook/${id}`}>\r\n                    <CoverImage\r\n                        src={coverImage ?? defaultImage}\r\n                        className='card-img-top'\r\n                        style={{\r\n                            display: loading ? 'none' : 'block',\r\n                        }}\r\n                        alt='Not found... :('\r\n                        onLoad={() => setLoading(false)}\r\n                    />\r\n                </Link>\r\n            </ImageWrapper>\r\n            <CardInfo sm={7}>\r\n                <Link\r\n                    style={{\r\n                        color: '#000',\r\n                        textDecoration: 'none',\r\n                    }}\r\n                    to={`/cookbook/${id}`}\r\n                >\r\n                    <CardTitle className='card-title'>{name}</CardTitle>\r\n                </Link>\r\n                <CardTags className='card-text'>\r\n                    {tags.join(', ').trim()}\r\n                </CardTags>\r\n                <hr\r\n                    style={{\r\n                        margin: '10px auto 10px 10px',\r\n                        filter: 'blur(1px)',\r\n                        color: theme.foreground,\r\n                    }}\r\n                />\r\n                <CardDescription className='card-text'>\r\n                    {description}\r\n                </CardDescription>\r\n                <div>\r\n                    <Link to={`/cookbook/${id}/edit`}>\r\n                        <Button style={{ margin: '5px 5px 0px 5px' }}>\r\n                            Edit\r\n                        </Button>\r\n                    </Link>\r\n                    <Button\r\n                        style={{ margin: '5px 5px 0px 5px' }}\r\n                        variant='danger'\r\n                        onClick={() => deleteCookbook(id)}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </CardInfo>\r\n        </CardBody>\r\n    )\r\n}\r\n\r\nexport default CookbookCard\r\n","import React, { useContext } from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { ThemeContext } from 'styled-components'\r\nimport Account from '../../../contexts/AccountContext'\r\nimport CookbookCard from './CookbookCard'\r\n\r\nconst CookbooksList = ({ filteredCookbooks, deleteCookbook }) => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const { userData, setUserData } = useContext(Account)\r\n\r\n    const handleDragEnd = (res) => {\r\n        if (!res.destination) return\r\n\r\n        const items = Array.from(filteredCookbooks)\r\n        const [reorderedItem] = items.splice(res.source.index, 1)\r\n        items.splice(res.destination.index, 0, reorderedItem)\r\n\r\n        setUserData(prev => { \r\n            return {\r\n                ...prev,\r\n                cookbooks: items\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {filteredCookbooks?.length > 0 ? (\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId='cookbookListDrop'>\r\n                        {(provided) => (\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {filteredCookbooks.map((book, index) => {\r\n                                    return (\r\n                                        <Draggable\r\n                                            key={book.id}\r\n                                            draggableId={book.id}\r\n                                            index={index}\r\n                                        >\r\n                                            {(provided) => (\r\n                                                <div\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    ref={provided.innerRef}\r\n                                                >\r\n                                                    <CookbookCard\r\n                                                        cookbook={book}\r\n                                                        deleteCookbook={\r\n                                                            deleteCookbook\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            ) : (\r\n                <Alert\r\n                    style={{\r\n                        marginTop: '15px',\r\n                        backgroundColor: theme.alert.background,\r\n                        color: theme.alert.color,\r\n                        borderColor: theme.alert.border,\r\n                    }}\r\n                    variant='danger'\r\n                >\r\n                    <Alert.Heading>Hmm...</Alert.Heading>\r\n                    <p>Seems like there are no cookbooks with that name!</p>\r\n                </Alert>\r\n            )}\r\n            <div style={{ marginTop: '20px' }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CookbooksList\r\n","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport IsCrushedContext from '../../../contexts/IsCrushedContext'\r\nimport AccountContext from '../../../contexts/AccountContext'\r\n\r\nimport CookbookCard from './CookbookCard'\r\nimport { cookbook } from '../../../api/api'\r\nimport ToastNotif from '../../../contexts/ToastNotifContext'\r\nimport { Alert, Spinner } from 'react-bootstrap'\r\nimport CookbookList from './CookbooksList'\r\nimport Form from '../../../components/Forms/Form'\r\n\r\nconst DivBody = styled.div`\r\n    width: 80%;\r\n    margin: 50px auto;\r\n`\r\n\r\nconst SearchBox = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    appearance: none;\r\n    border-radius: 0.5rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst TagSelect = styled.select`\r\n    padding: 0.475rem 2.25rem 0.475rem 0.55rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.muted};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    border-radius: 0.5rem;\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst NewButton = styled.button`\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n\r\n    width: 50px;\r\n    height: 50px;\r\n`\r\n\r\nconst SearchBar = () => {\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, setUserData } = useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [searchField, setSearchField] = useState('')\r\n    const [tagField, setTagField] = useState('none')\r\n\r\n    const filteredCookbooks = userData?.cookbooks?.filter((book) => {\r\n        return book.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n\r\n    const handleChange = (e, type) => {\r\n        if (type === 'search') setSearchField(e.target.value)\r\n        else if (type === 'tag') setTagField(e.target.value)\r\n    }\r\n\r\n    const deleteCookbook = async (id) => {\r\n        const res = await cookbook.deleteCookbook(userData.id, id)\r\n        if (res?.status != 200) Toast('Failed to delete cookbook...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Cookbook deleted!', 'success')\r\n        }\r\n    }\r\n\r\n    const getTags = () => {\r\n        let tags = []\r\n        userData?.cookbooks?.forEach(cookbook => {\r\n            cookbook.tags?.forEach(tag => {\r\n                if (!tags.includes(tag)) tags.push(tag)\r\n            })\r\n        })\r\n\r\n        return tags;\r\n    }\r\n\r\n    const tags = getTags();\r\n    const tagOptions = tags.map((tag, index) => (\r\n        <option key={`${tag.charCodeAt(Math.random() * tag.length)}${index}`} value={tag}>\r\n            {tag}\r\n        </option>\r\n    ))\r\n\r\n    return (\r\n        <DivBody>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    margin: `10px auto 10px auto`,\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <SearchBox\r\n                    placeholder='Search Cookbooks'\r\n                    aria-label='Search Cookbooks'\r\n                    onChange={(e) => handleChange(e, 'search')}\r\n                />\r\n                {!isCrushed && (\r\n                    <TagSelect\r\n                        value={tagField}\r\n                        onChange={(e) => handleChange(e, 'tag')}\r\n                        style={{ width: '35%', marginLeft: '10px' }}\r\n                    >\r\n                        <option value='none'>Choose...</option>\r\n                        {tagOptions}\r\n                    </TagSelect>\r\n                )}\r\n                <Link to='/cookbook/create'>\r\n                    <Form.Button\r\n                        style={{ marginLeft: '10px' }}\r\n                        disabled={userData == null || userData == undefined}\r\n                    >\r\n                        New\r\n                    </Form.Button>\r\n                </Link>\r\n            </div>\r\n            {isCrushed && (\r\n                <TagSelect\r\n                    value={tagField}\r\n                    onChange={(e) => handleChange(e, 'tag')}\r\n                    style={{ width: '100%', marginBottom: '10px' }}\r\n                >\r\n                    <option value='none'>Choose...</option>\r\n                    {tagOptions.map((x) => {\r\n                        return <option value={x}>{x}</option>\r\n                    })}\r\n                </TagSelect>\r\n            )}\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                {userData == null ||\r\n                    (userData == 'none' && (\r\n                        <div style={{ width: '100%' }}>\r\n                            <div style={{ margin: '10px 50% 0px 50%' }}>\r\n                                <StyledSpinner animation='border' />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <div\r\n                    style={{\r\n                        width: '70%',\r\n                        display:\r\n                            userData == null || userData == 'none'\r\n                                ? 'none'\r\n                                : '',\r\n                    }}\r\n                >\r\n                    {userData && userData?.cookbooks?.length == 0 ? (\r\n                        <Alert\r\n                            variant='danger'\r\n                            style={{\r\n                                marginTop: '10px',\r\n                                backgroundColor: theme.alert.background,\r\n                                color: theme.alert.color,\r\n                                borderColor: theme.alert.border,\r\n                            }}\r\n                        >\r\n                            <Alert.Heading>Hmm...</Alert.Heading>\r\n                            Seems like you have no cookbooks! Try creating\r\n                            one...\r\n                        </Alert>\r\n                    ) : (\r\n                        <CookbookList\r\n                            filteredCookbooks={filteredCookbooks}\r\n                            deleteCookbook={deleteCookbook}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Pages from '../../../components/Pages/Pages'\r\nimport SearchBar from '../Cookbooks/SearchBar'\r\n\r\n\r\nconst Cookbooks = () => {\r\n    \r\n    return (\r\n        <Pages.PageBody>\r\n            <SearchBar/>\r\n        </Pages.PageBody>\r\n    )\r\n}\r\n\r\nexport default Cookbooks\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.name || isSubmit) {\r\n        if (!values.name) errors.name = 'The name is required'\r\n        else if (values.name?.toString().trim() == '')\r\n            errors.name = 'The name is required'\r\n    }\r\n\r\n    if (values.description || isSubmit) {\r\n        if (!values.description) errors.description = 'A description is required'\r\n        else if (values.description.toString().trim() == '')\r\n            errors.description = 'A description is required'\r\n    }\r\n\r\n    return errors\r\n}\r\n","export const resizeBase64Img = (base64, newWidth, newHeight) => {\r\n    return new Promise((resolve, reject) => {\r\n        var canvas = document.createElement('canvas')\r\n        canvas.style.width = newWidth.toString() + 'px'\r\n        canvas.style.height = newHeight.toString() + 'px'\r\n        let context = canvas.getContext('2d')\r\n        let img = document.createElement('img')\r\n        img.src = base64\r\n        img.onload = function () {\r\n            context.scale(newWidth / img.width, newHeight / img.height)\r\n            context.drawImage(img, 0, 0)\r\n            const dataURL = canvas.toDataURL()\r\n            canvas.remove()\r\n            resolve(dataURL)\r\n        }\r\n    })\r\n}\r\n\r\nexport const byteSize = (string, unit) => {\r\n    const size = new Blob([string]).size\r\n    \r\n    \r\n    if (unit == 'kb') return size * 0.001\r\n    if (unit == 'mb') return size * 0.000001\r\n\r\n    return size\r\n}\r\n","import React, { useContext, useRef } from 'react'\r\nimport { Form as FormWrapper, Container, Row, Col } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { cookbook } from '../../../api/api'\r\nimport Account from '../../../contexts/AccountContext'\r\nimport IsCrushed from '../../../contexts/IsCrushedContext'\r\nimport ToastNotif from '../../../contexts/ToastNotifContext'\r\nimport useForm from '../../../hooks/useForm'\r\nimport validate from './CreateValidation'\r\nimport { useNavigate } from 'react-router'\r\nimport { byteSize } from '../../../utils/image'\r\nimport Pages from '../../../components/Pages/Pages'\r\nimport Form from '../../../components/Forms/Form'\r\n\r\nconst DivBody = styled(Pages.PageBody)`\r\n    text-align: center;\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 60%;\r\n    border-radius: 8px;\r\n    resize: none;\r\n    min-height: 42px;\r\n    height: 60px;\r\n    overflow: hidden;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 5px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\nconst CookbookName = styled.h1`\r\n    margin-top: 15px;\r\n    margin-bottom: 20px;\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst FormRow = styled(Row)`\r\n    margin-bottom: 10px;\r\n    justify-content: center;\r\n`\r\n\r\nconst CreateCookbook = () => {\r\n    const Create = async () => {\r\n        const res = await cookbook.createCookbook(userData.id, {\r\n            ...values,\r\n            tags: values?.tags?.split(',')?.map((item) => item?.trim()) || [],\r\n        })\r\n        if (res.status != 201) Toast('Failed to create cookbook...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Created cookbook!', 'success')\r\n            navigate(-1)\r\n        }\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const Toast = useContext(ToastNotif)\r\n    const isCrushed = useContext(IsCrushed)\r\n    const { userData, setUserData } = useContext(Account)\r\n\r\n    const coverImageRef = useRef()\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        setErrors,\r\n        setValues,\r\n        setIsSubmitting,\r\n        handleSubmit,\r\n    } = useForm(\r\n        Create,\r\n        validate,\r\n        {},\r\n        {\r\n            handleChange: (e) => {\r\n                if (e?.persist) e.persist()\r\n\r\n                if (e.target.name == 'coverImage') {\r\n                    if (\r\n                        !['.png', '.jpg', '.jpeg', '.bmp', '.ico'].some((ex) =>\r\n                            e.target.files[0]?.name?.toLowerCase()?.endsWith(ex)\r\n                        )\r\n                    ) {\r\n                        e.target.value = ''\r\n                        setValues((values) => ({\r\n                            ...values,\r\n                            [e.target.name]: null,\r\n                        }))\r\n                        return\r\n                    }\r\n\r\n                    let reader = new FileReader()\r\n                    reader.onload = (e) => {\r\n                        // Files bigger than 10mb will show a warning\r\n                        if (byteSize(e.target.result, 'mb') >= 10) {\r\n                            Toast('File to large!', 'warn')\r\n                            e.target.value = ''\r\n                            return\r\n                        }\r\n                        setValues((values) => ({\r\n                            ...values,\r\n                            coverImage: e.target.result,\r\n                        }))\r\n                    }\r\n                    reader.readAsDataURL(e.target.files[0])\r\n                    return\r\n                }\r\n\r\n                setErrors((prev) => {\r\n                    return { ...prev, [e.target.name]: null }\r\n                })\r\n\r\n                setValues((values) => ({\r\n                    ...values,\r\n                    [e.target.name]: e.target.value,\r\n                }))\r\n            },\r\n        }\r\n    )\r\n\r\n    return (\r\n        <DivBody>\r\n            <FormWrapper\r\n                style={{ width: '100%' }}\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <CookbookName>\r\n                            {values.name || 'New Cookbook'}\r\n                        </CookbookName>\r\n                    </Row>\r\n                    <FormRow>\r\n                        <Form.Text\r\n                            name='name'\r\n                            onChange={handleChange}\r\n                            value={values.name || ''}\r\n                            placeholder='Name'\r\n                            required\r\n                        />\r\n                        {errors.name && (\r\n                            <ErrorMessage>{errors.name}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    <FormRow>\r\n                        <Form.TextArea\r\n                            name='description'\r\n                            onChange={handleChange}\r\n                            value={values.description || ''}\r\n                            placeholder='Description'\r\n                            required\r\n                        />\r\n                        {errors.description && (\r\n                            <ErrorMessage>{errors.description}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    <FormRow\r\n                        style={{\r\n                            width: isCrushed ? '60%' : '50%',\r\n                            margin: '0 auto',\r\n                        }}\r\n                    >\r\n                        <Col>\r\n                            <Form.File\r\n                                inputRef={coverImageRef}\r\n                                label='Cover Image'\r\n                                name='coverImage'\r\n                                onChange={(e) => handleChange(e)}\r\n                            />\r\n                            {errors.coverImage && (\r\n                                <ErrorMessage>{errors.coverImage}</ErrorMessage>\r\n                            )}\r\n                        </Col>\r\n\r\n                        {!isCrushed && (\r\n                            <Col>\r\n                                <Form.Text\r\n                                    style={{ width: '100%' }}\r\n                                    name='tags'\r\n                                    onChange={handleChange}\r\n                                    value={values.tags || ''}\r\n                                    placeholder='Tags (separated by \",\")'\r\n                                />\r\n                                {errors.tags && (\r\n                                    <ErrorMessage>{errors.tags}</ErrorMessage>\r\n                                )}\r\n                            </Col>\r\n                        )}\r\n                    </FormRow>\r\n                    {isCrushed && (\r\n                        <FormRow style={{ marginTop: '10px' }}>\r\n                            <Form.Text\r\n                                style={{ width: '60%' }}\r\n                                name='tags'\r\n                                onChange={handleChange}\r\n                                value={values.tags || ''}\r\n                                placeholder='Tags (separated by \",\")'\r\n                            />\r\n                            {errors.tags && (\r\n                                <ErrorMessage>{errors.tags}</ErrorMessage>\r\n                            )}\r\n                        </FormRow>\r\n                    )}\r\n                    <br />\r\n                    <Form.Button>Create</Form.Button>\r\n                    <Form.Button\r\n                        type='button'\r\n                        muted\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        Cancel\r\n                    </Form.Button>\r\n                </Container>\r\n            </FormWrapper>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default CreateCookbook\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport defaultImage from '../../../assets/logo.svg'\r\nimport IsCrushed from '../../../contexts/IsCrushedContext'\r\n\r\nconst CardBody = styled(Container)`\r\n    transition: transform 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n\r\n    border-radius: 20px;\r\n    margin-bottom: 15px;\r\n\r\n    background-color: ${(props) => props.theme.thirdBackground};\r\n\r\n    display: flex;\r\n    padding: 0;\r\n`\r\n\r\nconst ImageWrapper = styled(Col)`\r\n    padding: 10px;\r\n    min-height: 100px;\r\n    min-width: 100px;\r\n    ${(props) => props.isCrushed && 'width: 100%;'}\r\n`\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n    min-height: 100px;\r\n    min-width: 100px;\r\n`\r\n\r\nconst CardInfo = styled(Col)`\r\n    padding: 1rem;\r\n`\r\n\r\nconst CardTitle = styled.h5`\r\n    margin-bottom: 0px;\r\n    margin-left: 10px;\r\n    overflow-wrap: anywhere;\r\n    word-break: break-all;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst CardDescription = styled.p`\r\n    margin-left: 10px;\r\n    margin-top: 5px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n    overflow-wrap: anywhere;\r\n    word-break: break-all;\r\n`\r\n\r\nconst CardTags = styled.p`\r\n    margin: 2px auto 0px 18px;\r\n    color: ${(props) => props.theme.muted};\r\n\r\n    word-break: break-all;\r\n    overflow-wrap: anywhere;\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst CookbookCard = ({ cookbook, deleteCookbook }) => {\r\n    const {\r\n        name = 'No Name',\r\n        coverImage,\r\n        description = 'No Description',\r\n        tags,\r\n        id,\r\n    } = cookbook\r\n\r\n    const isCrushed = useContext(IsCrushed)\r\n\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    return (\r\n        <CardBody style={{ display: isCrushed ? 'block' : 'flex' }}>\r\n            <ImageWrapper sm={3} isCrushed={isCrushed}>\r\n                {loading && <StyledSpinner animation='border' />}\r\n\r\n                <Link to={`/cookbook/${id}`}>\r\n                    <CoverImage\r\n                        src={coverImage ?? defaultImage}\r\n                        isCrushed={isCrushed}\r\n                        style={{\r\n                            display: loading ? 'none' : 'block',\r\n                        }}\r\n                        alt='Not found... :('\r\n                        onLoad={() => setLoading(false)}\r\n                    />\r\n                </Link>\r\n            </ImageWrapper>\r\n            <CardInfo sm={7}>\r\n                <Link\r\n                    style={{\r\n                        color: '#000',\r\n                        textDecoration: 'none',\r\n                    }}\r\n                    to={`/cookbook/${id}`}\r\n                >\r\n                    <CardTitle className='card-title'>{name}</CardTitle>\r\n                </Link>\r\n                <CardTags className='card-text'>\r\n                    {tags.join(', ').trim()}\r\n                </CardTags>\r\n                <hr\r\n                    style={{\r\n                        margin: '10px auto 10px 10px',\r\n                        filter: 'blur(1px)',\r\n                        color: theme.foreground,\r\n                    }}\r\n                />\r\n                <CardDescription className='card-text'>\r\n                    {description}\r\n                </CardDescription>\r\n                <div>\r\n                    <Link to={`/cookbook/${id}/edit`}>\r\n                        <Button style={{ margin: '5px 5px 0px 5px' }}>\r\n                            Edit\r\n                        </Button>\r\n                    </Link>\r\n                    <Button\r\n                        style={{ margin: '5px 5px 0px 5px' }}\r\n                        variant='danger'\r\n                        onClick={() => deleteCookbook(id)}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </CardInfo>\r\n        </CardBody>\r\n    )\r\n}\r\n\r\nexport default CookbookCard\r\n","import React, { useContext } from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { ThemeContext } from 'styled-components'\r\nimport Account from '../../../contexts/AccountContext'\r\nimport RecipeCard from './RecipeCard'\r\n\r\nconst CookbooksList = ({ filteredRecipes, deleteRecipe }) => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const handleDragEnd = (res) => {\r\n        if (!res.destination) return\r\n        //    const items = Array.from(filteredRecipes)\r\n        //    const [reorderedItem] = items.splice(res.source.index, 1);\r\n        //    items.splice(res.destination.index, 0, reorderedItem)\r\n\r\n        //    setRecipes(items)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {filteredRecipes?.length > 0 ? (\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId='recipeListDrop'>\r\n                        {(provided) => (\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {filteredRecipes.map((book, index) => {\r\n                                    return (\r\n                                        <Draggable\r\n                                            key={book.id}\r\n                                            draggableId={book.id}\r\n                                            index={index}\r\n                                        >\r\n                                            {(provided) => (\r\n                                                <div\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    ref={provided.innerRef}\r\n                                                >\r\n                                                    <RecipeCard\r\n                                                        cookbook={book}\r\n                                                        deleteRecipe={\r\n                                                            deleteRecipe\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            ) : (\r\n                <Alert\r\n                    style={{\r\n                        marginTop: '15px',\r\n                        backgroundColor: theme.alert.background,\r\n                        color: theme.alert.color,\r\n                        borderColor: theme.alert.border\r\n                    }}\r\n                    variant='danger'\r\n                >\r\n                    <Alert.Heading>Hmm...</Alert.Heading>\r\n                    <p>Seems like there are no recipes in this cookbook with that name!</p>\r\n                </Alert>\r\n            )}\r\n            <div style={{ marginTop: '20px' }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CookbooksList\r\n","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport IsCrushedContext from '../../../contexts/IsCrushedContext'\r\nimport AccountContext from '../../../contexts/AccountContext'\r\n\r\nimport RecipeCard from './RecipeCard'\r\nimport { recipe } from '../../../api/api'\r\nimport ToastNotif from '../../../contexts/ToastNotifContext'\r\nimport { Alert, Spinner } from 'react-bootstrap'\r\nimport RecipeList from './RecipeList'\r\nimport Form from '../../../components/Forms/Form'\r\n\r\nconst DivBody = styled.div`\r\n    width: 80%;\r\n    margin: 50px auto;\r\n`\r\n\r\nconst SearchBox = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    appearance: none;\r\n    border-radius: 0.5rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst TagSelect = styled.select`\r\n    padding: 0.475rem 2.25rem 0.475rem 0.55rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.muted};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    border-radius: 0.5rem;\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst NewButton = styled.button`\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n\r\n    width: 50px;\r\n    height: 50px;\r\n`\r\n\r\nconst SearchBar = () => {\r\n    const { cookbookID } = useParams()\r\n\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, setUserData } = useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [searchField, setSearchField] = useState('')\r\n    const [tagField, setTagField] = useState('none')\r\n\r\n    const filteredRecipes = userData?.cookbooks\r\n        ?.find((x) => x.id == cookbookID).recipes\r\n        ?.filter((recipe) => {\r\n            return recipe?.name\r\n                .toLowerCase()\r\n                .includes(searchField.toLowerCase())\r\n        })\r\n\r\n\r\n    const handleChange = (e, type) => {\r\n        if (type === 'search') setSearchField(e.target.value)\r\n        else if (type === 'tag') setTagField(e.target.value)\r\n    }\r\n\r\n    const deleteRecipe = async (cookbookID, recipeID) => {\r\n        const res = await recipe.deleteRecipe(userData.id, cookbookID, recipeID)\r\n        if (res?.status != 200) Toast('Failed to delete recipe...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Recipe deleted!', 'success')\r\n        }\r\n    }\r\n\r\n    const getTags = () => {\r\n        let tags = []\r\n        userData?.cookbooks\r\n            ?.find((x) => x.id == cookbookID)\r\n            ?.recipes.forEach((recipe) => {\r\n                recipe.tags?.forEach((tag) => {\r\n                    if (!tags.includes(tag)) tags.push(tag)\r\n                })\r\n            })\r\n\r\n        return tags\r\n    }\r\n\r\n    const tags = getTags()\r\n    const tagOptions = tags.map((tag, index) => (\r\n        <option\r\n            key={`${tag.charCodeAt(Math.random() * tag.length)}${index}`}\r\n            value={tag}\r\n        >\r\n            {tag}\r\n        </option>\r\n    ))\r\n\r\n    return (\r\n        <DivBody>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    margin: `10px auto 10px auto`,\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <SearchBox\r\n                    placeholder='Search Recipes'\r\n                    aria-label='Search Recipes'\r\n                    onChange={(e) => handleChange(e, 'search')}\r\n                />\r\n                {!isCrushed && (\r\n                    <TagSelect\r\n                        value={tagField}\r\n                        onChange={(e) => handleChange(e, 'tag')}\r\n                        style={{ width: '35%', marginLeft: '10px' }}\r\n                    >\r\n                        <option value='none'>Choose...</option>\r\n                        {tagOptions}\r\n                    </TagSelect>\r\n                )}\r\n                <Link to='recipe/create'>\r\n                    <Form.Button\r\n                        style={{ marginLeft: '10px' }}\r\n                        disabled={userData == null || userData == undefined}\r\n                    >\r\n                        New\r\n                    </Form.Button>\r\n                </Link>\r\n            </div>\r\n            {isCrushed && (\r\n                <TagSelect\r\n                    value={tagField}\r\n                    onChange={(e) => handleChange(e, 'tag')}\r\n                    style={{ width: '100%', marginBottom: '10px' }}\r\n                >\r\n                    <option value='none'>Choose...</option>\r\n                    {tagOptions.map((x) => {\r\n                        return <option value={x}>{x}</option>\r\n                    })}\r\n                </TagSelect>\r\n            )}\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                {userData == null ||\r\n                    (userData == 'none' && (\r\n                        <div style={{ width: '100%' }}>\r\n                            <div style={{ margin: '10px 50% 0px 50%' }}>\r\n                                <StyledSpinner animation='border' />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <div\r\n                    style={{\r\n                        width: '70%',\r\n                        display:\r\n                            userData == null || userData == 'none'\r\n                                ? 'none'\r\n                                : '',\r\n                    }}\r\n                >\r\n                    {userData && userData?.cookbooks?.length == 0 ? (\r\n                        <Alert\r\n                            variant='danger'\r\n                            style={{\r\n                                marginTop: '10px',\r\n                                backgroundColor: theme.alert.background,\r\n                                color: theme.alert.color,\r\n                                borderColor: theme.alert.border,\r\n                            }}\r\n                        >\r\n                            <Alert.Heading>Hmm...</Alert.Heading>\r\n                            Seems like you have no cookbooks! Try creating\r\n                            one...\r\n                        </Alert>\r\n                    ) : (\r\n                        <RecipeList\r\n                            filteredRecipes={filteredRecipes}\r\n                            deleteRecipe={deleteRecipe}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Pages from '../../../components/Pages/Pages'\r\nimport SearchBar from './SearchBar'\r\n\r\n\r\nconst Recipes = () => {\r\n    \r\n    return (\r\n        <Pages.PageBody>\r\n            <SearchBar/>\r\n        </Pages.PageBody>\r\n    )\r\n}\r\n\r\nexport default Recipes\r\n","import { useEffect, useState } from 'react'\r\nimport { Route, Routes as ReactRoutes } from 'react-router-dom'\r\nimport Routes from './components/Routes/Routes'\r\n\r\nimport { shopping, users, recipe, cookbook } from './api/api'\r\n\r\nimport styled, { ThemeProvider } from 'styled-components'\r\n\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport Landing from './pages/Landing/Landing'\r\n\r\nimport IsCrushed from './contexts/IsCrushedContext'\r\nimport ToastNotifContext from './contexts/ToastNotifContext'\r\nimport AccountContext from './contexts/AccountContext'\r\n\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport { IoConstructSharp } from 'react-icons/io5'\r\n\r\nimport defaultThemes from './themes.json'\r\nimport settings from './settings'\r\n\r\nimport Navbar from './components/Navigation/Navbar.jsx'\r\n\r\nimport PageNotFound from './pages/PageNotFound/PageNotFound'\r\nimport Account from './pages/Account/Account'\r\nimport About from './pages/About/About'\r\nimport SignupLogin from './pages/Signup-Login/Signup-Login'\r\nimport Cookbooks from './pages/CookbookPages/Cookbooks/Cookbooks'\r\nimport CreateCookbook from './pages/CookbookPages/CreateCookbook/CreateCookbook'\r\nimport Recipes from './pages/RecipePages/Recipes/Recipes'\r\n\r\nconst AppContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Background = styled.div`\r\n    background-color: ${(props) => props.theme.background};\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n`\r\n\r\nconst App = () => {\r\n    const [localAuth, setLocalAuth] = useLocalStorage('email.password', {\r\n        email: null,\r\n        password: null,\r\n    })\r\n\r\n    const AuthLogin = async (email, password) => {\r\n        const LoginPromise = () => {\r\n            return new Promise(async (resolve, reject) => {\r\n                const retrievedUser = await users.getUserHashed(email, password)\r\n\r\n                if (!retrievedUser || retrievedUser?.status != 200) {\r\n                    if (userData == 'none') setUserData(null)\r\n                    return reject('User not found')\r\n                }\r\n\r\n                setLocalAuth({ email, password })\r\n                setUserData(retrievedUser.data)\r\n                resolve(retrievedUser.data)\r\n            })\r\n        }\r\n\r\n        if (email && password) {\r\n            SendToast(\r\n                {\r\n                    promise: LoginPromise,\r\n                    pending: 'Logging you in...',\r\n                    error: 'Failed to login!',\r\n                    success: 'Successfully logged in!',\r\n                },\r\n                'promise'\r\n            )\r\n        } else {\r\n            console.error('No email or password')\r\n            if (userData == 'none') setUserData(null)\r\n        }\r\n    }\r\n\r\n    const AuthLogout = () => {\r\n        setUserData(null)\r\n        setLocalAuth({ email: null, password: null })\r\n    }\r\n\r\n    const [userData, setUserData] = useState('none')\r\n\r\n    const [isCrushed, setIsCrushed] = useState(false)\r\n\r\n    const theme =\r\n        (userData?.settings?.themes[\r\n            userData?.settings?.themes.findIndex(\r\n                (theme) => theme.themeID == userData?.settings?.selectedTheme\r\n            )\r\n        ] ||\r\n            userData?.settings?.themes.find(\r\n                (theme) => theme.themeID == 'default_themes.dark'\r\n            )) ??\r\n        defaultThemes.themes[0]\r\n\r\n    useEffect(() => {\r\n        if (settings.activeDevelopment)\r\n            SendToast(\r\n                `This app is still in development!`,\r\n                '',\r\n                theme,\r\n                IoConstructSharp\r\n            )\r\n\r\n        AuthLogin(localAuth?.email, localAuth?.password)\r\n\r\n        const onWindowResize = () => {\r\n            if (window.innerWidth < 768) {\r\n                setIsCrushed(true)\r\n            } else {\r\n                setIsCrushed(false)\r\n            }\r\n        }\r\n\r\n        window.removeEventListener('resize', onWindowResize)\r\n\r\n        onWindowResize()\r\n\r\n        window.addEventListener('resize', onWindowResize.bind(this))\r\n    }, [])\r\n\r\n    const SendToast = async (\r\n        message,\r\n        type,\r\n        currentTheme = theme,\r\n        icon = null\r\n    ) => {\r\n        if (!message) return console.error('Failed to send toast, no message!')\r\n\r\n        switch (type) {\r\n            case 'success':\r\n                toast.success(message, {\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'info':\r\n                toast.info(message, {\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'warn':\r\n                toast.warn(message, {\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'error':\r\n                toast.error(message, {\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'promise':\r\n                if (!message.promise)\r\n                    return console.log('Error sending notification!')\r\n\r\n                const response = await toast.promise(message.promise, {\r\n                    pending: {\r\n                        render() {\r\n                            return message.pending || 'Working on it...'\r\n                        },\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    success: {\r\n                        render() {\r\n                            return message.success || 'All done!'\r\n                        },\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    error: {\r\n                        render() {\r\n                            return (\r\n                                message.error || 'Whoops, this action failed!'\r\n                            )\r\n                        },\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                })\r\n\r\n                return response\r\n            default:\r\n                toast(message, {\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContainer>\r\n            <ToastContainer\r\n                position='bottom-right'\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <ToastNotifContext.Provider value={SendToast}>\r\n                <AccountContext.Provider\r\n                    value={{\r\n                        localAuth,\r\n                        setLocalAuth,\r\n                        AuthLogin,\r\n                        AuthLogout,\r\n                        userData,\r\n                        setUserData,\r\n                    }}\r\n                >\r\n                    <ThemeProvider theme={theme}>\r\n                        <IsCrushed.Provider value={isCrushed}>\r\n                            <Background />\r\n                            <Navbar />\r\n                            <ReactRoutes>\r\n                                {/* Page not found */}\r\n                                <Route path='*' element={<PageNotFound />} />\r\n\r\n                                {/* Landing Page */}\r\n                                <Route path='/' element={<Landing />} />\r\n\r\n                                {/* Short Url */}\r\n                                <Route path='/:code' element={<Landing />} />\r\n\r\n                                {/* Extra Routes */}\r\n                                <Route path='/about' element={<About />} />\r\n\r\n                                {/* No Account */}\r\n                                <Route element={<Routes.Public />}>\r\n                                    <Route\r\n                                        path='/signup'\r\n                                        element={<SignupLogin login={false} />}\r\n                                    />\r\n\r\n                                    <Route\r\n                                        path='/login'\r\n                                        element={<SignupLogin login={true} />}\r\n                                    />\r\n                                </Route>\r\n\r\n                                {/* Requires Account/Signed in */}\r\n                                <Route element={<Routes.Private />}>\r\n                                    {/* Manage Account */}\r\n                                    <Route\r\n                                        path='/account'\r\n                                        element={<Account />}\r\n                                    />\r\n\r\n                                    {/* //!COOKBOOKS */}\r\n                                    {/* View all cookbooks */}\r\n                                    <Route\r\n                                        path='/cookbooks'\r\n                                        element={<Cookbooks />}\r\n                                    />\r\n\r\n                                    {/* Create a new cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/create'\r\n                                        element={<CreateCookbook />}\r\n                                    />\r\n\r\n                                    {/* View all recipes in a cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID'\r\n                                        exact\r\n                                        element={<Recipes />}\r\n                                    />\r\n\r\n                                    {/* Edit a cookbook (name, desc, img) */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* //!RECIPES */}\r\n                                    {/* Create a recipe in a certain cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/create'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* View recipe */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/:recipeID'\r\n                                        exact\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* Edit recipe */}\r\n                                    <Route\r\n                                        path='/cookbooks/:cookbookID/recipe/:recipeID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n                                </Route>\r\n                            </ReactRoutes>\r\n                        </IsCrushed.Provider>\r\n                    </ThemeProvider>\r\n                </AccountContext.Provider>\r\n            </ToastNotifContext.Provider>\r\n        </AppContainer>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'thereciperack-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue !== null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    // console.log(`Saving ${prefixedKey} as data:\\n${JSON.stringify(value)}`)\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\n\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\n\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}