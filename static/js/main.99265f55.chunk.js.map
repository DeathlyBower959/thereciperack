{"version":3,"sources":["settings.js","api/cookbook.js","api/users.js","contexts/AccountContext.js","components/Routes/Routes.js","components/Routes/Private.jsx","components/Routes/Public.jsx","contexts/IsCrushedContext.js","components/Navigation/NavButton.jsx","components/Navigation/NavLink.jsx","components/Navigation/Navbar.js","assets/logo.svg","components/Navigation/Navbar.jsx","assets/ripped.png","pages/PageNotFound/PageNotFound.jsx","hooks/useForm.js","pages/Signup-Login/SignupValidation.js","components/Forms/Checkbox.jsx","components/Forms/FileInput.jsx","components/Forms/Textbox.jsx","components/Forms/Button.jsx","components/Forms/Label.jsx","components/Forms/TextArea.jsx","components/Forms/Form.js","pages/Signup-Login/SignupForm.jsx","pages/Signup-Login/LoginValidation.js","pages/Signup-Login/LoginForm.jsx","pages/Signup-Login/Signup-Login.jsx","pages/Landing/Landing.jsx","contexts/ToastNotifContext.js","components/Pages/PageBody.jsx","components/Pages/Pages.js","pages/About/About.jsx","pages/Account/CreateThemeModal.jsx","pages/Account/DeleteAccountModal.jsx","api/settings.js","pages/Account/Account.jsx","pages/Cookbooks/CookbookCard.jsx","pages/Cookbooks/CookbooksList.jsx","pages/Cookbooks/SearchBar.jsx","pages/Cookbooks/Cookbooks.jsx","pages/CreateCookbook/CreateValidation.js","utils/image.js","pages/CreateCookbook/CreateCookbook.jsx","App.js","hooks/useLocalStorage.js","index.js"],"names":["settings","isDevMode","activeDevelopment","SERVER_URL","getCookbooks","userID","a","console","error","Axios","get","res","response","request","log","message","createCookbook","cookbook","post","editCookbook","cookbookID","newCookbookData","put","deleteCookbook","delete","data","getUser","email","password","params","getUserByID","createUser","name","regenJWTToken","editUser","newUser","deleteUser","Account","createContext","Private","userData","useContext","AccountContext","undefined","to","Public","IsCrushed","LinkDiv","styled","div","props","theme","foreground","accent","secondaryAccent","NavButton","path","title","Nav","Link","style","padding","as","cursor","muted","secondaryForeground","Bar","Navbar","Button","DropdownItem","NavDropdown","Item","RightNavigationDropdown","secondaryBackground","StyledSpinner","Spinner","NavigationBar","ThemeContext","isCrushed","IsCrushedContext","AuthLogout","useState","menuOpen","setMenuOpen","sticky","background","navbar","expand","Container","fluid","textDecoration","alt","src","Logo","transform","width","height","className","Brand","color","Toggle","borderWidth","toggled","toggle","rounded","Collapse","id","navbarScroll","Divider","marginRight","animation","align","onClick","DivBody","Header404","h2","Desc","h1","GoBack","button","PageNotFound","navigate","useNavigate","userSelect","draggable","ripped","useForm","callback","validate","defaultValues","customFunctions","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleSubmit","event","preventDefault","validation","handleChange","persist","prev","target","value","addError","isSubmit","toString","trim","test","cPassword","Check","FormCheck","substring","inputBackground","Checkbox","label","checked","display","marginLeft","paddingTop","File","input","attrs","type","FileDiv","Title","disabled","ChooseFile","DeleteButton","FileInput","inputRef","selectedFileName","setSelectedFile","current","files","ref","onChange","click","placeholder","TextboxInput","Textbox","InputButton","TextLabel","p","Label","TextAreaStyled","textarea","Text","TextArea","e","computed","window","getComputedStyle","parseInt","getPropertyValue","scrollHeight","BoxContainer","FormContainer","form","MutedText","BoldLink","SubmitButton","Form","ErrorMessage","SignupForm","AuthLogin","SignUp","users","result","status","onSubmit","noValidate","required","marginTop","marginBottom","TextInput","LoginForm","margin","href","TopContainer","BackDrop","motion","HeaderContainer","HeaderText","SmallText","h5","InnerContainer","backdropVariants","expanded","borderRadius","collapsed","expandingTransition","duration","stiffness","SignupLogin","login","isExpanded","setExpanded","active","setActive","playExpandingAnimation","setTimeout","time","initial","animate","variants","transition","Landing","ToastNotif","PageBody","children","DivClamp","Header","SectionTitle","h3","Description","About","Pages","xmlns","viewBox","fill","d","StyledModal","Modal","CreateThemeModal","themeName","setThemeName","size","centered","onHide","closeButton","Body","Footer","createthememodaltrue","confirmPassword","setConfirmPassword","restoreFocus","backdrop","keyboard","deleteAccountModalTrue","createTheme","newTheme","deleteTheme","themeID","Sidebar","SidebarButton","StickyItems","h4","Sections","Section","InputGroup","ThemeChooser","select","StyledSketchPicker","SketchPicker","AppearanceColorTitle","disabledText","ShownOnHover","span","scrollTo","element","document","getElementById","pos","position","top","scrollIntoView","behavior","block","inline","setLocalAuth","setUserData","Toast","NewData","setNewData","deleteAccount","modalShow","setModalShow","visibleAppearance","setVisibleAppearance","updateItem","newErr","newPassword","updateSetting","seePublicRecipes","themes","find","x","selectedTheme","res2","show","toLowerCase","DeleteAccountModal","token","fontSize","sharePublicRecipes","map","index","selected","startsWith","onChangeComplete","newColor","findIndex","newThemes","hex","faded","navigator","clipboard","writeText","CardBody","thirdBackground","ImageWrapper","CardTitle","CardDescription","CardTags","CookbookCard","coverImage","description","tags","loading","setLoading","defaultImage","onLoad","paddingLeft","join","slice","filter","variant","CookbooksList","filteredCookbooks","onDragEnd","destination","droppableId","provided","droppableProps","innerRef","book","draggableId","draggableProps","dragHandleProps","Alert","backgroundColor","alert","borderColor","border","Heading","SearchBox","TagSelect","SearchBar","tagOptions","searchField","setSearchField","tagField","setTagField","cookbooks","includes","justifyContent","Cookbooks","CookbookName","FormRow","Row","CreateCookbook","Create","split","item","coverImageRef","useRef","some","ex","endsWith","reader","FileReader","onload","string","unit","Blob","byteSize","readAsDataURL","Col","AppContainer","Background","toast","configure","App","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","localAuth","LoginPromise","Promise","resolve","reject","retrievedUser","SendToast","promise","pending","success","setIsCrushed","defaultThemes","IoConstructSharp","onWindowResize","innerWidth","removeEventListener","addEventListener","bind","currentTheme","icon","POSITION","BOTTOM_RIGHT","progressStyle","info","warn","render","ToastNotifContext","Provider","Routes","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.99265f55.chunk.js","sourcesContent":["let settings = {\r\n    isDevMode: false,\r\n    activeDevelopment: true,\r\n    SERVER_URL: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nif (settings.isDevMode) settings.SERVER_URL = 'http://localhost:5000'\r\nelse settings.SERVER_URL = 'https://thereciperack-api.deathlybower959.repl.co'\r\n\r\nexport default settings\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getCookbooks = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createCookbook = async (userID, cookbook) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbook) return console.error('Missing cookbook')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbook,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editCookbook = async (userID, cookbookID, newCookbookData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n    if (!newCookbookData) return console.error('Missing newCookbookData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbookID,\r\n            newCookbookData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCookbook = async (userID, cookbookID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n\r\n    try {\r\n        const res = await Axios.delete(settings.SERVER_URL + '/cookbook', {\r\n            data: {\r\n                userID,\r\n                cookbookID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getUser = async (email, password) => {\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                email,\r\n                password,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserByID = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                userID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createUser = async (name, email, password) => {\r\n    if (!name) return console.error('Missing name')\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/users', {\r\n            name,\r\n            email,\r\n            password,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const regenJWTToken = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users/regenToken', {\r\n            params: {\r\n                userID\r\n            }\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editUser = async (userID, newUser) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newUser) return console.error('Missing newUser')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/users', {\r\n            userID,\r\n            newUser,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = Axios.delete(settings.SERVER_URL + '/users', {\r\n            data: { userID },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst Account = createContext()\r\nexport default Account","import Private from './Private'\r\nimport Public from './Public'\r\n\r\nexport default {\r\n    Private,\r\n    Public,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet } from 'react-router'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst Private = () => {\r\n    const { userData} = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Navigate to='/login' />\r\n    ) : (\r\n        <Outlet />\r\n    )\r\n}\r\n\r\nexport default Private\r\n","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet, useLocation } from 'react-router'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst Public = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Outlet />\r\n    ) : (\r\n        <Navigate to='/' />\r\n\r\n    )\r\n}\r\n\r\nexport default Public\r\n","import { createContext } from \"react\";\r\n\r\nconst IsCrushed = createContext()\r\nexport default IsCrushed","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    padding: 0.5rem 1rem;\r\n    margin-right: -3px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst NavButton = ({ path, title }) => {\r\n    return (\r\n        <Nav.Link style={{ padding: '0' }} as={Link} to={path}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavButton\r\n","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    color: ${(props) => props.theme.muted};\r\n    transition: color 300ms ease;\r\n\r\n    &:hover {\r\n        color: ${(props) => props.theme.secondaryForeground};\r\n    }\r\n`\r\n\r\nconst NavLink = ({ path, title, ...props }) => {\r\n    return (\r\n        <Nav.Link as={Link} to={path} {...props}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import Navbar from './Navbar'\r\nimport NavButton from './NavButton'\r\nimport NavLink from './NavLink'\r\n\r\nexport default {\r\n    Bar: Navbar,\r\n    Button: NavButton,\r\n    Link: NavLink\r\n}","export default __webpack_public_path__ + \"static/media/logo.2573ae00.svg\";","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Fade as Hamburger } from 'hamburger-react'\r\nimport {\r\n    Navbar,\r\n    Container,\r\n    Nav,\r\n    NavDropdown,\r\n    Spinner,\r\n} from 'react-bootstrap'\r\nimport IsCrushedContext from '../../contexts/IsCrushedContext'\r\n\r\nimport NavBarComponents from './Navbar.js'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nimport Logo from '../../assets/logo.svg'\r\n\r\nconst DropdownItem = styled(NavDropdown.Item)`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.25rem 1rem;\r\n    color: ${(props) => props.theme.muted};\r\n    clear: both;\r\n    font-weight: 400;\r\n    text-align: inherit;\r\n    text-decoration: none;\r\n    white-space: nowrap;\r\n    background-color: transparent;\r\n    border: 0;\r\n\r\n    transition: color 300ms ease;\r\n\r\n    &:hover {\r\n        color: ${(props) => props.theme.secondaryForeground};\r\n    }\r\n`\r\n\r\nconst NavigationDropdown = styled(NavDropdown)`\r\n    .dropdown-menu.show {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n    }\r\n\r\n    .dropdown-toggle.nav-link {\r\n        color: ${(props) => props.theme.muted} !important;\r\n        transition: color 300ms ease;\r\n\r\n        &:hover {\r\n            color: ${(props) => props.theme.secondaryForeground} !important;\r\n        }\r\n    }\r\n`\r\n\r\nconst RightNavigationDropdown = styled(NavDropdown)`\r\n    .dropdown-menu.show {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n    }\r\n\r\n    .dropdown-toggle.nav-link {\r\n        color: ${(props) => props.theme.muted} !important;\r\n        transition: color 300ms ease;\r\n\r\n        &:hover {\r\n            color: ${(props) => props.theme.secondaryForeground} !important;\r\n        }\r\n        padding-left: 0;\r\n    }\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst NavigationBar = () => {\r\n    const theme = useContext(ThemeContext)\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, AuthLogout } = useContext(AccountContext)\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n\r\n    return (\r\n        <Navbar\r\n            sticky='top'\r\n            style={{ background: theme.navbar.background }}\r\n            expand='md'\r\n        >\r\n            <Container fluid>\r\n                <Link to='/' style={{ textDecoration: 'none' }}>\r\n                    <img\r\n                        alt=''\r\n                        src={Logo}\r\n                        style={{ transform: 'rotate(7deg)' }}\r\n                        width='30'\r\n                        height='30'\r\n                        className='align-top'\r\n                    />{' '}\r\n                    <Navbar.Brand style={{ color: theme.foreground }}>\r\n                        The Recipe Rack\r\n                    </Navbar.Brand>\r\n                </Link>\r\n\r\n                <Navbar.Toggle\r\n                    style={{ borderWidth: '0' }}\r\n                    aria-controls='basic-navbar-nav'\r\n                >\r\n                    <Hamburger\r\n                        color={theme.foreground}\r\n                        toggled={menuOpen}\r\n                        toggle={setMenuOpen}\r\n                        rounded\r\n                    />\r\n                </Navbar.Toggle>\r\n\r\n                <Navbar.Collapse id='basic-navbar-nav'>\r\n                    <Nav className='me-auto my-2 my-lg-0' navbarScroll>\r\n                        {/* <NavigationDropdown title='Test'>\r\n                            <DropdownItem as={Link} to='/link'>\r\n                                Link\r\n                            </DropdownItem>\r\n                            <NavDropdown.Divider />\r\n                        </NavigationDropdown> */}\r\n                        <NavBarComponents.Link title='My Cookbooks' path='/cookbooks' />\r\n                        <NavBarComponents.Link title='About' path='/about' />\r\n                    </Nav>\r\n                    <Nav>\r\n                        {isCrushed && <NavDropdown.Divider />}\r\n\r\n                        {userData == null || userData == undefined ? (\r\n                            <>\r\n                                <NavBarComponents.Link title='Sign up' path='/signup' style={{marginRight: '8px'}}/>\r\n                                {isCrushed ? (\r\n                                    <NavBarComponents.Link title='Login' path='/login' />\r\n                                ) : (\r\n                                    <NavBarComponents.Button title='Login' path='/login' />\r\n                                )}\r\n                            </>\r\n                        ) : userData == 'none' ? (\r\n                            <StyledSpinner animation='border' />\r\n                        ) : (\r\n                            <RightNavigationDropdown\r\n                                align='end'\r\n                                title={userData?.name ?? 'My Account'}\r\n                            >\r\n                                <DropdownItem as={Link} to='/account'>\r\n                                    My Account\r\n                                </DropdownItem>\r\n                                <NavDropdown.Divider />\r\n                                <DropdownItem\r\n                                    as={Link}\r\n                                    to='#'\r\n                                    onClick={AuthLogout}\r\n                                >\r\n                                    Sign out\r\n                                </DropdownItem>\r\n                            </RightNavigationDropdown>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n","export default __webpack_public_path__ + \"static/media/ripped.6e33437a.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ripped from '../../assets/ripped.png'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst DivBody = styled.div`\r\n    text-align: center;\r\n    width: 60%;\r\n    padding-bottom: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Header404 = styled.h2`\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst Desc = styled.h1`\r\n    padding: 0px 10px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst GoBack = styled.button`\r\n    width: 100px;\r\n    padding: 10px 10px;\r\n    margin: 20px auto 0px auto;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst PageNotFound = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <DivBody style={{ userSelect: 'none' }}>\r\n            <Header404>404 Error</Header404>\r\n            <Desc>Sorry, we can't seem to find what you're looking for.</Desc>\r\n            <img draggable={false} src={ripped} width='100%' />\r\n            <GoBack onClick={() => navigate(-1)}>Go Back</GoBack>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useForm = (callback, validate, defaultValues = {}, customFunctions = {}) => {\r\n    const [values, setValues] = useState(defaultValues)\r\n    const [errors, setErrors] = useState({})\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback()\r\n        }\r\n    }, [errors])\r\n\r\n    const handleSubmit = (event) => {\r\n        if (customFunctions.handleSubmit) return customFunctions.handleSubmit(event)\r\n\r\n        event?.preventDefault()\r\n\r\n        setErrors(() => {\r\n            const validation = validate(values, true)\r\n\r\n            setIsSubmitting(Object.keys(validation).length === 0)\r\n\r\n            return validation\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (customFunctions.handleChange) return customFunctions.handleChange(event)\r\n\r\n\r\n        event?.persist()\r\n        setErrors((prev) => {\r\n            return { ...prev, [event.target.name]: null }\r\n        })\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }))\r\n    }\r\n\r\n    const addError = (name, message) => {\r\n        if (customFunctions.addError) return customFunctions.addError(name, message)\r\n\r\n        setErrors((prev) => {\r\n            return { ...prev, [name]: message }\r\n        })\r\n    }\r\n\r\n    return {\r\n        addError,\r\n        handleChange,\r\n        setErrors, \r\n        setValues,\r\n        setIsSubmitting,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n    }\r\n}\r\n\r\nexport default useForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.name || isSubmit) {\r\n        if (!values.name) errors.name = 'Your name is required'\r\n        else if (values.name?.toString().trim() == '')\r\n            errors.name = 'Your name is required'\r\n        else if (values.name?.length < 5)\r\n        errors.name = 'Too short, must be at least 5 characters long'\r\n    }\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    if (values.cPassword || isSubmit) {\r\n        if (\r\n            !values.cPassword ||\r\n            values.cPassword?.toString().trim() == '' ||\r\n            values.cPassword != values.password\r\n        )\r\n            errors.cPassword = 'Password does not match'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import { useContext } from 'react'\r\nimport { FormCheck } from 'react-bootstrap'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst Check = styled(FormCheck)`\r\n    .form-check-input:checked[type='checkbox'] {\r\n        background-image: url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23${props => props.theme.secondaryForeground.substring(1)}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e\\\")!important;\r\n    }\r\n    .form-check-input {\r\n        background-color: ${(props) => props.theme.inputBackground};\r\n        border: 0;\r\n        cursor: pointer;\r\n        width: 1.3em;\r\n        height: 1.3em;\r\n        margin-left: 10px;\r\n    }\r\n    .form-check-input:focus {\r\n        box-shadow: none;\r\n    }\r\n`\r\n\r\nconst Checkbox = ({ label, checked, ...props }) => {\r\n    const theme = useContext(ThemeContext)\r\n    \r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Check checked={checked || false} {...props} />\r\n            <p\r\n                style={{\r\n                    marginLeft: '6px',\r\n                    paddingTop: '2px',\r\n                    color: theme.foreground,\r\n                }}\r\n            >\r\n                {label ?? 'No checkbox name'}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst File = styled.input.attrs({ type: 'file' })`\r\n    display: none;\r\n`\r\n\r\nconst FileDiv = styled.div`\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    height: 42px;\r\n    font-size: 12px;\r\n    display: flex;\r\n    border-radius: 0.5rem;\r\n`\r\n\r\nconst Title = styled.input.attrs({ disabled: true })`\r\n    height: 42px;\r\n    outline: none;\r\n    padding: 0px 10px 0px 5px;\r\n    font-size: 12px;\r\n    border: 0;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    background-color: transparent;\r\n`\r\n\r\nconst ChooseFile = styled.button`\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    border: 0;\r\n    border-right: solid 2px ${(props) => props.theme.secondaryBackground};\r\n    outline: 0;\r\n    color: ${(props) => props.theme.muted};\r\n    border-top-left-radius: 0.5rem;\r\n    border-bottom-left-radius: 0.5rem;\r\n\r\n    transition: filter 250ms ease-in-out;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n    color: red;\r\n    width: 20px;\r\n    font-weight: bold;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border-width: 0px;\r\n    margin-left: 5px;\r\n`\r\n\r\nconst FileInput = ({ label, className, inputRef, ...props }) => {\r\n    const [selectedFileName, setSelectedFile] = useState()\r\n    useEffect(() => {\r\n        setSelectedFile(inputRef.current.files[0]?.name)\r\n    }, [inputRef, inputRef.current?.value, inputRef.current?.files])\r\n\r\n    return (\r\n        <>\r\n            <File ref={inputRef} {...props} />\r\n\r\n            <FileDiv>\r\n                {selectedFileName != null ? (\r\n                    <DeleteButton\r\n                        type='button'\r\n                        onClick={() => {\r\n                            inputRef.current.value = null\r\n                            props.onChange({ target: {name: inputRef.current.name, files: []} })\r\n                            setSelectedFile(null)\r\n                        }}\r\n                    >\r\n                        X\r\n                    </DeleteButton>\r\n                ) : (\r\n                    <ChooseFile\r\n                        onClick={() => inputRef.current.click()}\r\n                        type='button'\r\n                    >\r\n                        Choose File\r\n                    </ChooseFile>\r\n                )}\r\n                <Title placeholder={selectedFileName ?? label} />\r\n            </FileDiv>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextboxInput = styled.input`\r\n    border-radius: 0.5rem;\r\n    \r\n    max-width: 500px;\r\n    width: 50%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n\r\n    margin-left: 7px;\r\n`\r\n\r\nconst Textbox = (props) => {\r\n    return (\r\n        <TextboxInput {...props}/>\r\n    )\r\n}\r\n\r\nexport default Textbox\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InputButton = styled.button`\r\n    margin-left: 10px;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <InputButton {...props}/>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextLabel = styled.p`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-top: 15px;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst Label = (props) => {\r\n    return (\r\n        <TextLabel {...props}/>\r\n    )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextAreaStyled = styled.textarea`\r\n    width: 60%;\r\n    border-radius: 0.5rem;\r\n    resize: none;\r\n    min-height: 42px;\r\n    height: 60px;\r\n    overflow: hidden;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 5px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\nconst TextArea = (props) => {\r\n    return (\r\n        <TextAreaStyled {...props} onChange={(e) => {\r\n            props.onChange(e)\r\n\r\n            // Reset field height\r\n            e.target.style.height = 'inherit'\r\n\r\n            // Get the computed styles for the element\r\n            const computed = window.getComputedStyle(\r\n                e.target\r\n            )\r\n\r\n            // Calculate the height\r\n            const height =\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'border-top-width'\r\n                    ),\r\n                    10\r\n                ) +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'padding-top'\r\n                    ),\r\n                    10\r\n                ) +\r\n                e.target.scrollHeight +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'padding-bottom'\r\n                    ),\r\n                    10\r\n                ) +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'border-bottom-width'\r\n                    ),\r\n                    10\r\n                )\r\n\r\n            e.target.style.height = `${height}px`\r\n        }}/>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","import Checkbox from './Checkbox'\r\nimport FileInput from './FileInput'\r\nimport Textbox from './Textbox'\r\nimport Button from './Button'\r\nimport Label from './Label'\r\nimport TextArea from './TextArea'\r\n\r\nexport default {\r\n    File: FileInput,\r\n    Check: Checkbox,\r\n    Text: Textbox,\r\n    Button,\r\n    Label,\r\n    TextArea: TextArea\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './SignupValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { cookbook, recipe, shopping, users } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.muted};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    transition: filter 250ms ease-in-out;\r\n`\r\n\r\nconst TextInput = styled(Form.Text)`\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    margin-left: 0;\r\n`\r\n\r\nconst SubmitButton = styled(Form.Button)`\r\n    width: 100%;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst SignupForm = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { AuthLogin } = useContext(AccountContext)\r\n\r\n    const SignUp = async () => {\r\n        const result = await users.createUser(\r\n            values.name,\r\n            values.email,\r\n            values.password\r\n        )\r\n\r\n        if (result?.status == 201) {\r\n            AuthLogin(values.email, values.password)\r\n\r\n            navigate('/')\r\n        } else if (result?.status == 403) {\r\n            addError(\r\n                'email',\r\n                'User with this email already exists, maybe login instead?'\r\n            )\r\n        } else {\r\n            console.log(result)\r\n        }\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit, addError } = useForm(\r\n        SignUp,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <Form.Text\r\n                    type='text'\r\n                    name='name'\r\n                    onChange={handleChange}\r\n                    value={values.name || ''}\r\n                    placeholder='Name'\r\n                    required\r\n                />\r\n                {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n                <Form.Text\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <Form.Text\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n                <Form.Text\r\n                    type='password'\r\n                    name='cPassword'\r\n                    onChange={handleChange}\r\n                    value={values.cPassword || ''}\r\n                    placeholder='Confirm Password'\r\n                    required\r\n                />\r\n                {errors.cPassword && (\r\n                    <ErrorMessage>{errors.cPassword}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <SubmitButton style={{ marginTop: '15px' }} onClick={handleSubmit}>\r\n                Sign Up\r\n            </SubmitButton>\r\n            <MutedText style={{ marginTop: '5px', marginBottom: '0' }}>\r\n                Already have an account?\r\n            </MutedText>\r\n            <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Login</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './LoginValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { users, cookbook, recipe, shopping } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.muted};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    transition: filter 250ms ease-in-out;\r\n`\r\n\r\nconst SubmitButton = styled(Form.Button)`\r\n    width: 100%;\r\n`\r\n\r\nconst TextInput = styled(Form.Text)`\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    margin-left: 0;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst LoginForm = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { AuthLogin } = useContext(AccountContext)\r\n\r\n    const Login = () => {\r\n        AuthLogin(values.email, values.password)\r\n\r\n        navigate('/')\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n        Login,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <TextInput\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <TextInput\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <Link to='/resetpassword' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ margin: '5px auto 15px auto' }}>\r\n                    Forgot your password?\r\n                </BoldLink>\r\n            </Link>\r\n            <SubmitButton onClick={handleSubmit}>Login</SubmitButton>\r\n            <MutedText style={{ margin: '10px auto 0 auto' }} href='#'>\r\n                Don't have an account?\r\n            </MutedText>\r\n            <Link to='/signup' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Create one</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion'\r\nimport Account from '../../contexts/AccountContext'\r\nimport SignupForm from './SignupForm'\r\nimport LoginForm from './LoginForm'\r\n\r\nconst BoxContainer = styled.div`\r\n    max-width: 280px;\r\n    width: 75%;\r\n    min-height: 550px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst TopContainer = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    padding: 0 1.8em;\r\n    padding-bottom: 5em;\r\n`\r\n\r\nconst BackDrop = styled(motion.div)`\r\n    width: 160%;\r\n    height: 550px;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 50%;\r\n    transform: rotate(60deg);\r\n    top: -290px;\r\n    left: -70px;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        0deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 80%\r\n    );\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst HeaderText = styled.h2`\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    line-height: 1.24;\r\n    color: ${(props) => props.theme.foreground};\r\n    z-index: 10;\r\n    margin: 0;\r\n`\r\n\r\nconst SmallText = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: 500;\r\n    font-size: 11px;\r\n    z-index: 10;\r\n    margin: 0;\r\n    margin-top: 7px;\r\n`\r\n\r\nconst InnerContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 1.8em;\r\n`\r\n\r\nconst backdropVariants = {\r\n    expanded: {\r\n        width: '233%',\r\n        height: '1050px',\r\n        borderRadius: '20%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n    collapsed: {\r\n        width: '160%',\r\n        height: '550px',\r\n        borderRadius: '50%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n}\r\n\r\nconst expandingTransition = {\r\n    type: 'spring',\r\n    duration: 2.3,\r\n    stiffness: 30,\r\n}\r\n\r\nconst SignupLogin = ({ login }) => {\r\n    const [isExpanded, setExpanded] = useState(true)\r\n\r\n    const [active, setActive] = useState(login ? 'login' : 'signup')\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation(250)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive(login ? 'login' : 'signup')\r\n        }, expandingTransition.duration * 1000 - 1500)\r\n    }, [login])\r\n\r\n    const playExpandingAnimation = (time) => {\r\n        setExpanded(true)\r\n        setTimeout(() => {\r\n            setExpanded(false)\r\n        }, time ?? expandingTransition.duration * 1000 - 1500)\r\n    }\r\n\r\n    const switchToSignup = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('signup')\r\n        }, 400)\r\n    }\r\n\r\n    const switchToSignin = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('login')\r\n        }, 400)\r\n    }\r\n\r\n    return (\r\n            <BoxContainer>\r\n                <TopContainer>\r\n                    <BackDrop\r\n                        initial={false}\r\n                        animate={isExpanded ? 'expanded' : 'collapsed'}\r\n                        variants={backdropVariants}\r\n                        transition={expandingTransition}\r\n                    />\r\n                    {active === 'login' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Welcome</HeaderText>\r\n                            <HeaderText>Back!</HeaderText>\r\n                            <SmallText>Please login to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                    {active === 'signup' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Create</HeaderText>\r\n                            <HeaderText>Account</HeaderText>\r\n                            <SmallText>Please sign-up to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                </TopContainer>\r\n                <InnerContainer>\r\n                    {active === 'login' && <LoginForm />}\r\n                    {active === 'signup' && <SignupForm />}\r\n                </InnerContainer>\r\n            </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupLogin\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst Landing = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    return (\r\n        <DivBody>\r\n            {/* <SearchBar /> */}\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import { createContext } from \"react\";\r\n\r\nconst ToastNotif = createContext()\r\nexport default ToastNotif","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n\r\n    border-radius: 20px;\r\n`\r\n\r\nconst PageBody = ({ children, ...props }) => {\r\n    return <DivBody {...props}>{children}</DivBody>\r\n}\r\n\r\nexport default PageBody\r\n","import PageBody from './PageBody'\r\n\r\nexport default {\r\n    PageBody,\r\n}","import React, { useContext, useEffect } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport settings from '../../settings'\r\nimport { IoConstructSharp } from 'react-icons/io5'\r\nimport Pages from '../../components/Pages/Pages'\r\n\r\nconst DivClamp = styled.div`\r\n    text-align: center;\r\n    width: 50%;\r\n    margin: auto;\r\n`\r\n\r\nconst Header = styled.h2`\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst SectionTitle = styled.h3`\r\n    color: ${(props) => props.theme.foreground};\r\n    margin-top: 20px;\r\n`\r\n\r\nconst Description = styled.p`\r\n    font-size: 20px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n`\r\n\r\nconst About = () => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    return (\r\n        <Pages.PageBody>\r\n            <DivClamp>\r\n                <Header>About</Header>\r\n\r\n                <SectionTitle>Creator</SectionTitle>\r\n                <Description>\r\n                    My name is Benjamin, and I am a 13 year old developer, that\r\n                    strives to learn more. I wanted to learn something along the\r\n                    lines of web development. I didn't want to just use html,\r\n                    css, and js, I wanted to try something new! I looked around,\r\n                    and I eventually found a framework called React. Put very\r\n                    simply, it allows me to create much cleaner user interfaces,\r\n                    with much more interactive pages, and a faster websites.\r\n                </Description>\r\n\r\n                <SectionTitle>The Purpose</SectionTitle>\r\n                <Description>\r\n                    I had found some tutorials showing how to create some React\r\n                    projects, but I soon found myself in tutorial hell. I was\r\n                    just following along, not really learning. Since the best\r\n                    way for me to learn is to teach myself, I decided to come up\r\n                    with a project. I didn't want to make a pointless project,\r\n                    one that wasn't used. I wanted to create something my\r\n                    family, and friends could use. I eventually came up with\r\n                    this idea when I was helping my mother cook. She kept having\r\n                    to switch between recipes, and it seemed very annoying. I\r\n                    decided to make this website to help manage, and share your\r\n                    recipes. I know that they are many websites out there just\r\n                    like this, but I wanted it to have more features, no ads,\r\n                    and a cleaner ui!\r\n                </Description>\r\n\r\n                <SectionTitle>How was it made?</SectionTitle>\r\n                <Description>\r\n                    Since this was my first <i>real</i> React project, that I\r\n                    was doing without a tutorial, Stack Overflow, Youtube, and\r\n                    Google were my best friends. I first figured out how to make\r\n                    the client side of the website, the part that you see. It\r\n                    took a bit to figure out, but I picked it up in the end. I\r\n                    then had to learn how to make the sever side, the part that\r\n                    creates your account, and saves your data and settings. This\r\n                    bit was a little harder than I had originally thought it\r\n                    would be, but it worked out in the end. It's really nice to\r\n                    see that I thought about the code that went into this\r\n                    website, and that I can be proud of it, instead of just\r\n                    writing the code from videos online.\r\n                </Description>\r\n\r\n                {settings.activeDevelopment && (\r\n                    <h5 style={{ color: theme.error }}>\r\n                        <IoConstructSharp /> Development underway...{' '}\r\n                        <IoConstructSharp />\r\n                    </h5>\r\n                )}\r\n\r\n                <div style={{ marginBottom: '20px', marginTop: '20px' }}>\r\n                    <a\r\n                        href='https://github.com/DeathlyBower959/thereciperack'\r\n                        target='_blank'\r\n                    >\r\n                        <svg\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0 1 12 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                    <a\r\n                        href='https://youtube.com/DeathlyBower959?sub_confirmation=1'\r\n                        target='_blank'\r\n                    >\r\n                        <svg\r\n                            style={{ marginLeft: '10px' }}\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M19.615 3.184c-3.604-.246-11.631-.245-15.23 0C.488 3.45.029 5.804 0 12c.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0C23.512 20.55 23.971 18.196 24 12c-.029-6.185-.484-8.549-4.385-8.816zM9 16V8l8 3.993L9 16z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n            </DivClamp>\r\n        </Pages.PageBody>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${props => props.theme.secondaryBackground};\r\n        color: ${props => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n\r\n    const [themeName, setThemeName] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            onHide={(e) => {\r\n                setThemeName('')\r\n                props.onHide(e)\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                   New Theme\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Label>Theme Name</Form.Label>\r\n                <Form.Text onChange={(e) => setThemeName(e.target.value)} value={themeName}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Form.Button onClick={() => props.createthememodaltrue(themeName)}>Create</Form.Button>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n        color: ${(props) => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst Description = styled.p`\r\n    color: white;\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            restoreFocus\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            onHide={(e) => {\r\n                setConfirmPassword('')\r\n                props.onHide(e)\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                    Confirm Account Deletion\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Description>\r\n                    Deleting your account will mean all of your recipes,\r\n                    cookbooks, and account data will be removed.\r\n                </Description>\r\n                <Description>\r\n                    If you are sure you want to delete your account, please confirm your\r\n                    password.\r\n                </Description>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Text\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Form.Button\r\n                    disabled={confirmPassword != props.password}\r\n                    onClick={props.deleteAccountModalTrue}\r\n                >\r\n                    Delete Account\r\n                </Form.Button>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getSettings = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/settings', {\r\n            userID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editSettings = async (userID, newSettingData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newSettingData) return console.error('Missing newSettingData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings', {\r\n            userID,\r\n            newSettingData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createTheme = async (userID, newTheme) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newTheme) return console.error('Missing newTheme')\r\n    \r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newTheme,\r\n        })\r\n        \r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTheme = async (userID, newThemeData, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newThemeData) return console.error('Missing newThemeData')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newThemeData,\r\n            themeID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTheme = async (userID, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.delete(\r\n            settings.SERVER_URL + '/settings/theme',\r\n            {\r\n                data: {\r\n                    userID,\r\n                    themeID,\r\n                },\r\n            }\r\n        )\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { users } from '../../api/api'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\n\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nimport { SketchPicker } from 'react-color'\r\nimport CreateThemeModal from './CreateThemeModal'\r\nimport DeleteAccountModal from './DeleteAccountModal'\r\nimport { createTheme, deleteTheme } from '../../api/settings'\r\n\r\nimport Form from '../../components/Forms/Form'\r\nimport Pages from '../../components/Pages/Pages'\r\n\r\n// Containing div\r\nconst DivBody = styled(Pages.PageBody)`\r\n    flex-direction: row;\r\n`\r\n\r\n// Holds navigation for settings\r\nconst Sidebar = styled.div`\r\n    border-radius: 20px;\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\n// Button for sidebar\r\nconst SidebarButton = styled.button`\r\n    width: 100%;\r\n    display: block;\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n\r\n    transition: filter 240ms ease-in-out;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    text-align: left;\r\n    padding: 10px 10px 10px 17px;\r\n    margin-right: 30px;\r\n`\r\n\r\n// Wraps navigation items, and makes them move down once top of the screen is hit.\r\nconst StickyItems = styled.div`\r\n    position: sticky;\r\n    top: 100px;\r\n`\r\n\r\n// Navigation Header\r\nconst Header = styled.h4`\r\n    color: ${(props) => props.theme.foreground};\r\n    margin: 15px 20px 15px 15px;\r\n`\r\n\r\n// Holds all <Section> element\r\nconst Sections = styled.div`\r\n    margin-left: 20px;\r\n    width: 100%;\r\n`\r\n\r\n// Setting section\r\nconst Section = styled.div`\r\n    margin-top: 20px;\r\n`\r\n\r\n// Setting section title\r\nconst SectionTitle = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\n// Group for an input area\r\nconst InputGroup = styled.div`\r\n    margin-left: 8px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\n// Paragraph that is added when error is shown\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\n// Select Dropdown to choose theme\r\nconst ThemeChooser = styled.select`\r\n    display: block;\r\n    max-width: 500px;\r\n    width: 50%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    appearance: none;\r\n    border-radius: 0.5rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n    margin-left: 7px;\r\n`\r\n// Color picker\r\nconst StyledSketchPicker = styled(SketchPicker)`\r\n    background: transparent !important;\r\n    margin-top: 10px;\r\n    margin-left: 10px;\r\n\r\n    input {\r\n        background-color: ${(props) => props.theme.inputBackground};\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    label {\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    input:focus-visible {\r\n        outline: 0 !important;\r\n    }\r\n`\r\n\r\n// Buttons to display color pickers\r\nconst AppearanceColorTitle = styled.button`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-left: 10px;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: transparent;\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: none;\r\n        color: ${(props) => props.theme.disabledText};\r\n    }\r\n`\r\n\r\nconst ShownOnHover = styled.span`\r\n    filter: blur(3px);\r\n    transition: filter 250ms;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    &:hover {\r\n        filter: none;\r\n    }\r\n`\r\n\r\n// Scroll to any element, with an offset of x pixels\r\nconst scrollTo = (id) => {\r\n    var element = document.getElementById(id)\r\n\r\n    let pos = element.style.position\r\n    let top = element.style.top\r\n\r\n    element.style.position = 'relative'\r\n    element.style.top = '-75px'\r\n\r\n    element?.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n        inline: 'nearest',\r\n    })\r\n\r\n    element.style.top = top\r\n    element.style.position = pos\r\n}\r\n\r\nconst Account = () => {\r\n    const theme = useContext(ThemeContext)\r\n    const { setLocalAuth, userData, setUserData, AuthLogout } =\r\n        useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [NewData, setNewData] = useState({ ...userData, password: null })\r\n\r\n    const [modalShow, setModalShow] = useState({\r\n        createTheme: false,\r\n        deleteAccount: false,\r\n    })\r\n    const [visibleAppearance, setVisibleAppearance] = useState('')\r\n\r\n    // Updating state on inputs\r\n    const handleChange = (e) => {\r\n        setNewData((prev) => {\r\n            setErrors((prev) => {\r\n                return { ...prev, [e.target.name]: null }\r\n            })\r\n            return {\r\n                ...prev,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        })\r\n    }\r\n\r\n    // Update item in database\r\n    const updateItem = async (e) => {\r\n        let newErr = {}\r\n        if (e.target.name == 'name') {\r\n            if (!NewData.name) newErr.name = 'Your name is required'\r\n            else if (NewData.name?.toString().trim() == '')\r\n                newErr.name = 'Your name is required'\r\n            else if (NewData.name?.length < 5)\r\n                newErr.name = 'Too short, must be at least 5 characters long'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update name...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    Toast('Name updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'email') {\r\n            if (!NewData.email) newErr.email = 'Your email is required'\r\n            else if (NewData.email?.toString().trim() == '')\r\n                newErr.email = 'Your email is required'\r\n            else if (!/\\S+@\\S+\\.\\S+/.test(NewData.email))\r\n                newErr.email = 'Email address is invalid'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update email...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n\r\n                    Toast('Email updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'password') {\r\n            if (!NewData.password)\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password.toString().trim() == '')\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password?.length < 8)\r\n                newErr.password = 'Password must be 8 or more characters'\r\n        }\r\n\r\n        if (e.target.name == 'newPassword') {\r\n            if (!NewData.newPassword)\r\n                newErr.newPassword = 'You have to specify a new password'\r\n            else if (NewData.password.toString().trim() == '')\r\n                newErr.newPassword = 'You have to specify a new password'\r\n            else if (NewData.newPassword?.length < 8)\r\n                newErr.newPassword = 'Password must be 8 or more characters'\r\n            else if (NewData.newPassword == userData.password)\r\n                newErr.newPassword = 'Password must be different'\r\n            else {\r\n                const res = await users.editUser(userData.id, {\r\n                    ...NewData,\r\n                    password: NewData.newPassword,\r\n                })\r\n                if (res.status != 201)\r\n                    Toast('Failed to update password...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    setNewData((prev) => {\r\n                        return { ...prev, password: null, newPassword: null }\r\n                    })\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n                    Toast(\r\n                        'Password updated! Make sure to remember it!',\r\n                        'success'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setErrors(newErr)\r\n    }\r\n\r\n    const updateSetting = async (e) => {\r\n        if (e.target.name == 'seePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('You can now see public recipes!', 'success')\r\n                else Toast(\"You can't see public recipes anymore!\", 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'sharePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('Your public recipes are now visible!', 'success')\r\n                else Toast('Your public recipes are now hidden!', 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'selectedTheme') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.value,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n                console.log(res.data)\r\n            } else {\r\n                setUserData(res.data)\r\n                setVisibleAppearance('')\r\n                Toast(\r\n                    'Your theme was changed!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == e.target.value\r\n                    )\r\n                )\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'deleteTheme') {\r\n            const res = await deleteTheme(\r\n                userData.id,\r\n                userData.settings.selectedTheme\r\n            )\r\n\r\n            if (res.status != 200)\r\n                return Toast('Failed to delete theme', 'error')\r\n\r\n            const res2 = await users.editUser(userData.id, {\r\n                ...res.data,\r\n                settings: {\r\n                    ...res.data.settings,\r\n                    selectedTheme: 'default_themes.dark',\r\n                },\r\n            })\r\n\r\n            if (res2.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n            } else {\r\n                setUserData(res2.data)\r\n                Toast(\r\n                    'Theme deleted!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == res.data.settings.selectedTheme\r\n                    )\r\n                )\r\n                setVisibleAppearance('')\r\n            }\r\n        }\r\n    }\r\n\r\n    // Used as when data is saved to database, it sets password to null\r\n    useEffect(() => {\r\n        setNewData({ ...userData, password: null })\r\n    }, [userData])\r\n\r\n    return (\r\n        <>\r\n            <CreateThemeModal\r\n                show={modalShow.createTheme}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n                }\r\n                createthememodaltrue={async (name) => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n\r\n                    const res = await createTheme(userData.id, {\r\n                        name,\r\n                        themeID: 'user_themes.' + name.trim().toLowerCase(),\r\n                    })\r\n\r\n                    if (res.status != 201)\r\n                        return Toast('Failed to create theme', 'error')\r\n\r\n                    setUserData(res.data)\r\n                }}\r\n            />\r\n\r\n            <DeleteAccountModal\r\n                show={modalShow.deleteAccount}\r\n                password={userData.password}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n                }\r\n                deleteAccountModalTrue={async () => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n\r\n                    const id = userData.id\r\n                    setLocalAuth({ email: null, password: null })\r\n                    AuthLogout()\r\n                    Toast('Account Deleted!', 'warn ')\r\n                    users.deleteUser(id)\r\n                }}\r\n            />\r\n            <DivBody>\r\n                <Sidebar>\r\n                    <StickyItems>\r\n                        <Header>Settings</Header>\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-account')}\r\n                        >\r\n                            Account\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-privacy')}\r\n                        >\r\n                            Privacy\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-appearance')}\r\n                        >\r\n                            Appearance\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-adv.settings')}\r\n                        >\r\n                            Advanced settings\r\n                        </SidebarButton>\r\n                    </StickyItems>\r\n                </Sidebar>\r\n                <Sections>\r\n                    <Section id='account-account'>\r\n                        <SectionTitle>Account</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='name'\r\n                                value={NewData?.name ?? ''}\r\n                            />\r\n                            <Form.Button\r\n                                disabled={\r\n                                    userData?.name?.trim() ==\r\n                                    NewData.name?.trim()\r\n                                }\r\n                                name='name'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </Form.Button>\r\n\r\n                            {errors.name && (\r\n                                <ErrorMessage>{errors.name}</ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='email'\r\n                                value={NewData?.email ?? ''}\r\n                            />\r\n                            <Form.Button\r\n                                disabled={\r\n                                    userData?.email?.trim() ==\r\n                                    NewData?.email?.trim()\r\n                                }\r\n                                name='email'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </Form.Button>\r\n\r\n                            {errors.email ? (\r\n                                <ErrorMessage>{errors.email}</ErrorMessage>\r\n                            ) : (\r\n                                userData?.email?.trim() ==\r\n                                    NewData?.email?.trim() &&\r\n                                userData.token != null && (\r\n                                    <Form.Label\r\n                                        style={{\r\n                                            margin: '3px auto auto 12px',\r\n                                            color: theme.secondaryForeground,\r\n                                            fontSize: '12px',\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            users.regenJWTToken(userData.id)\r\n\r\n                                            Toast(\r\n                                                'Check your email for a verification link!(Check your spam)',\r\n                                                'info'\r\n                                            )\r\n                                            \r\n                                        }}\r\n                                    >\r\n                                        Resend Email\r\n                                    </Form.Label>\r\n                                )\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='password'\r\n                                type='password'\r\n                                value={NewData?.password ?? ''}\r\n                            />\r\n\r\n                            {errors.password && (\r\n                                <ErrorMessage>{errors.password}</ErrorMessage>\r\n                            )}\r\n\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='newPassword'\r\n                                type='password'\r\n                                value={NewData?.newPassword ?? ''}\r\n                            />\r\n                            <Form.Button\r\n                                disabled={\r\n                                    userData?.password?.trim() !=\r\n                                        NewData?.password?.trim() ||\r\n                                    NewData?.password?.trim() ==\r\n                                        NewData?.newPassword?.trim()\r\n                                }\r\n                                name='newPassword'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </Form.Button>\r\n\r\n                            {errors.newPassword && (\r\n                                <ErrorMessage>\r\n                                    {errors.newPassword}\r\n                                </ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-privacy'>\r\n                        <SectionTitle>Privacy</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Check\r\n                                name='seePublicRecipes'\r\n                                label='See public recipes'\r\n                                checked={NewData?.settings?.seePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                            <Form.Check\r\n                                name='sharePublicRecipes'\r\n                                label='Share your public recipes'\r\n                                checked={NewData.settings?.sharePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-appearance'>\r\n                        <SectionTitle>Appearance</SectionTitle>\r\n\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                                marginTop: '20px',\r\n                            }}\r\n                        >\r\n                            <div style={{ width: '100%', display: 'flex' }}>\r\n                                <ThemeChooser\r\n                                    name='selectedTheme'\r\n                                    onChange={updateSetting}\r\n                                >\r\n                                    {userData.settings?.themes?.map(\r\n                                        (theme, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    selected={\r\n                                                        userData.settings\r\n                                                            ?.selectedTheme ==\r\n                                                        theme.themeID\r\n                                                    }\r\n                                                    value={theme.themeID}\r\n                                                >\r\n                                                    {theme.name}\r\n                                                </option>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n                                </ThemeChooser>\r\n                                <Form.Button\r\n                                    onClick={() =>\r\n                                        setModalShow((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                createTheme: true,\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Create\r\n                                </Form.Button>\r\n                            </div>\r\n                        </InputGroup>\r\n\r\n                        {/* Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor' ? '' : 'bgcolor'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            background: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor2' ? '' : 'bgcolor2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Textbox Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'textbg' ? '' : 'textbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Textbox Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'textbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            inputBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).inputBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent' ? '' : 'accent'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            accent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).accent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent2' ? '' : 'accent2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryAccent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryAccent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground' ? '' : 'foreground'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            foreground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).foreground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground2'\r\n                                            ? ''\r\n                                            : 'foreground2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryForeground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryForeground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Muted Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'muted' ? '' : 'muted'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Muted Text\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'muted' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            muted: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).muted\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Faded Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'faded' ? '' : 'faded'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Faded\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'faded' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            faded: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).faded\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Error Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'error' ? '' : 'error'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Error\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'error' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            error: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).error\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Navbar background Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'navbarbg' ? '' : 'navbarbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Navigation Bar Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'navbarbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            navbar: {\r\n                                                ...newThemes[index].navbar,\r\n                                                background: newColor.hex,\r\n                                            },\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).navbar.background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Only displays delete button if the user created the theme */}\r\n                        {!userData?.settings?.selectedTheme.startsWith(\r\n                            'default_themes'\r\n                        ) &&\r\n                            NewData?.id != null && (\r\n                                <Form.Button\r\n                                    name='deleteTheme'\r\n                                    style={{ marginTop: '7px' }}\r\n                                    onClick={updateSetting}\r\n                                >\r\n                                    Delete Theme\r\n                                </Form.Button>\r\n                            )}\r\n                    </Section>\r\n\r\n                    <Section id='account-adv.settings'>\r\n                        <SectionTitle>Advanced Settings</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>\r\n                                User ID:{' '}\r\n                                <ShownOnHover\r\n                                    onClick={() => {\r\n                                        navigator.clipboard.writeText(\r\n                                            userData.id\r\n                                        )\r\n                                        Toast('Copied to clipboard!', 'info')\r\n                                    }}\r\n                                >\r\n                                    {userData.id}\r\n                                </ShownOnHover>\r\n                            </Form.Label>\r\n                        </InputGroup>\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Button\r\n                                style={{ marginLeft: '0' }}\r\n                                name='closeAccount'\r\n                                onClick={() =>\r\n                                    setModalShow((prev) => {\r\n                                        return { ...prev, deleteAccount: true }\r\n                                    })\r\n                                }\r\n                            >\r\n                                Close Account\r\n                            </Form.Button>\r\n                        </InputGroup>\r\n                    </Section>\r\n                </Sections>\r\n            </DivBody>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React, { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport defaultImage from '../../assets/logo.svg'\r\n\r\nconst CardBody = styled.div`\r\n    transition: transform 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n\r\n    border-radius: 15px;\r\n    margin-bottom: 15px;\r\n\r\n    background-color: ${(props) => props.theme.thirdBackground};\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n    margin-left: 10px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    padding-right: 0px;\r\n    width: 200px;\r\n`\r\nconst CardTitle = styled.h5`\r\n    margin-bottom: 0px;\r\n    margin-left: 10px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst CardDescription = styled.p`\r\n    margin-left: 10px;\r\n    margin-top: 5px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst CardTags = styled.p`\r\n    margin: 2px auto 0px 18px;\r\n    color: ${(props) => props.theme.muted};\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst CookbookCard = ({ cookbook, deleteCookbook }) => {\r\n    const {\r\n        name = 'No Name',\r\n        coverImage,\r\n        description = 'No Description',\r\n        tags,\r\n        id,\r\n    } = cookbook\r\n\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    return (\r\n        <CardBody>\r\n            <div className='row no-gutters'>\r\n                <ImageWrapper className='col-sm-3'>\r\n                    {loading && <StyledSpinner animation='border' />}\r\n\r\n                    <Link to={`/cookbook/${id}`}>\r\n                        <img\r\n                            src={coverImage ?? defaultImage}\r\n                            style={{\r\n                                borderRadius: '10px',\r\n                                display: loading ? 'none' : 'block',\r\n                            }}\r\n                            className='card-img-top h-100'\r\n                            alt='Not found... :('\r\n                            onLoad={() => setLoading(false)}\r\n                        />\r\n                    </Link>\r\n                </ImageWrapper>\r\n                <div\r\n                    className='col-sm-7'\r\n                    style={{ paddingLeft: '0px', paddingTop: '3px' }}\r\n                >\r\n                    <div className='card-body'>\r\n                        <Link\r\n                            style={{\r\n                                color: '#000',\r\n                                textDecoration: 'none',\r\n                            }}\r\n                            to={`/cookbook/${id}`}\r\n                        >\r\n                            <CardTitle className='card-title'>{name}</CardTitle>\r\n                        </Link>\r\n                        <CardTags className='card-text'>\r\n                            {tags.join(', ').trim().slice(0, -1)}\r\n                        </CardTags>\r\n                        <hr\r\n                            style={{\r\n                                margin: '10px auto 10px 10px',\r\n                                filter: 'blur(1px)',\r\n                                color: theme.foreground,\r\n                            }}\r\n                        />\r\n                        <CardDescription className='card-text'>\r\n                            {description}\r\n                        </CardDescription>\r\n                        <div>\r\n                            <Link to={`/cookbook/${id}/edit`}>\r\n                                <Button style={{ margin: '5px 5px 0px 5px' }}>\r\n                                    Edit\r\n                                </Button>\r\n                            </Link>\r\n                            <Button\r\n                                style={{ margin: '5px 5px 0px 5px' }}\r\n                                variant='danger'\r\n                                onClick={() => deleteCookbook(id)}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CardBody>\r\n    )\r\n}\r\n\r\nexport default CookbookCard\r\n","import React, { useContext } from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { ThemeContext } from 'styled-components'\r\nimport Account from '../../contexts/AccountContext'\r\nimport CookbookCard from './CookbookCard'\r\n\r\nconst CookbooksList = ({ filteredCookbooks, deleteCookbook }) => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const handleDragEnd = (res) => {\r\n        if (!res.destination) return\r\n        //    const items = Array.from(filteredRecipes)\r\n        //    const [reorderedItem] = items.splice(res.source.index, 1);\r\n        //    items.splice(res.destination.index, 0, reorderedItem)\r\n\r\n        //    setRecipes(items)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {filteredCookbooks?.length > 0 ? (\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId='recipeListDrop'>\r\n                        {(provided) => (\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {filteredCookbooks.map((book, index) => {\r\n                                    return (\r\n                                        <Draggable\r\n                                            key={book.id}\r\n                                            draggableId={book.id}\r\n                                            index={index}\r\n                                        >\r\n                                            {(provided) => (\r\n                                                <div\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    ref={provided.innerRef}\r\n                                                >\r\n                                                    <CookbookCard\r\n                                                        cookbook={book}\r\n                                                        deleteCookbook={\r\n                                                            deleteCookbook\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            ) : (\r\n                <Alert\r\n                    style={{\r\n                        marginTop: '15px',\r\n                        backgroundColor: theme.alert.background,\r\n                        color: theme.alert.color,\r\n                        borderColor: theme.alert.border\r\n                    }}\r\n                    variant='danger'\r\n                >\r\n                    <Alert.Heading>Hmm...</Alert.Heading>\r\n                    <p>Seems like there are no cookbooks with that name!</p>\r\n                </Alert>\r\n            )}\r\n            <div style={{ marginTop: '20px' }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CookbooksList\r\n","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport IsCrushedContext from '../../contexts/IsCrushedContext'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nimport CookbookCard from './CookbookCard'\r\nimport { cookbook } from '../../api/api'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\nimport { Alert, Spinner } from 'react-bootstrap'\r\nimport CookbookList from './CookbooksList'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst DivBody = styled.div`\r\n    width: 80%;\r\n    margin: 50px auto;\r\n`\r\n\r\nconst SearchBox = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    appearance: none;\r\n    border-radius: 0.5rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst TagSelect = styled.select`\r\n    padding: 0.475rem 2.25rem 0.475rem 0.55rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.muted};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    border-radius: 0.5rem;\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst NewButton = styled.button`\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n\r\n    width: 50px;\r\n    height: 50px;\r\n`\r\n\r\nconst SearchBar = ({ tagOptions }) => {\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, setUserData } = useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [searchField, setSearchField] = useState('')\r\n    const [tagField, setTagField] = useState('none')\r\n\r\n    const filteredCookbooks = userData?.cookbooks?.filter((book) => {\r\n        return book.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n\r\n    const handleChange = (e, type) => {\r\n        if (type === 'search') setSearchField(e.target.value)\r\n        else if (type === 'tag') setTagField(e.target.value)\r\n    }\r\n\r\n    const deleteCookbook = async (id) => {\r\n        const res = await cookbook.deleteCookbook(userData.id, id)\r\n        if (res?.status != 200) Toast('Failed to delete cookbook...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Cookbook deleted!', 'success')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DivBody>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    margin: `10px auto 10px auto`,\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <SearchBox\r\n                    placeholder='Search Cookbooks'\r\n                    aria-label='Search Cookbooks'\r\n                    onChange={(e) => handleChange(e, 'search')}\r\n                />\r\n                {!isCrushed && (\r\n                    <TagSelect\r\n                        value={tagField}\r\n                        onChange={(e) => handleChange(e, 'tag')}\r\n                        style={{ width: '35%', marginLeft: '10px' }}\r\n                    >\r\n                        <option value='none'>Choose...</option>\r\n                    </TagSelect>\r\n                )}\r\n                <Link to='/cookbook/create'>\r\n                    <Form.Button\r\n                        style={{ marginLeft: '10px' }}\r\n                        disabled={userData == null || userData == undefined}\r\n                    >\r\n                        New\r\n                    </Form.Button>\r\n                </Link>\r\n            </div>\r\n            {isCrushed && (\r\n                <TagSelect\r\n                    value={tagField}\r\n                    onChange={(e) => handleChange(e, 'tag')}\r\n                    style={{ width: '100%', marginBottom: '10px' }}\r\n                >\r\n                    <option value='none'>Choose...</option>\r\n                </TagSelect>\r\n            )}\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                {userData == null ||\r\n                    (userData == 'none' && (\r\n                        <div style={{ width: '100%' }}>\r\n                            <div style={{ margin: '10px 50% 0px 50%' }}>\r\n                                <StyledSpinner animation='border' />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <div\r\n                    style={{\r\n                        width: '55%',\r\n                        display:\r\n                            userData == null || userData == 'none'\r\n                                ? 'none'\r\n                                : '',\r\n                    }}\r\n                >\r\n                    {userData && userData?.cookbooks?.length == 0 ? (\r\n                        <Alert\r\n                            variant='danger'\r\n                            style={{\r\n                                marginTop: '10px',\r\n                                backgroundColor: theme.alert.background,\r\n                                color: theme.alert.color,\r\n                                borderColor: theme.alert.border,\r\n                            }}\r\n                        >\r\n                            <Alert.Heading>Hmm...</Alert.Heading>\r\n                            Seems like you have no cookbooks! Try creating\r\n                            one...\r\n                        </Alert>\r\n                    ) : (\r\n                        <CookbookList\r\n                            filteredCookbooks={filteredCookbooks}\r\n                            deleteCookbook={deleteCookbook}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Pages from '../../components/Pages/Pages'\r\nimport SearchBar from '../Cookbooks/SearchBar'\r\n\r\n\r\nconst Cookbooks = () => {\r\n    \r\n    return (\r\n        <Pages.PageBody>\r\n            <SearchBar/>\r\n        </Pages.PageBody>\r\n    )\r\n}\r\n\r\nexport default Cookbooks\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.name || isSubmit) {\r\n        if (!values.name) errors.name = 'The name is required'\r\n        else if (values.name?.toString().trim() == '')\r\n            errors.name = 'The name is required'\r\n    }\r\n\r\n    if (values.description || isSubmit) {\r\n        if (!values.description) errors.description = 'A description is required'\r\n        else if (values.description.toString().trim() == '')\r\n            errors.description = 'A description is required'\r\n    }\r\n\r\n    return errors\r\n}\r\n","export const resizeBase64Img = (base64, newWidth, newHeight) => {\r\n    return new Promise((resolve, reject) => {\r\n        var canvas = document.createElement('canvas')\r\n        canvas.style.width = newWidth.toString() + 'px'\r\n        canvas.style.height = newHeight.toString() + 'px'\r\n        let context = canvas.getContext('2d')\r\n        let img = document.createElement('img')\r\n        img.src = base64\r\n        img.onload = function () {\r\n            context.scale(newWidth / img.width, newHeight / img.height)\r\n            context.drawImage(img, 0, 0)\r\n            const dataURL = canvas.toDataURL()\r\n            canvas.remove()\r\n            resolve(dataURL)\r\n        }\r\n    })\r\n}\r\n\r\nexport const byteSize = (string, unit) => {\r\n    const size = new Blob([string]).size\r\n    \r\n    \r\n    if (unit == 'kb') return size * 0.001\r\n    if (unit == 'mb') return size * 0.000001\r\n\r\n    return size\r\n}\r\n","import React, { useContext, useRef } from 'react'\r\nimport { Form as FormWrapper, Container, Row, Col } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { cookbook } from '../../api/api'\r\nimport Account from '../../contexts/AccountContext'\r\nimport IsCrushed from '../../contexts/IsCrushedContext'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\nimport useForm from '../../hooks/useForm'\r\nimport validate from './CreateValidation'\r\nimport { useNavigate } from 'react-router'\r\nimport { byteSize } from '../../utils/image'\r\nimport Pages from '../../components/Pages/Pages'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst DivBody = styled(Pages.PageBody)`\r\n    text-align: center;\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 60%;\r\n    border-radius: 8px;\r\n    resize: none;\r\n    min-height: 42px;\r\n    height: 60px;\r\n    overflow: hidden;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 5px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\nconst CookbookName = styled.h1`\r\n    margin-top: 15px;\r\n    margin-bottom: 20px;\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst FormRow = styled(Row)`\r\n    margin-bottom: 10px;\r\n    justify-content: center;\r\n`\r\n\r\nconst CreateCookbook = () => {\r\n    const Create = async () => {\r\n        const res = await cookbook.createCookbook(userData.id, {\r\n            ...values,\r\n            tags: values?.tags?.split(',')?.map((item) => item?.trim()) || [],\r\n        })\r\n        if (res.status != 201) Toast('Failed to create cookbook...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Created cookbook!', 'success')\r\n            navigate(-1)\r\n        }\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const Toast = useContext(ToastNotif)\r\n    const isCrushed = useContext(IsCrushed)\r\n    const { userData, setUserData } = useContext(Account)\r\n\r\n    const coverImageRef = useRef()\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        setErrors,\r\n        setValues,\r\n        setIsSubmitting,\r\n        handleSubmit,\r\n    } = useForm(\r\n        Create,\r\n        validate,\r\n        {},\r\n        {\r\n            handleChange: (e) => {\r\n                if (e?.persist) e.persist()\r\n\r\n                if (e.target.name == 'coverImage') {\r\n                    if (\r\n                        !['.png', '.jpg', '.jpeg', '.bmp', '.ico'].some((ex) =>\r\n                            e.target.files[0]?.name?.toLowerCase()?.endsWith(ex)\r\n                        )\r\n                    ) {\r\n                        e.target.value = ''\r\n                        setValues((values) => ({\r\n                            ...values,\r\n                            [e.target.name]: null,\r\n                        }))\r\n                        return\r\n                    }\r\n\r\n                    let reader = new FileReader()\r\n                    reader.onload = (e) => {\r\n                        // Files bigger than 10mb will show a warning\r\n                        if (byteSize(e.target.result, 'mb') >= 10) {\r\n                            Toast('File to large!', 'warn')\r\n                            e.target.value = ''\r\n                            return\r\n                        }\r\n                        setValues((values) => ({\r\n                            ...values,\r\n                            coverImage: e.target.result,\r\n                        }))\r\n                    }\r\n                    reader.readAsDataURL(e.target.files[0])\r\n                    return\r\n                }\r\n\r\n                setErrors((prev) => {\r\n                    return { ...prev, [e.target.name]: null }\r\n                })\r\n\r\n                setValues((values) => ({\r\n                    ...values,\r\n                    [e.target.name]: e.target.value,\r\n                }))\r\n            },\r\n        }\r\n    )\r\n\r\n    return (\r\n        <DivBody>\r\n            <FormWrapper\r\n                style={{ width: '100%' }}\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <CookbookName>\r\n                            {values.name || 'New Cookbook'}\r\n                        </CookbookName>\r\n                    </Row>\r\n                    <FormRow>\r\n                        <Form.Text\r\n                            name='name'\r\n                            onChange={handleChange}\r\n                            value={values.name || ''}\r\n                            placeholder='Name'\r\n                            required\r\n                        />\r\n                        {errors.name && (\r\n                            <ErrorMessage>{errors.name}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    <FormRow>\r\n                        <Form.TextArea\r\n                            name='description'\r\n                            onChange={handleChange}\r\n                            value={values.description || ''}\r\n                            placeholder='Description'\r\n                            required\r\n                        />\r\n                        {errors.description && (\r\n                            <ErrorMessage>{errors.description}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    <FormRow\r\n                        style={{\r\n                            width: isCrushed ? '60%' : '50%',\r\n                            margin: '0 auto',\r\n                        }}\r\n                    >\r\n                        <Col>\r\n                            <Form.File\r\n                                inputRef={coverImageRef}\r\n                                label='Cover Image'\r\n                                name='coverImage'\r\n                                onChange={(e) => handleChange(e)}\r\n                            />\r\n                            {errors.coverImage && (\r\n                                <ErrorMessage>{errors.coverImage}</ErrorMessage>\r\n                            )}\r\n                        </Col>\r\n\r\n                        {!isCrushed && (\r\n                            <Col>\r\n                                <Form.Text\r\n                                    style={{ width: '100%' }}\r\n                                    name='tags'\r\n                                    onChange={handleChange}\r\n                                    value={values.tags || ''}\r\n                                    placeholder='Tags (separated by \",\")'\r\n                                />\r\n                                {errors.tags && (\r\n                                    <ErrorMessage>{errors.tags}</ErrorMessage>\r\n                                )}\r\n                            </Col>\r\n                        )}\r\n                    </FormRow>\r\n                    {isCrushed && (\r\n                        <FormRow style={{ marginTop: '10px' }}>\r\n                            <Form.Text\r\n                                style={{ width: '60%' }}\r\n                                name='tags'\r\n                                onChange={handleChange}\r\n                                value={values.tags || ''}\r\n                                placeholder='Tags (separated by \",\")'\r\n                            />\r\n                            {errors.tags && (\r\n                                <ErrorMessage>{errors.tags}</ErrorMessage>\r\n                            )}\r\n                        </FormRow>\r\n                    )}\r\n                    <br />\r\n                    <Form.Button>Create</Form.Button>\r\n                    <Form.Button\r\n                        type='button'\r\n                        muted\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        Cancel\r\n                    </Form.Button>\r\n                </Container>\r\n            </FormWrapper>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default CreateCookbook\r\n","import { useEffect, useState } from 'react'\r\nimport { Route, Routes as ReactRoutes } from 'react-router-dom'\r\n\r\n\r\nimport { shopping, users, recipe, cookbook } from './api/api'\r\n\r\nimport styled, { ThemeProvider } from 'styled-components'\r\n\r\nimport Routes from './components/Routes/Routes'\r\n\r\nimport Navbar from './components/Navigation/Navbar.jsx'\r\nimport PageNotFound from './pages/PageNotFound/PageNotFound'\r\nimport SignupLogin from './pages/Signup-Login/Signup-Login'\r\n\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport Landing from './pages/Landing/Landing'\r\n\r\nimport IsCrushed from './contexts/IsCrushedContext'\r\nimport ToastNotifContext from './contexts/ToastNotifContext'\r\nimport AccountContext from './contexts/AccountContext'\r\nimport About from './pages/About/About'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Account from './pages/Account/Account'\r\n\r\nimport defaultThemes from './themes.json'\r\n\r\nimport settings from './settings'\r\nimport Cookbooks from './pages/Cookbooks/Cookbooks'\r\nimport CreateCookbook from './pages/CreateCookbook/CreateCookbook'\r\n\r\nimport { IoConstructSharp } from 'react-icons/io5'\r\n\r\nconst AppContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Background = styled.div`\r\n    background-color: ${(props) => props.theme.background};\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n`\r\n\r\ntoast.configure()\r\n\r\nconst App = () => {\r\n    const [localAuth, setLocalAuth] = useLocalStorage('email.password', {\r\n        email: null,\r\n        password: null,\r\n    })\r\n\r\n    const AuthLogin = async (email, password) => {\r\n        const LoginPromise = () => {\r\n            return new Promise(async (resolve, reject) => {\r\n                const retrievedUser = await users.getUser(email, password)\r\n\r\n                if (!retrievedUser || retrievedUser?.status != 200) {\r\n                    if (userData == 'none') setUserData(null)\r\n                    return reject('User not found')\r\n                }\r\n\r\n\r\n                setLocalAuth({ email, password })\r\n                setUserData(retrievedUser.data)\r\n                resolve(retrievedUser.data)\r\n            })\r\n        }\r\n\r\n        if (email && password) {\r\n            SendToast(\r\n                {\r\n                    promise: LoginPromise,\r\n                    pending: 'Logging you in...',\r\n                    error: 'Failed to login!',\r\n                    success: 'Successfully logged in!',\r\n                },\r\n                'promise'\r\n            )\r\n        } else {\r\n            console.error('No email or password')\r\n            if (userData == 'none') setUserData(null)\r\n        }\r\n    }\r\n\r\n    const AuthLogout = () => {\r\n        setUserData(null)\r\n        setLocalAuth({ email: null, password: null })\r\n    }\r\n\r\n    const [userData, setUserData] = useState('none')\r\n\r\n    const [isCrushed, setIsCrushed] = useState(false)\r\n\r\n    const theme =\r\n        (userData?.settings?.themes[\r\n            userData?.settings?.themes.findIndex(\r\n                (theme) => theme.themeID == userData?.settings?.selectedTheme\r\n            )\r\n        ] ||\r\n            userData?.settings?.themes.find(\r\n                (theme) => theme.themeID == 'default_themes.dark'\r\n            )) ??\r\n        defaultThemes.themes[0]\r\n\r\n    useEffect(() => {\r\n        if (settings.activeDevelopment)\r\n            SendToast(\r\n                `This app is still in development!`,\r\n                '',\r\n                theme,\r\n                IoConstructSharp\r\n            )\r\n\r\n        AuthLogin(localAuth?.email, localAuth?.password)\r\n\r\n        const onWindowResize = () => {\r\n            if (window.innerWidth < 768) {\r\n                setIsCrushed(true)\r\n            } else {\r\n                setIsCrushed(false)\r\n            }\r\n        }\r\n\r\n        window.removeEventListener('resize', onWindowResize)\r\n\r\n        onWindowResize()\r\n\r\n        window.addEventListener('resize', onWindowResize.bind(this))\r\n    }, [])\r\n\r\n    const SendToast = async (\r\n        message,\r\n        type,\r\n        currentTheme = theme,\r\n        icon = null\r\n    ) => {\r\n        if (!message) return console.error('Failed to send toast, no message!')\r\n        switch (type) {\r\n            case 'success':\r\n                toast.success(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${(props) =>\r\n                            props.currentTheme.accent} 20%,${(props) =>\r\n                            props.currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'info':\r\n                toast.info(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'warn':\r\n                toast.warn(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'error':\r\n                toast.error(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'promise':\r\n                if (!message.promise)\r\n                    return console.log('Error sending notification!')\r\n\r\n                const response = await toast.promise(message.promise, {\r\n                    pending: {\r\n                        render() {\r\n                            return message.pending || 'Working on it...'\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    success: {\r\n                        render() {\r\n                            return message.success || 'All done!'\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    error: {\r\n                        render() {\r\n                            return (\r\n                                message.error || 'Whoops, this action failed!'\r\n                            )\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                })\r\n\r\n                return response\r\n            default:\r\n                toast(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContainer>\r\n            <ToastNotifContext.Provider value={SendToast}>\r\n                <AccountContext.Provider\r\n                    value={{\r\n                        localAuth,\r\n                        setLocalAuth,\r\n                        AuthLogin,\r\n                        AuthLogout,\r\n                        userData,\r\n                        setUserData,\r\n                    }}\r\n                >\r\n                    <ThemeProvider theme={theme}>\r\n                        <IsCrushed.Provider value={isCrushed}>\r\n                            <Background />\r\n                            <Navbar />\r\n                            <ReactRoutes>\r\n                                {/* Page not found */}\r\n                                <Route path='*' element={<PageNotFound />} />\r\n\r\n                                {/* Landing Page */}\r\n                                <Route path='/' element={<Landing />} />\r\n\r\n                                {/* Extra Routes */}\r\n                                <Route path='/about' element={<About />} />\r\n\r\n                                {/* No Account */}\r\n                                <Route element={<Routes.Public />}>\r\n                                    <Route\r\n                                        path='/signup'\r\n                                        element={<SignupLogin login={false} />}\r\n                                    />\r\n\r\n                                    <Route\r\n                                        path='/login'\r\n                                        element={<SignupLogin login={true} />}\r\n                                    />\r\n                                </Route>\r\n\r\n                                {/* Requires Account/Signed in */}\r\n                                <Route element={<Routes.Private />}>\r\n                                    {/* Manage Account */}\r\n                                    <Route\r\n                                        path='/account'\r\n                                        element={<Account />}\r\n                                    />\r\n\r\n                                    {/* //!COOKBOOKS */}\r\n                                    {/* View all cookbooks */}\r\n                                    <Route\r\n                                        path='/cookbooks'\r\n                                        element={<Cookbooks />}\r\n                                    />\r\n\r\n                                    {/* Create a new cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/create'\r\n                                        element={<CreateCookbook />}\r\n                                    />\r\n\r\n                                    {/* View all recipes in a cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID'\r\n                                        exact\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* Edit a cookbook (name, desc, img) */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* //!RECIPES */}\r\n                                    {/* Create a recipe in a certain cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/create'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* View recipe */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/:recipeID'\r\n                                        exact\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* Edit recipe */}\r\n                                    <Route\r\n                                        path='/cookbooks/:cookbookID/recipe/:recipeID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n                                </Route>\r\n                            </ReactRoutes>\r\n                        </IsCrushed.Provider>\r\n                    </ThemeProvider>\r\n                </AccountContext.Provider>\r\n            </ToastNotifContext.Provider>\r\n        </AppContainer>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'thereciperack-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue !== null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    // console.log(`Saving ${prefixedKey} as data:\\n${JSON.stringify(value)}`)\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\n\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\n\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}