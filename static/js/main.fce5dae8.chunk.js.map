{"version":3,"sources":["settings.js","api/cookbook.js","api/users.js","api/email.js","contexts/AccountContext.js","components/AuthRoute.jsx","components/NoAuthRoute.jsx","contexts/IsCrushedContext.js","components/Navigation/NavLink.jsx","components/Navigation/NavButton.jsx","assets/logo.svg","components/Navigation/Navbar.jsx","assets/ripped.png","pages/PageNotFound/PageNotFound.jsx","hooks/useForm.js","pages/Signup-Login/SignupValidation.js","pages/Signup-Login/SignupForm.jsx","pages/Signup-Login/LoginValidation.js","pages/Signup-Login/LoginForm.jsx","pages/Signup-Login/Signup-Login.jsx","contexts/ToastNotifContext.js","pages/Landing/Landing.jsx","pages/About/About.jsx","components/Forms/Checkbox.jsx","pages/Account/CreateThemeModal.jsx","pages/Account/DeleteAccountModal.jsx","api/settings.js","pages/Account/Account.jsx","pages/Cookbooks/CookbookCard.jsx","pages/Cookbooks/CookbooksList.jsx","pages/Cookbooks/SearchBar.jsx","pages/Cookbooks/Cookbooks.jsx","pages/CreateCookbook/CreateValidation.js","pages/CreateCookbook/CreateCookbook.jsx","App.js","hooks/useLocalStorage.js","index.js"],"names":["settings","isDevMode","activeDevelopment","SERVER_URL","getCookbooks","userID","a","console","error","Axios","get","res","response","request","log","message","createCookbook","cookbook","post","editCookbook","cookbookID","newCookbookData","put","deleteCookbook","delete","data","getUser","email","password","params","getUserByID","createUser","name","editUser","newUser","deleteUser","sendEmail","to","subject","html","Account","createContext","AuthRoute","userData","useContext","AccountContext","undefined","NoAuthRoute","IsCrushed","LinkDiv","styled","div","props","theme","muted","secondaryForeground","NavLink","path","title","Nav","Link","as","style","cursor","foreground","accent","secondaryAccent","NavButton","padding","DropdownItem","NavDropdown","Item","faded","RightNavigationDropdown","secondaryBackground","StyledSpinner","Spinner","NavigationBar","ThemeContext","isCrushed","IsCrushedContext","AuthLogout","useState","menuOpen","setMenuOpen","Navbar","sticky","background","navbar","expand","Container","fluid","textDecoration","alt","src","Logo","transform","width","height","className","Brand","color","Toggle","borderWidth","toggled","toggle","rounded","Collapse","id","navbarScroll","Divider","marginRight","animation","align","onClick","DivBody","Header404","h2","Desc","h1","GoBack","button","PageNotFound","navigate","useNavigate","userSelect","draggable","ripped","useForm","callback","validate","defaultValues","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleSubmit","event","preventDefault","validation","handleChange","persist","prev","target","value","addError","isSubmit","toString","trim","test","cPassword","BoxContainer","FormContainer","form","MutedText","p","BoldLink","Input","input","textboxBackground","SubmitButton","ErrorMessage","SignupForm","AuthLogin","SignUp","users","result","status","onSubmit","noValidate","type","onChange","placeholder","required","marginTop","marginBottom","LoginForm","margin","href","TopContainer","BackDrop","motion","HeaderContainer","HeaderText","SmallText","h5","InnerContainer","backdropVariants","expanded","borderRadius","collapsed","expandingTransition","duration","stiffness","SignupLogin","login","isExpanded","setExpanded","active","setActive","playExpandingAnimation","setTimeout","time","initial","animate","variants","transition","ToastNotif","Landing","DivClamp","Header","SectionTitle","h3","Description","About","xmlns","viewBox","fill","d","marginLeft","Check","FormCheck","Checkbox","label","checked","display","StyledModal","Modal","TextboxInput","InputButton","InputLabel","CreateThemeModal","themeName","setThemeName","size","centered","onHide","originalOnHide","apply","closeButton","Title","Body","e","Footer","createThemeModalTrue","confirmPassword","setConfirmPassword","restoreFocus","backdrop","keyboard","disabled","deleteAccountModalTrue","createTheme","newTheme","deleteTheme","themeID","Sidebar","SidebarButton","StickyItems","h4","Sections","Section","InputGroup","ThemeChooser","select","StyledSketchPicker","SketchPicker","AppearanceColorTitle","ShownOnHover","span","scrollTo","element","document","getElementById","pos","position","top","scrollIntoView","behavior","block","inline","setLocalAuth","setUserData","Toast","NewData","setNewData","deleteAccount","modalShow","setModalShow","visibleAppearance","setVisibleAppearance","updateItem","newErr","newPassword","updateSetting","seePublicRecipes","themes","find","x","selectedTheme","res2","show","toLowerCase","DeleteAccountModal","token","fontSize","sharePublicRecipes","map","selected","startsWith","onChangeComplete","newColor","index","findIndex","newThemes","hex","navigator","clipboard","writeText","CardBody","thirdBackground","ImageWrapper","CardTitle","CardDescription","CookbookCard","coverImage","description","loading","setLoading","defaultImage","onLoad","paddingLeft","paddingTop","Button","variant","CookbooksList","filteredCookbooks","onDragEnd","destination","droppableId","provided","droppableProps","ref","innerRef","book","draggableId","draggableProps","dragHandleProps","Alert","backgroundColor","alert","borderColor","border","Heading","SearchBox","NewButton","SearchBar","tagOptions","searchField","setSearchField","setTagField","cookbooks","filter","includes","justifyContent","Cookbooks","TextArea","textarea","CookbookName","FormRow","Row","CreateCookbook","Form","computed","window","getComputedStyle","parseInt","getPropertyValue","scrollHeight","AppContainer","Background","toast","configure","App","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","stringify","setItem","useLocalStorage","localAuth","loginPromise","Promise","resolve","reject","retrievedUser","SendToast","promise","pending","success","setIsCrushed","defaultThemes","onWindowResize","innerWidth","removeEventListener","addEventListener","bind","currentTheme","POSITION","BOTTOM_RIGHT","progressStyle","info","warn","render","ToastNotifContext","Provider","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.fce5dae8.chunk.js","sourcesContent":["let settings = {\r\n    isDevMode: true,\r\n    activeDevelopment: true,\r\n    SERVER_URL: '',\r\n}\r\n\r\nif (settings.isDevMode) settings.SERVER_URL = 'http://localhost:5000'\r\nelse settings.SERVER_URL = 'https://thereciperack-api.deathlybower959.repl.co'\r\n\r\nexport default settings\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getCookbooks = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createCookbook = async (userID, cookbook) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbook) return console.error('Missing cookbook')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbook,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editCookbook = async (userID, cookbookID, newCookbookData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n    if (!newCookbookData) return console.error('Missing newCookbookData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbookID,\r\n            newCookbookData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCookbook = async (userID, cookbookID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n\r\n    try {\r\n        const res = await Axios.delete(settings.SERVER_URL + '/cookbook', {\r\n            data: {\r\n                userID,\r\n                cookbookID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getUser = async (email, password) => {\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                email,\r\n                password,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserByID = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                userID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createUser = async (name, email, password) => {\r\n    if (!name) return console.error('Missing name')\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/users', {\r\n            name,\r\n            email,\r\n            password,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editUser = async (userID, newUser) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newUser) return console.error('Missing newUser')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/users', {\r\n            userID,\r\n            newUser,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = Axios.delete(settings.SERVER_URL + '/users', {\r\n            data: { userID },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const sendEmail = async (to, subject, html) => {\r\n    if (!to) return console.error('Missing to')\r\n    if (!subject) return console.error('Missing subject')\r\n    if (!html) return console.error('Missing html')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/email', {\r\n            params: {\r\n                to,\r\n                subject,\r\n                html,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst Account = createContext()\r\nexport default Account","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet } from 'react-router'\r\nimport AccountContext from '../contexts/AccountContext'\r\n\r\nconst AuthRoute = () => {\r\n    const { userData} = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Navigate to='/login' />\r\n    ) : (\r\n        <Outlet />\r\n    )\r\n}\r\n\r\nexport default AuthRoute\r\n","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet, useLocation } from 'react-router'\r\nimport AccountContext from '../contexts/AccountContext'\r\n\r\nconst NoAuthRoute = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Outlet />\r\n    ) : (\r\n        <Navigate to='/' />\r\n\r\n    )\r\n}\r\n\r\nexport default NoAuthRoute\r\n","import { createContext } from \"react\";\r\n\r\nconst IsCrushed = createContext()\r\nexport default IsCrushed","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    color: ${(props) => props.theme.muted};\r\n    transition: color 300ms ease;\r\n\r\n    &:hover {\r\n        color: ${(props) => props.theme.secondaryForeground};\r\n    }\r\n`\r\n\r\nconst NavLink = ({ path, title, ...props }) => {\r\n    return (\r\n        <Nav.Link as={Link} to={path} {...props}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    padding: 0.5rem 1rem;\r\n    margin-right: -3px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst NavButton = ({ path, title }) => {\r\n    return (\r\n        <Nav.Link style={{ padding: '0' }} as={Link} to={path}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavButton\r\n","export default __webpack_public_path__ + \"static/media/logo.2573ae00.svg\";","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Fade as Hamburger } from 'hamburger-react'\r\nimport {\r\n    Navbar,\r\n    Container,\r\n    Nav,\r\n    NavDropdown,\r\n    Spinner,\r\n    SplitButton,\r\n    Dropdown,\r\n    ButtonGroup,\r\n} from 'react-bootstrap'\r\nimport IsCrushedContext from '../../contexts/IsCrushedContext'\r\n\r\nimport NavLink from './NavLink'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport NavButton from './NavButton'\r\n\r\nimport Logo from '../../assets/logo.svg'\r\n\r\nconst DropdownItem = styled(NavDropdown.Item)`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.25rem 1rem;\r\n    color: ${(props) => props.theme.faded};\r\n    clear: both;\r\n    font-weight: 400;\r\n    text-align: inherit;\r\n    text-decoration: none;\r\n    white-space: nowrap;\r\n    background-color: transparent;\r\n    border: 0;\r\n\r\n    transition: color 300ms ease;\r\n\r\n    &:hover {\r\n        color: ${(props) => props.theme.secondaryForeground};\r\n    }\r\n`\r\n\r\nconst NavigationDropdown = styled(NavDropdown)`\r\n    .dropdown-menu.show {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n    }\r\n\r\n    .dropdown-toggle.nav-link {\r\n        color: ${(props) => props.theme.muted} !important;\r\n        transition: color 300ms ease;\r\n\r\n        &:hover {\r\n            color: ${(props) => props.theme.secondaryForeground} !important;\r\n        }\r\n    }\r\n`\r\n\r\nconst RightNavigationDropdown = styled(NavDropdown)`\r\n    .dropdown-menu.show {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n    }\r\n\r\n    .dropdown-toggle.nav-link {\r\n        color: ${(props) => props.theme.muted} !important;\r\n        transition: color 300ms ease;\r\n\r\n        &:hover {\r\n            color: ${(props) => props.theme.secondaryForeground} !important;\r\n        }\r\n        padding-left: 0;\r\n    }\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst NavigationBar = () => {\r\n    const theme = useContext(ThemeContext)\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, AuthLogout } = useContext(AccountContext)\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n\r\n    return (\r\n        <Navbar\r\n            sticky='top'\r\n            style={{ background: theme.navbar.background }}\r\n            expand='md'\r\n        >\r\n            <Container fluid>\r\n                <Link to='/' style={{ textDecoration: 'none' }}>\r\n                    <img\r\n                        alt=''\r\n                        src={Logo}\r\n                        style={{ transform: 'rotate(7deg)' }}\r\n                        width='30'\r\n                        height='30'\r\n                        className='align-top'\r\n                    />{' '}\r\n                    <Navbar.Brand style={{ color: theme.foreground }}>\r\n                        The Recipe Rack\r\n                    </Navbar.Brand>\r\n                </Link>\r\n\r\n                <Navbar.Toggle\r\n                    style={{ borderWidth: '0' }}\r\n                    aria-controls='basic-navbar-nav'\r\n                >\r\n                    <Hamburger\r\n                        color={theme.foreground}\r\n                        toggled={menuOpen}\r\n                        toggle={setMenuOpen}\r\n                        rounded\r\n                    />\r\n                </Navbar.Toggle>\r\n\r\n                <Navbar.Collapse id='basic-navbar-nav'>\r\n                    <Nav className='me-auto my-2 my-lg-0' navbarScroll>\r\n                        {/* <NavigationDropdown title='Test'>\r\n                            <DropdownItem as={Link} to='/link'>\r\n                                Link\r\n                            </DropdownItem>\r\n                            <NavDropdown.Divider />\r\n                        </NavigationDropdown> */}\r\n                        <NavLink title='My Cookbooks' path='/cookbooks' />\r\n                        <NavLink title='About' path='/about' />\r\n                    </Nav>\r\n                    <Nav>\r\n                        {isCrushed && <NavDropdown.Divider />}\r\n\r\n                        {userData == null || userData == undefined ? (\r\n                            <>\r\n                                <NavLink title='Sign up' path='/signup' style={{marginRight: '8px'}}/>\r\n                                {isCrushed ? (\r\n                                    <NavLink title='Login' path='/login' />\r\n                                ) : (\r\n                                    <NavButton title='Login' path='/login' />\r\n                                )}\r\n                            </>\r\n                        ) : userData == 'none' ? (\r\n                            <StyledSpinner animation='border' />\r\n                        ) : (\r\n                            <RightNavigationDropdown\r\n                                align='end'\r\n                                title={userData?.name ?? 'My Account'}\r\n                            >\r\n                                <DropdownItem as={Link} to='/account'>\r\n                                    My Account\r\n                                </DropdownItem>\r\n                                <NavDropdown.Divider />\r\n                                <DropdownItem\r\n                                    as={Link}\r\n                                    to='#'\r\n                                    onClick={AuthLogout}\r\n                                >\r\n                                    Sign out\r\n                                </DropdownItem>\r\n                            </RightNavigationDropdown>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar\r\n","export default __webpack_public_path__ + \"static/media/ripped.6e33437a.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ripped from '../../assets/ripped.png'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst DivBody = styled.div`\r\n    text-align: center;\r\n    width: 70%;\r\n    padding-bottom: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Header404 = styled.h2`\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst Desc = styled.h1`\r\n    padding: 0px 10px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst GoBack = styled.button`\r\n    width: 100px;\r\n    padding: 10px 10px;\r\n    margin: 20px auto 0px auto;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst PageNotFound = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <DivBody style={{ userSelect: 'none' }}>\r\n            <Header404>404 Error</Header404>\r\n            <Desc>Sorry, we can't seem to find what you're looking for.</Desc>\r\n            <img draggable={false} src={ripped} width='100%' />\r\n            <GoBack onClick={() => navigate(-1)}>Go Back</GoBack>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useForm = (callback, validate, defaultValues = {}) => {\r\n    const [values, setValues] = useState(defaultValues)\r\n    const [errors, setErrors] = useState({})\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback()\r\n        }\r\n    }, [errors])\r\n\r\n    const handleSubmit = (event) => {\r\n        event?.preventDefault()\r\n\r\n        setErrors(() => {\r\n            const validation = validate(values, true)\r\n\r\n            setIsSubmitting(Object.keys(validation).length === 0)\r\n\r\n            return validation\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setErrors((prev) => {\r\n            return { ...prev, [event.target.name]: null }\r\n        })\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }))\r\n    }\r\n\r\n    const addError = (name, message) => {\r\n        setErrors((prev) => {\r\n            return { ...prev, [name]: message }\r\n        })\r\n    }\r\n\r\n    return {\r\n        addError,\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n    }\r\n}\r\n\r\nexport default useForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.name || isSubmit) {\r\n        if (!values.name) errors.name = 'Your name is required'\r\n        else if (values.name?.toString().trim() == '')\r\n            errors.name = 'Your name is required'\r\n        else if (values.name?.length < 5)\r\n        errors.name = 'Too short, must be at least 5 characters long'\r\n    }\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    if (values.cPassword || isSubmit) {\r\n        if (\r\n            !values.cPassword ||\r\n            values.cPassword?.toString().trim() == '' ||\r\n            values.cPassword != values.password\r\n        )\r\n            errors.cPassword = 'Password does not match'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './SignupValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { cookbook, recipe, shopping, users } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.faded};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    &:hover {\r\n        color: ${(props) => props.theme.accent};\r\n    }\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n    width: 100%;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst SignupForm = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { AuthLogin } = useContext(AccountContext)\r\n\r\n    const SignUp = async () => {\r\n        const result = await users.createUser(\r\n            values.name,\r\n            values.email,\r\n            values.password\r\n        )\r\n\r\n        if (result?.status == 201) {\r\n            AuthLogin(values.email, values.password)\r\n\r\n            navigate('/')\r\n        } else if (result?.status == 403) {\r\n            addError(\r\n                'email',\r\n                'User with this email already exists, maybe login instead?'\r\n            )\r\n        } else {\r\n            console.log(result)\r\n        }\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit, addError } = useForm(\r\n        SignUp,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <Input\r\n                    type='text'\r\n                    name='name'\r\n                    onChange={handleChange}\r\n                    value={values.name || ''}\r\n                    placeholder='Name'\r\n                    required\r\n                />\r\n                {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n                <Input\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <Input\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n                <Input\r\n                    type='password'\r\n                    name='cPassword'\r\n                    onChange={handleChange}\r\n                    value={values.cPassword || ''}\r\n                    placeholder='Confirm Password'\r\n                    required\r\n                />\r\n                {errors.cPassword && (\r\n                    <ErrorMessage>{errors.cPassword}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <SubmitButton style={{ marginTop: '15px' }} onClick={handleSubmit}>\r\n                Sign Up\r\n            </SubmitButton>\r\n            <MutedText style={{ marginTop: '5px', marginBottom: '0' }}>\r\n                Already have an account?\r\n            </MutedText>\r\n            <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Login</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './LoginValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate} from 'react-router-dom'\r\nimport { users, cookbook, recipe, shopping } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.faded};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    &:hover {\r\n        color: ${(props) => props.theme.accent};\r\n    }\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n    width: 100%;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst LoginForm = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const { AuthLogin} = useContext(AccountContext)\r\n\r\n    const Login = () => {\r\n        AuthLogin(values.email, values.password)\r\n\r\n        navigate('/')\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n        Login,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <Input\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <Input\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <Link to='/resetpassword' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ margin: '5px auto 15px auto' }}>\r\n                    Forgot your password?\r\n                </BoldLink>\r\n            </Link>\r\n            <SubmitButton onClick={handleSubmit}>Login</SubmitButton>\r\n            <MutedText style={{ margin: '10px auto 0 auto' }} href='#'>\r\n                Don't have an account?\r\n            </MutedText>\r\n            <Link to='/signup' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Create one</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion'\r\nimport Account from '../../contexts/AccountContext'\r\nimport SignupForm from './SignupForm'\r\nimport LoginForm from './LoginForm'\r\n\r\nconst BoxContainer = styled.div`\r\n    max-width: 280px;\r\n    width: 75%;\r\n    min-height: 550px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst TopContainer = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    padding: 0 1.8em;\r\n    padding-bottom: 5em;\r\n`\r\n\r\nconst BackDrop = styled(motion.div)`\r\n    width: 160%;\r\n    height: 550px;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 50%;\r\n    transform: rotate(60deg);\r\n    top: -290px;\r\n    left: -70px;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        0deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 80%\r\n    );\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst HeaderText = styled.h2`\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    line-height: 1.24;\r\n    color: ${(props) => props.theme.foreground};\r\n    z-index: 10;\r\n    margin: 0;\r\n`\r\n\r\nconst SmallText = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: 500;\r\n    font-size: 11px;\r\n    z-index: 10;\r\n    margin: 0;\r\n    margin-top: 7px;\r\n`\r\n\r\nconst InnerContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 1.8em;\r\n`\r\n\r\nconst backdropVariants = {\r\n    expanded: {\r\n        width: '233%',\r\n        height: '1050px',\r\n        borderRadius: '20%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n    collapsed: {\r\n        width: '160%',\r\n        height: '550px',\r\n        borderRadius: '50%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n}\r\n\r\nconst expandingTransition = {\r\n    type: 'spring',\r\n    duration: 2.3,\r\n    stiffness: 30,\r\n}\r\n\r\nconst SignupLogin = ({ login }) => {\r\n    const [isExpanded, setExpanded] = useState(true)\r\n\r\n    const [active, setActive] = useState(login ? 'login' : 'signup')\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation(250)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive(login ? 'login' : 'signup')\r\n        }, expandingTransition.duration * 1000 - 1500)\r\n    }, [login])\r\n\r\n    const playExpandingAnimation = (time) => {\r\n        setExpanded(true)\r\n        setTimeout(() => {\r\n            setExpanded(false)\r\n        }, time ?? expandingTransition.duration * 1000 - 1500)\r\n    }\r\n\r\n    const switchToSignup = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('signup')\r\n        }, 400)\r\n    }\r\n\r\n    const switchToSignin = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('login')\r\n        }, 400)\r\n    }\r\n\r\n    return (\r\n            <BoxContainer>\r\n                <TopContainer>\r\n                    <BackDrop\r\n                        initial={false}\r\n                        animate={isExpanded ? 'expanded' : 'collapsed'}\r\n                        variants={backdropVariants}\r\n                        transition={expandingTransition}\r\n                    />\r\n                    {active === 'login' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Welcome</HeaderText>\r\n                            <HeaderText>Back!</HeaderText>\r\n                            <SmallText>Please login to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                    {active === 'signup' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Create</HeaderText>\r\n                            <HeaderText>Account</HeaderText>\r\n                            <SmallText>Please sign-up to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                </TopContainer>\r\n                <InnerContainer>\r\n                    {active === 'login' && <LoginForm />}\r\n                    {active === 'signup' && <SignupForm />}\r\n                </InnerContainer>\r\n            </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupLogin\r\n","import { createContext } from \"react\";\r\n\r\nconst ToastNotif = createContext()\r\nexport default ToastNotif","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport ToastNotifContext from '../../contexts/ToastNotifContext'\r\n\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst Landing = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    return (\r\n        <DivBody>\r\n            {/* <SearchBar /> */}\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import React, { useContext, useEffect } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport ToastNotifContext from '../../contexts/ToastNotifContext'\r\nimport settings from '../../settings'\r\n\r\nconst DivBody = styled.div`\r\n    text-align: center;\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst DivClamp = styled.div`\r\n    text-align: center;\r\n    width: 50%;\r\n    margin: auto;\r\n`\r\n\r\nconst Header = styled.h2`\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst SectionTitle = styled.h3`\r\n    color: ${(props) => props.theme.foreground};\r\n    margin-top: 20px;\r\n`\r\n\r\nconst Description = styled.p`\r\n    font-size: 20px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n`\r\n\r\nconst About = () => {\r\n    const theme = useContext(ThemeContext)    \r\n\r\n    return (\r\n        <DivBody>\r\n            <DivClamp>\r\n                <Header>About</Header>\r\n\r\n                <SectionTitle>Who made it?</SectionTitle>\r\n                <Description>\r\n                    My name is Benjamin, and I am a 13 year old developer, that\r\n                    strives to learn more. I wanted to learn something along the\r\n                    lines of web development. I didn't want to just use html,\r\n                    css, and js, I wanted to try something new! I looked around,\r\n                    and I eventually found a framework called React. Put very\r\n                    simply, it allows me to create much cleaner user interfaces,\r\n                    with much more interactive pages, and a faster websites.\r\n                </Description>\r\n\r\n                <SectionTitle>Our Purpose</SectionTitle>\r\n                <Description>\r\n                    I had found some tutorials showing how to create some React\r\n                    projects, but I soon found myself in tutorial hell. I was\r\n                    just following along, not really learning. Since the best\r\n                    way for me to learn is to teach myself, I decided to come up\r\n                    with a project. I didn't want to make a pointless project,\r\n                    one that wasn't used. I wanted to create something my\r\n                    family, and friends could use. I eventually came up with\r\n                    this idea when I was helping my mother cook. She kept having\r\n                    to switch between recipes, and it seemed very annoying. I\r\n                    decided to make this website to help manage, and share your\r\n                    recipes. I know that they are many websites out there just\r\n                    like this, but I wanted it to have more features, no ads,\r\n                    and a cleaner ui!\r\n                </Description>\r\n\r\n                <SectionTitle>How was it done?</SectionTitle>\r\n                <Description>\r\n                    Since this was my first <i>real</i> React project, that I\r\n                    was doing without a tutorial, Stack Overflow, Youtube, and\r\n                    Google were my best friends. I first figured out how to make\r\n                    the client side of the website, the part that you see. It\r\n                    took a bit to figure out, but I picked it up in the end. I\r\n                    then had to learn how to make the sever side, the part that\r\n                    creates your account, and saves your data and settings. This\r\n                    bit was a little harder than I had originally thought it\r\n                    would be, but it worked out in the end. It's really nice to\r\n                    see that I thought about the code that went into this\r\n                    website, and that I can be proud of it, instead of just\r\n                    writing the code from videos online.\r\n                </Description>\r\n\r\n                {settings.isDevMode && <h5 style={{color: theme.error}}>\r\n                    Still undergoing development...\r\n                    </h5>}\r\n                \r\n\r\n                <div style={{ marginBottom: '20px', marginTop: '20px' }}>\r\n                    <a\r\n                        href='https://github.com/DeathlyBower959/thereciperack'\r\n                        target='_blank'\r\n                    >\r\n                        <svg\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0 1 12 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                    <a\r\n                        href='https://youtube.com/DeathlyBower959?sub_confirmation=1'\r\n                        target='_blank'\r\n                    >\r\n                        <svg\r\n                            style={{ marginLeft: '10px' }}\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M19.615 3.184c-3.604-.246-11.631-.245-15.23 0C.488 3.45.029 5.804 0 12c.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0C23.512 20.55 23.971 18.196 24 12c-.029-6.185-.484-8.549-4.385-8.816zM9 16V8l8 3.993L9 16z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n            </DivClamp>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useContext } from 'react'\r\nimport { FormCheck } from 'react-bootstrap'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst Check = styled(FormCheck)`\r\n    .form-check-input {\r\n        background-color: ${(props) => props.theme.textboxBackground};\r\n        border: 0;\r\n        cursor: pointer;\r\n        width: 1.3em;\r\n        height: 1.3em;\r\n        margin-left: 10px;\r\n    }\r\n    .form-check-input:focus {\r\n        box-shadow: none;\r\n    }\r\n`\r\n\r\nconst Checkbox = ({label, className, checked, ...props }) => {\r\n    const theme = useContext(ThemeContext)\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Check checked={checked} {...props} />\r\n            <p style={{ marginLeft: '6px', color: theme.foreground }}>\r\n                {label ?? 'No checkbox name'}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${props => props.theme.secondaryBackground};\r\n        color: ${props => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst TextboxInput = styled.input`\r\n    border-radius: 0.25rem;\r\n\r\n    max-width: 500px;\r\n    width: 50%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n\r\n    margin-left: 7px;\r\n`\r\n\r\nconst InputButton = styled.button`\r\n    margin-left: 10px;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\nconst InputLabel = styled.p`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n\r\n    const [themeName, setThemeName] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            onHide={() => {\r\n                var originalOnHide = props.onHide\r\n\r\n                setThemeName('')\r\n                originalOnHide.apply()\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                   New Theme\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InputLabel>Theme Name</InputLabel>\r\n                <TextboxInput onChange={(e) => setThemeName(e.target.value)} value={themeName}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputButton onClick={() => props.createThemeModalTrue(themeName)}>Create</InputButton>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n        color: ${(props) => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst TextboxInput = styled.input`\r\n    border-radius: 0.25rem;\r\n\r\n    max-width: 500px;\r\n    width: 50%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n\r\n    margin-left: 7px;\r\n`\r\n\r\nconst InputButton = styled.button`\r\n    margin-left: 10px;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\nconst InputLabel = styled.p`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst Description = styled.p`\r\n    color: white;\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            restoreFocus\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            onHide={() => {\r\n                var originalOnHide = props.onHide\r\n\r\n                setConfirmPassword('')\r\n                originalOnHide.apply()\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                    Confirm Account Deletion\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Description>\r\n                    Deleting your account will mean all of your recipes,\r\n                    cookbooks, and account data will be removed.\r\n                </Description>\r\n                <Description>\r\n                    If you are sure you want to delete your account, please confirm your\r\n                    password.\r\n                </Description>\r\n                <InputLabel>Password</InputLabel>\r\n                <TextboxInput\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <InputButton\r\n                    disabled={confirmPassword != props.password}\r\n                    onClick={props.deleteAccountModalTrue}\r\n                >\r\n                    Delete Account\r\n                </InputButton>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getSettings = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/settings', {\r\n            userID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editSettings = async (userID, newSettingData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newSettingData) return console.error('Missing newSettingData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings', {\r\n            userID,\r\n            newSettingData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createTheme = async (userID, newTheme) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newTheme) return console.error('Missing newTheme')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newTheme,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTheme = async (userID, newThemeData, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newThemeData) return console.error('Missing newThemeData')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newThemeData,\r\n            themeID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTheme = async (userID, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.delete(\r\n            settings.SERVER_URL + '/settings/theme',\r\n            {\r\n                data: {\r\n                    userID,\r\n                    themeID,\r\n                },\r\n            }\r\n        )\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { users } from '../../api/api'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\n\r\nimport Checkbox from '../../components/Forms/Checkbox'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nimport { SketchPicker } from 'react-color'\r\nimport CreateThemeModal from './CreateThemeModal'\r\nimport DeleteAccountModal from './DeleteAccountModal'\r\nimport { sendEmail } from '../../api/email'\r\nimport { createTheme, deleteTheme } from '../../api/settings'\r\n\r\n// Containing div\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n\r\n    border-radius: 20px;\r\n`\r\n\r\n// Holds navigation for settings\r\nconst Sidebar = styled.div`\r\n    border-radius: 20px;\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n`\r\n\r\n// Button for sidebar\r\nconst SidebarButton = styled.button`\r\n    width: 100%;\r\n    display: block;\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n\r\n    transition: filter 240ms ease-in-out;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    text-align: left;\r\n    padding: 10px 10px 10px 17px;\r\n    margin-right: 30px;\r\n`\r\n\r\n// Wraps navigation items, and makes them move down once top of the screen is hit.\r\nconst StickyItems = styled.div`\r\n    position: sticky;\r\n    top: 100px;\r\n`\r\n\r\n// Navigation Header\r\nconst Header = styled.h4`\r\n    color: ${(props) => props.theme.foreground};\r\n    margin: 15px 20px 15px 15px;\r\n`\r\n\r\n// Holds all <Section> element\r\nconst Sections = styled.div`\r\n    margin-left: 20px;\r\n    width: 100%;\r\n`\r\n\r\n// Setting section\r\nconst Section = styled.div`\r\n    margin-top: 20px;\r\n`\r\n\r\n// Setting section title\r\nconst SectionTitle = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\n// Input field of type text\r\nconst TextboxInput = styled.input`\r\n    border-radius: 0.25rem;\r\n\r\n    max-width: 500px;\r\n    width: 50%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n\r\n    margin-left: 7px;\r\n`\r\n\r\n// Label above input\r\nconst InputLabel = styled.p`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-top: 15px;\r\n    margin-bottom: 5px;\r\n`\r\n\r\n// Input Button Update\r\nconst InputButton = styled.button`\r\n    margin-left: 10px;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\n// Group for an input area\r\nconst InputGroup = styled.div`\r\n    margin-left: 8px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\n// Paragraph that is added when error is shown\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\n// Select Dropdown to choose theme\r\nconst ThemeChooser = styled.select`\r\n    display: block;\r\n    max-width: 500px;\r\n    width: 50%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n    appearance: none;\r\n    border-radius: 0.25rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n    margin-left: 7px;\r\n`\r\n\r\n// Color picker\r\nconst StyledSketchPicker = styled(SketchPicker)`\r\n    background: transparent !important;\r\n    margin-top: 10px;\r\n    margin-left: 10px;\r\n\r\n    input {\r\n        background-color: ${(props) => props.theme.textboxBackground};\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    label {\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    input:focus-visible {\r\n        outline: 0 !important;\r\n    }\r\n`\r\n\r\n// Buttons to display color pickers\r\nconst AppearanceColorTitle = styled.button`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-left: 10px;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: transparent;\r\n    background: transparent;\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\nconst ShownOnHover = styled.span`\r\n    filter: blur(3px);\r\n    transition: filter 250ms;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    &:hover {\r\n        filter: none;\r\n    }\r\n`\r\n\r\n// Scroll to any element, with an offset of x pixels\r\nconst scrollTo = (id) => {\r\n    var element = document.getElementById(id)\r\n\r\n    let pos = element.style.position\r\n    let top = element.style.top\r\n\r\n    element.style.position = 'relative'\r\n    element.style.top = '-75px'\r\n\r\n    element?.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n        inline: 'nearest',\r\n    })\r\n\r\n    element.style.top = top\r\n    element.style.position = pos\r\n}\r\n\r\nconst Account = () => {\r\n    const theme = useContext(ThemeContext)\r\n    const { setLocalAuth, userData, setUserData, AuthLogout } =\r\n        useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [NewData, setNewData] = useState({ ...userData, password: null })\r\n\r\n    const [modalShow, setModalShow] = useState({\r\n        createTheme: false,\r\n        deleteAccount: false,\r\n    })\r\n    const [visibleAppearance, setVisibleAppearance] = useState('')\r\n\r\n    // Updating state on inputs\r\n    const handleChange = (e) => {\r\n        setNewData((prev) => {\r\n            setErrors((prev) => {\r\n                return { ...prev, [e.target.name]: null }\r\n            })\r\n            return {\r\n                ...prev,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        })\r\n    }\r\n\r\n    // Update item in database\r\n    const updateItem = async (e) => {\r\n        let newErr = {}\r\n        if (e.target.name == 'name') {\r\n            if (!NewData.name) newErr.name = 'Your name is required'\r\n            else if (NewData.name?.toString().trim() == '')\r\n                newErr.name = 'Your name is required'\r\n            else if (NewData.name?.length < 5)\r\n                newErr.name = 'Too short, must be at least 5 characters long'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update name...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    Toast('Name updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'email') {\r\n            if (!NewData.email) newErr.email = 'Your email is required'\r\n            else if (NewData.email?.toString().trim() == '')\r\n                newErr.email = 'Your email is required'\r\n            else if (!/\\S+@\\S+\\.\\S+/.test(NewData.email))\r\n                newErr.email = 'Email address is invalid'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update email...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n\r\n                    Toast('Email updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'password') {\r\n            if (!NewData.password)\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password.toString().trim() == '')\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password?.length < 8)\r\n                newErr.password = 'Password must be 8 or more characters'\r\n        }\r\n\r\n        if (e.target.name == 'newPassword') {\r\n            if (!NewData.newPassword)\r\n                newErr.newPassword = 'You have to specify a new password'\r\n            else if (NewData.password.toString().trim() == '')\r\n                newErr.newPassword = 'You have to specify a new password'\r\n            else if (NewData.newPassword?.length < 8)\r\n                newErr.newPassword = 'Password must be 8 or more characters'\r\n            else if (NewData.newPassword == userData.password)\r\n                newErr.newPassword = 'Password must be different'\r\n            else {\r\n                const res = await users.editUser(userData.id, {\r\n                    ...NewData,\r\n                    password: NewData.newPassword,\r\n                })\r\n                if (res.status != 201)\r\n                    Toast('Failed to update password...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    setNewData((prev) => {\r\n                        return { ...prev, password: null, newPassword: null }\r\n                    })\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n                    Toast(\r\n                        'Password updated! Make sure to remember it!',\r\n                        'success'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setErrors(newErr)\r\n    }\r\n\r\n    const updateSetting = async (e) => {\r\n        if (e.target.name == 'seePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('You can now see public recipes!', 'success')\r\n                else Toast(\"You can't see public recipes anymore!\", 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'sharePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('Your public recipes are now visible!', 'success')\r\n                else Toast('Your public recipes are now hidden!', 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'selectedTheme') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.value,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n                console.log(res.data)\r\n            } else {\r\n                setUserData(res.data)\r\n                setVisibleAppearance('')\r\n                Toast(\r\n                    'Your theme was changed!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == e.target.value\r\n                    )\r\n                )\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'deleteTheme') {\r\n            const res = await deleteTheme(\r\n                userData.id,\r\n                userData.settings.selectedTheme\r\n            )\r\n\r\n            if (res.status != 200)\r\n                return Toast('Failed to delete theme', 'error')\r\n\r\n            const res2 = await users.editUser(userData.id, {\r\n                ...res.data,\r\n                settings: {\r\n                    ...res.data.settings,\r\n                    selectedTheme: 'default_themes.dark',\r\n                },\r\n            })\r\n\r\n            if (res2.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n            } else {\r\n                setUserData(res2.data)\r\n                Toast(\r\n                    'Theme deleted!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == res.data.settings.selectedTheme\r\n                    )\r\n                )\r\n                setVisibleAppearance('')\r\n            }\r\n        }\r\n    }\r\n\r\n    // Used as when data is saved to database, it sets password to null\r\n    useEffect(() => {\r\n        setNewData({ ...userData, password: null })\r\n    }, [userData])\r\n\r\n    return (\r\n        <>\r\n            <CreateThemeModal\r\n                show={modalShow.createTheme}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n                }\r\n                createThemeModalTrue={async (name) => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n\r\n                    const res = await createTheme(userData.id, {\r\n                        name,\r\n                        themeID: 'user_themes.' + name.trim().toLowerCase(),\r\n                    })\r\n\r\n                    if (res.status != 201)\r\n                        return Toast('Failed to create theme', 'error')\r\n\r\n                    setUserData(res.data)\r\n                }}\r\n            />\r\n\r\n            <DeleteAccountModal\r\n                show={modalShow.deleteAccount}\r\n                password={userData.password}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n                }\r\n                deleteAccountModalTrue={async () => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n\r\n                    const id = userData.id\r\n                    setLocalAuth({ email: null, password: null })\r\n                    AuthLogout()\r\n                    Toast('Account Deleted!', 'warn ')\r\n                    users.deleteUser(id)\r\n                }}\r\n            />\r\n            <DivBody>\r\n                <Sidebar>\r\n                    <StickyItems>\r\n                        <Header>Settings</Header>\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-account')}\r\n                        >\r\n                            Account\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-privacy')}\r\n                        >\r\n                            Privacy\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-appearance')}\r\n                        >\r\n                            Appearance\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-adv.settings')}\r\n                        >\r\n                            Advanced settings\r\n                        </SidebarButton>\r\n                    </StickyItems>\r\n                </Sidebar>\r\n                <Sections>\r\n                    <Section id='account-account'>\r\n                        <SectionTitle>Account</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <InputLabel>Name</InputLabel>\r\n                            <TextboxInput\r\n                                onChange={handleChange}\r\n                                name='name'\r\n                                value={NewData?.name ?? ''}\r\n                            />\r\n                            <InputButton\r\n                                disabled={\r\n                                    userData?.name?.trim() ==\r\n                                    NewData.name?.trim()\r\n                                }\r\n                                name='name'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </InputButton>\r\n\r\n                            {errors.name && (\r\n                                <ErrorMessage>{errors.name}</ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <InputLabel>Email</InputLabel>\r\n                            <TextboxInput\r\n                                onChange={handleChange}\r\n                                name='email'\r\n                                value={NewData?.email ?? ''}\r\n                            />\r\n                            <InputButton\r\n                                disabled={\r\n                                    userData?.email?.trim() ==\r\n                                    NewData?.email?.trim()\r\n                                }\r\n                                name='email'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </InputButton>\r\n\r\n                            {errors.email ? (\r\n                                <ErrorMessage>{errors.email}</ErrorMessage>\r\n                            ) : (\r\n                                userData?.email?.trim() ==\r\n                                    NewData?.email?.trim() &&\r\n                                userData.token != null && (\r\n                                    <p\r\n                                        style={{\r\n                                            margin: '3px auto auto 12px',\r\n                                            color: theme.secondaryForeground,\r\n                                            fontSize: '12px',\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            sendEmail(\r\n                                                userData.email,\r\n                                                'Verification Email',\r\n                                                `\r\n                                                <!DOCTYPE html>\r\n                                                <html lang=\"en\">\r\n                                                <head>\r\n                                                        <meta charset=\"UTF-8\" />\r\n                                                        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n                                                        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n                                                        <title>Static Template</title>\r\n                                                        <link\r\n                                                        href=\"https://fonts.googleapis.com/css?family=Muli&amp;display=swap\"\r\n                                                        rel=\"stylesheet\"\r\n                                                        />\r\n                                                    </head>\r\n                                                    <body>\r\n                                                    <div\r\n                                                        style=\"\r\n                                                            margin: auto;\r\n                                                            width: 400px;\r\n                                                            background-color: #f6f6f6;\r\n                                                            padding: 10px;\r\n                                                            font-family: 'Muli', sans-serif;\r\n                                                        \"\r\n                                                        >\r\n                                                        <div\r\n                                                            style=\"\r\n                                                            margin: 15px;\r\n                                                            padding: 10px;\r\n                                                            background-color: #fff;\r\n                                                            text-align: center;\r\n                                                            \"\r\n                                                        >\r\n                                                            <h2>Thanks for signing up,<br />${userData.name}!</h2>\r\n                                                    \r\n                                                            <p style=\"padding-left: 25px; padding-right: 25px;\">\r\n                                                            Please verify your email address to unlock more features!\r\n                                                            </p>\r\n                                                            \r\n                                                            <a href=\"http://localhost:5000/users/authenticate/?token=${userData.token}\" target=\"_blank\">\r\n                                                            <button\r\n                                                                style=\"\r\n                                                                width: 45%;\r\n                                                                padding: 10px 20px 10px 20px;\r\n                                                                background-color: #a74ef6;\r\n                                                                \r\n                                                                border-radius: 20px;\r\n                                                                outline: 0;\r\n                                                                border: 0;\r\n                                                                cursor: pointer;\r\n                                                                margin-bottom: 10px;\r\n                                                                \"\r\n                                                                >\r\n                                                                Verify Email Now\r\n                                                                </button>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        </body>\r\n                                                    </html>`\r\n                                            )\r\n\r\n                                            Toast(\r\n                                                'Check your email for a verification link!(Check your spam)',\r\n                                                'info'\r\n                                            )\r\n                                        }}\r\n                                    >\r\n                                        Resend Email\r\n                                    </p>\r\n                                )\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <InputLabel>Password</InputLabel>\r\n                            <TextboxInput\r\n                                onChange={handleChange}\r\n                                name='password'\r\n                                type='password'\r\n                                value={NewData?.password ?? ''}\r\n                            />\r\n\r\n                            {errors.password && (\r\n                                <ErrorMessage>{errors.password}</ErrorMessage>\r\n                            )}\r\n\r\n                            <InputLabel>New Password</InputLabel>\r\n                            <TextboxInput\r\n                                onChange={handleChange}\r\n                                name='newPassword'\r\n                                type='password'\r\n                                value={NewData?.newPassword ?? ''}\r\n                            />\r\n                            <InputButton\r\n                                disabled={\r\n                                    userData?.password?.trim() !=\r\n                                        NewData?.password?.trim() ||\r\n                                    NewData?.password?.trim() ==\r\n                                        NewData?.newPassword?.trim()\r\n                                }\r\n                                name='newPassword'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </InputButton>\r\n\r\n                            {errors.newPassword && (\r\n                                <ErrorMessage>\r\n                                    {errors.newPassword}\r\n                                </ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-privacy'>\r\n                        <SectionTitle>Privacy</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Checkbox\r\n                                name='seePublicRecipes'\r\n                                label='See public recipes'\r\n                                checked={NewData?.settings?.seePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                            <Checkbox\r\n                                name='sharePublicRecipes'\r\n                                label='Share your public recipes'\r\n                                checked={NewData.settings?.sharePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-appearance'>\r\n                        <SectionTitle>Appearance</SectionTitle>\r\n\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                                marginTop: '20px',\r\n                            }}\r\n                        >\r\n                            <div style={{ width: '100%', display: 'flex' }}>\r\n                                <ThemeChooser\r\n                                    name='selectedTheme'\r\n                                    onChange={updateSetting}\r\n                                >\r\n                                    {userData.settings?.themes?.map((theme) => {\r\n                                        return (\r\n                                            <option\r\n                                                selected={\r\n                                                    userData.settings\r\n                                                        ?.selectedTheme ==\r\n                                                    theme.themeID\r\n                                                }\r\n                                                value={theme.themeID}\r\n                                            >\r\n                                                {theme.name}\r\n                                            </option>\r\n                                        )\r\n                                    })}\r\n                                </ThemeChooser>\r\n                                <InputButton\r\n                                    onClick={() =>\r\n                                        setModalShow((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                createTheme: true,\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Create\r\n                                </InputButton>\r\n                            </div>\r\n                        </InputGroup>\r\n\r\n                        {/* Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor' ? '' : 'bgcolor'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            background: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor2' ? '' : 'bgcolor2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Textbox Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'textbg' ? '' : 'textbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Textbox Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'textbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            textboxBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).textboxBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent' ? '' : 'accent'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            accent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).accent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent2' ? '' : 'accent2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryAccent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryAccent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground' ? '' : 'foreground'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            foreground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).foreground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground2'\r\n                                            ? ''\r\n                                            : 'foreground2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryForeground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryForeground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Muted Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'muted' ? '' : 'muted'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Muted Text\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'muted' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            muted: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).muted\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Faded Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'faded' ? '' : 'faded'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Faded\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'faded' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            faded: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).faded\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Error Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'error' ? '' : 'error'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Error\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'error' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            error: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).error\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Navbar background Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'navbarbg' ? '' : 'navbarbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Navigation Bar Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'navbarbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            navbar: {\r\n                                                ...newThemes[index].navbar,\r\n                                                background: newColor.hex,\r\n                                            },\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).navbar.background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Only displays delete button if the user created the theme */}\r\n                        {!userData?.settings?.selectedTheme.startsWith(\r\n                            'default_themes'\r\n                        ) &&\r\n                            NewData?.id != null && (\r\n                                <InputButton\r\n                                    name='deleteTheme'\r\n                                    style={{ marginTop: '7px' }}\r\n                                    onClick={updateSetting}\r\n                                >\r\n                                    Delete Theme\r\n                                </InputButton>\r\n                            )}\r\n                    </Section>\r\n\r\n                    <Section id='account-adv.settings'>\r\n                        <SectionTitle>Advanced Settings</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <InputLabel>\r\n                                User ID:{' '}\r\n                                <ShownOnHover\r\n                                    onClick={() => {\r\n                                        navigator.clipboard.writeText(\r\n                                            userData.id\r\n                                        )\r\n                                        Toast('Copied to clipboard!', 'info')\r\n                                    }}\r\n                                >\r\n                                    {userData.id}\r\n                                </ShownOnHover>\r\n                            </InputLabel>\r\n                        </InputGroup>\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <InputButton\r\n                                style={{ marginLeft: '0' }}\r\n                                name='closeAccount'\r\n                                onClick={() =>\r\n                                    setModalShow((prev) => {\r\n                                        return { ...prev, deleteAccount: true }\r\n                                    })\r\n                                }\r\n                            >\r\n                                Close Account\r\n                            </InputButton>\r\n                        </InputGroup>\r\n                    </Section>\r\n                </Sections>\r\n            </DivBody>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React, { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport defaultImage from '../../assets/logo.svg'\r\n\r\nconst CardBody = styled.div`\r\n    transition: transform 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n\r\n    border-radius: 15px;\r\n    margin-bottom: 15px;\r\n\r\n    background-color: ${(props) => props.theme.thirdBackground};\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n    margin-left: 10px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    padding-right: 0px;\r\n    width: 200px;\r\n`\r\nconst CardTitle = styled.h5`\r\n    margin-bottom: 0px;\r\n    margin-left: 10px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst CardDescription = styled.p`\r\n    margin-top: 5px;\r\n    margin-left: 10px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst CookbookCard = ({ cookbook, deleteCookbook }) => {\r\n    const {\r\n        name = 'No Name',\r\n        coverImage,\r\n        description = 'No Description',\r\n        id,\r\n    } = cookbook\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    return (\r\n        <CardBody>\r\n            <div className='row no-gutters'>\r\n                <ImageWrapper className='col-sm-3'>\r\n                    {loading && <StyledSpinner animation='border' />}\r\n\r\n                    <Link to={`/cookbook/${id}`}>\r\n                        <img\r\n                            src={coverImage ?? defaultImage}\r\n                            style={{ borderRadius: '10px', display: (loading ? 'none' : 'block') }}\r\n                            className='card-img-top h-100'\r\n                            alt='Not found... :('\r\n                            onLoad={() => setLoading(false)}\r\n                        />\r\n                    </Link>\r\n                </ImageWrapper>\r\n                <div\r\n                    className='col-sm-7'\r\n                    style={{ paddingLeft: '0px', paddingTop: '3px' }}\r\n                >\r\n                    <div className='card-body'>\r\n                        <Link\r\n                            style={{\r\n                                color: '#000',\r\n                                textDecoration: 'none',\r\n                            }}\r\n                            to={`/cookbook/${id}`}\r\n                        >\r\n                            <CardTitle className='card-title'>{name}</CardTitle>\r\n                        </Link>\r\n                        <hr style={{ margin: '10px auto 10px 10px' }} />\r\n                        <CardDescription className='card-text'>\r\n                            {description}\r\n                        </CardDescription>\r\n                        <div>\r\n                            <Link to={`/cookbook/${id}/edit`}>\r\n                                <Button style={{ margin: '5px 5px 0px 5px' }}>\r\n                                    Edit\r\n                                </Button>\r\n                            </Link>\r\n                            <Button\r\n                                style={{ margin: '5px 5px 0px 5px' }}\r\n                                variant='danger'\r\n                                onClick={() => deleteCookbook(id)}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CardBody>\r\n    )\r\n}\r\n\r\nexport default CookbookCard\r\n","import React, { useContext } from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { ThemeContext } from 'styled-components'\r\nimport Account from '../../contexts/AccountContext'\r\nimport CookbookCard from './CookbookCard'\r\n\r\nconst CookbooksList = ({ filteredCookbooks, deleteCookbook }) => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const handleDragEnd = (res) => {\r\n        if (!res.destination) return\r\n        //    const items = Array.from(filteredRecipes)\r\n        //    const [reorderedItem] = items.splice(res.source.index, 1);\r\n        //    items.splice(res.destination.index, 0, reorderedItem)\r\n\r\n        //    setRecipes(items)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {filteredCookbooks?.length > 0 ? (\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId='recipeListDrop'>\r\n                        {(provided) => (\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {filteredCookbooks.map((book, index) => {\r\n                                    return (\r\n                                        <Draggable\r\n                                            key={book.id}\r\n                                            draggableId={book.id}\r\n                                            index={index}\r\n                                        >\r\n                                            {(provided) => (\r\n                                                <div\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    ref={provided.innerRef}\r\n                                                >\r\n                                                    <CookbookCard\r\n                                                        cookbook={book}\r\n                                                        deleteCookbook={\r\n                                                            deleteCookbook\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            ) : (\r\n                <Alert\r\n                    style={{\r\n                        marginTop: '15px',\r\n                        backgroundColor: theme.alert.background,\r\n                        color: theme.alert.color,\r\n                        borderColor: theme.alert.border\r\n                    }}\r\n                    variant='danger'\r\n                >\r\n                    <Alert.Heading>Hmm...</Alert.Heading>\r\n                    <p>Seems like there are no cookbooks with that name!</p>\r\n                </Alert>\r\n            )}\r\n            <div style={{ marginTop: '20px' }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CookbooksList\r\n","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport IsCrushedContext from '../../contexts/IsCrushedContext'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nimport CookbookCard from './CookbookCard'\r\nimport { cookbook } from '../../api/api'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\nimport { Alert, Spinner } from 'react-bootstrap'\r\nimport CookbookList from './CookbooksList'\r\n\r\nconst DivBody = styled.div`\r\n    display: flex;\r\n    width: 80%;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst SearchBox = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n    appearance: none;\r\n    border-radius: 0.25rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst TagSelect = styled.select`\r\n    display: block;\r\n    padding: 0.475rem 2.25rem 0.475rem 0.55rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.muted};\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n    border-radius: 0.25rem;\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst NewButton = styled.button`\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n\r\n    width: 50px;\r\n    height: 50px;\r\n`\r\n\r\nconst SearchBar = ({ tagOptions }) => {\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, setUserData } = useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [searchField, setSearchField] = useState('')\r\n    const [tagField, setTagField] = useState('none')\r\n\r\n    const filteredCookbooks = userData?.cookbooks?.filter((book) => {\r\n        return book.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n\r\n    const handleChange = (e, type) => {\r\n        if (type === 'search') setSearchField(e.target.value)\r\n        else if (type === 'tag') setTagField(e.target.value)\r\n    }\r\n\r\n    const deleteCookbook = async (id) => {\r\n        const res = await cookbook.deleteCookbook(userData.id, id)\r\n        if (res?.status != 200) Toast('Failed to delete cookbook...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Cookbook deleted!', 'success')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DivBody>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    margin: `10px auto 10px auto`,\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <SearchBox\r\n                    placeholder='Search Cookbooks'\r\n                    aria-label='Search Cookbooks'\r\n                    onChange={(e) => handleChange(e, 'search')}\r\n                />\r\n                <Link to='/cookbook/create'>\r\n                    <NewButton\r\n                        style={{ marginLeft: '10px' }}\r\n                        disabled={userData == null || userData == undefined}\r\n                    >\r\n                        New\r\n                    </NewButton>\r\n                </Link>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                {userData == null ||\r\n                    (userData == 'none' && (\r\n                        <div style={{ width: '100%' }}>\r\n                            <div style={{ margin: '10px 50% 0px 50%' }}>\r\n                                <StyledSpinner animation='border' />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <div\r\n                    style={{\r\n                        width: '55%',\r\n                        display:\r\n                            userData == null || userData == 'none'\r\n                                ? 'none'\r\n                                : '',\r\n                    }}\r\n                >\r\n                    {userData && userData?.cookbooks?.length == 0 ? (\r\n                        <Alert\r\n                            variant='danger'\r\n                            style={{\r\n                                marginTop: '10px',\r\n                                backgroundColor: theme.alert.background,\r\n                                color: theme.alert.color,\r\n                                borderColor: theme.alert.border,\r\n                            }}\r\n                        >\r\n                            <Alert.Heading>Hmm...</Alert.Heading>\r\n                            Seems like you have no cookbooks! Try creating\r\n                            one...\r\n                        </Alert>\r\n                    ) : (\r\n                        <CookbookList\r\n                            filteredCookbooks={filteredCookbooks}\r\n                            deleteCookbook={deleteCookbook}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport SearchBar from '../Cookbooks/SearchBar'\r\n\r\n// Containing div\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n\r\n    border-radius: 20px;\r\n`\r\n\r\nconst Cookbooks = () => {\r\n    \r\n    return (\r\n        <DivBody>\r\n            <SearchBar/>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default Cookbooks\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Container, Row, Col } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { cookbook } from '../../api/api'\r\nimport Account from '../../contexts/AccountContext'\r\nimport IsCrushed from '../../contexts/IsCrushedContext'\r\nimport useForm from '../../hooks/useForm'\r\nimport validate from './CreateValidation'\r\n\r\nconst DivBody = styled.div`\r\n    text-align: center;\r\n    width: 80%;\r\n    padding-bottom: 40px;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 50%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 60%;\r\n    resize: none;\r\n    min-height: 42px;\r\n    height: 60px;\r\n    overflow: hidden;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 5px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.textboxBackground};\r\n`\r\n\r\nconst CookbookName = styled.h1`\r\n    margin-top: 15px;\r\n    margin-bottom: 20px;\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst FormRow = styled(Row)`\r\n    margin-bottom: 10px;\r\n    justify-content: center;\r\n`\r\n\r\nconst CreateCookbook = () => {\r\n    const Create = () => {}\r\n    const { userData } = useContext(Account)\r\n    const [newData, setNewData] = useState({})\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n        Create,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <DivBody>\r\n            <Container>\r\n                <Form\r\n                    style={{ width: '100%' }}\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                >\r\n                    <Row>\r\n                        <CookbookName>\r\n                            {values.name || 'New Cookbook'}\r\n                        </CookbookName>\r\n                    </Row>\r\n                    <FormRow>\r\n                        <Input\r\n                            name='name'\r\n                            onChange={handleChange}\r\n                            value={values.name || ''}\r\n                            placeholder='Name'\r\n                            required\r\n                        />\r\n                        {errors.name && (\r\n                            <ErrorMessage>{errors.name}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    <FormRow>\r\n                        <TextArea\r\n                            name='description'\r\n                            onChange={(e) => {\r\n                                handleChange(e)\r\n                                // Reset field height\r\n                                e.target.style.height = 'inherit'\r\n\r\n                                // Get the computed styles for the element\r\n                                const computed = window.getComputedStyle(\r\n                                    e.target\r\n                                )\r\n\r\n                                // Calculate the height\r\n                                const height =\r\n                                    parseInt(\r\n                                        computed.getPropertyValue(\r\n                                            'border-top-width'\r\n                                        ),\r\n                                        10\r\n                                    ) +\r\n                                    parseInt(\r\n                                        computed.getPropertyValue(\r\n                                            'padding-top'\r\n                                        ),\r\n                                        10\r\n                                    ) +\r\n                                    e.target.scrollHeight +\r\n                                    parseInt(\r\n                                        computed.getPropertyValue(\r\n                                            'padding-bottom'\r\n                                        ),\r\n                                        10\r\n                                    ) +\r\n                                    parseInt(\r\n                                        computed.getPropertyValue(\r\n                                            'border-bottom-width'\r\n                                        ),\r\n                                        10\r\n                                    )\r\n\r\n                                e.target.style.height = `${height}px`\r\n                            }}\r\n                            value={values.description || ''}\r\n                            placeholder='Description'\r\n                            required\r\n                        />\r\n                        {errors.description && (\r\n                            <ErrorMessage>{errors.description}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    {/* <Input\r\n                    type='file'\r\n                    name='coverImage'\r\n                    onChange={handleChange}\r\n                    value={values.coverImage || ''}\r\n                    required\r\n                />\r\n                {errors.coverImage && (\r\n                    <ErrorMessage>{errors.coverImage}</ErrorMessage>\r\n                )} */}\r\n                </Form>\r\n            </Container>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default CreateCookbook\r\n","import { useEffect, useState } from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\n\r\nimport { shopping, users, recipe, cookbook } from './api/api'\r\n\r\nimport styled, { ThemeProvider } from 'styled-components'\r\nimport { themes } from './themes.json'\r\n\r\nimport AuthRoute from './components/AuthRoute'\r\nimport NoAuthRoute from './components/NoAuthRoute'\r\n\r\nimport Navbar from './components/Navigation/Navbar'\r\nimport PageNotFound from './pages/PageNotFound/PageNotFound'\r\nimport SignupLogin from './pages/Signup-Login/Signup-Login'\r\n\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport Landing from './pages/Landing/Landing'\r\n\r\nimport IsCrushed from './contexts/IsCrushedContext'\r\nimport ToastNotifContext from './contexts/ToastNotifContext'\r\nimport AccountContext from './contexts/AccountContext'\r\nimport About from './pages/About/About'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Account from './pages/Account/Account'\r\n\r\nimport defaultThemes from './themes.json'\r\n\r\nimport Axios from 'axios'\r\nimport settings from './settings'\r\nimport Cookbooks from './pages/Cookbooks/Cookbooks'\r\nimport CreateCookbook from './pages/CreateCookbook/CreateCookbook'\r\n\r\nconst AppContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Background = styled.div`\r\n    background-color: ${(props) => props.theme.background};\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n`\r\n\r\ntoast.configure()\r\n\r\nconst App = () => {\r\n    const [localAuth, setLocalAuth] = useLocalStorage('email.password', {\r\n        email: null,\r\n        password: null,\r\n    })\r\n\r\n    const AuthLogin = async (email, password) => {\r\n        const loginPromise = new Promise(async (resolve, reject) => {\r\n            if (!email || !password) {\r\n                console.error('No email or password')\r\n                if (userData == 'none') setUserData(null)\r\n                reject()\r\n            }\r\n\r\n            const retrievedUser = await users.getUser(email, password)\r\n\r\n            if (!retrievedUser || retrievedUser?.status != 200) {\r\n                if (userData == 'none') setUserData(null)\r\n                reject()\r\n            }\r\n\r\n            setLocalAuth({ email, password })\r\n            setUserData(retrievedUser.data)\r\n            resolve(retrievedUser.data)\r\n        })\r\n\r\n        SendToast(\r\n            {\r\n                promise: loginPromise,\r\n                pending: 'Logging you in...',\r\n                error: 'Failed to login!',\r\n                success: 'Successfully logged in!',\r\n            },\r\n            'promise'\r\n        )\r\n    }\r\n\r\n    const AuthLogout = () => {\r\n        setUserData(null)\r\n        setLocalAuth({ email: null, password: null })\r\n    }\r\n\r\n    const [userData, setUserData] = useState('none')\r\n\r\n    const [isCrushed, setIsCrushed] = useState(false)\r\n\r\n    const theme =\r\n        (userData?.settings?.themes[\r\n            userData?.settings?.themes.findIndex(\r\n                (theme) => theme.themeID == userData?.settings?.selectedTheme\r\n            )\r\n        ] ||\r\n            userData?.settings?.themes.find(\r\n                (theme) => theme.themeID == 'default_themes.dark'\r\n            )) ??\r\n        defaultThemes.themes[0]\r\n\r\n    useEffect(() => {\r\n        if (settings.activeDevelopment)\r\n            SendToast('This app is still in development!', 'info')\r\n\r\n        AuthLogin(localAuth?.email, localAuth?.password)\r\n\r\n        const onWindowResize = () => {\r\n            if (window.innerWidth < 768) {\r\n                setIsCrushed(true)\r\n            } else {\r\n                setIsCrushed(false)\r\n            }\r\n        }\r\n\r\n        window.removeEventListener('resize', onWindowResize)\r\n\r\n        onWindowResize()\r\n\r\n        window.addEventListener('resize', onWindowResize.bind(this))\r\n    }, [])\r\n\r\n    const SendToast = async (message, type, currentTheme = theme) => {\r\n        if (!message) return console.error('Failed to send toast, no message!')\r\n        switch (type) {\r\n            case 'success':\r\n                toast.success(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${(props) =>\r\n                            props.currentTheme.accent} 20%,${(props) =>\r\n                            props.currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'info':\r\n                toast.info(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'warn':\r\n                toast.warn(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'error':\r\n                toast.error(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'promise':\r\n                if (!message.promise)\r\n                    return console.log('Error sending notification!')\r\n                const response = await toast.promise(message.promise, {\r\n                    pending: {\r\n                        render() {\r\n                            return message.pending || 'Working on it...'\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    success: {\r\n                        render() {\r\n                            return message.success || 'All done!'\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    error: {\r\n                        render() {\r\n                            return (\r\n                                message.error || 'Whoops, this action failed!'\r\n                            )\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                })\r\n            default:\r\n                toast(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContainer>\r\n            <ToastNotifContext.Provider value={SendToast}>\r\n                <AccountContext.Provider\r\n                    value={{\r\n                        localAuth,\r\n                        setLocalAuth,\r\n                        AuthLogin,\r\n                        AuthLogout,\r\n                        userData,\r\n                        setUserData,\r\n                    }}\r\n                >\r\n                    <ThemeProvider theme={theme}>\r\n                        <IsCrushed.Provider value={isCrushed}>\r\n                            <Background />\r\n                            <Navbar />\r\n                            <Routes>\r\n                                {/* Page not found */}\r\n                                <Route path='*' element={<PageNotFound />} />\r\n\r\n                                {/* Landing Page */}\r\n                                <Route path='/' element={<Landing />} />\r\n\r\n                                {/* Extra Routes */}\r\n                                <Route path='/about' element={<About />} />\r\n\r\n                                {/* No Account */}\r\n                                <Route element={<NoAuthRoute />}>\r\n                                    <Route\r\n                                        path='/signup'\r\n                                        element={<SignupLogin login={false} />}\r\n                                    />\r\n\r\n                                    <Route\r\n                                        path='/login'\r\n                                        element={<SignupLogin login={true} />}\r\n                                    />\r\n                                </Route>\r\n\r\n                                {/* Requires Account/Signed in */}\r\n                                <Route element={<AuthRoute />}>\r\n                                    {/* Manage Account */}\r\n                                    <Route\r\n                                        path='/account'\r\n                                        element={<Account />}\r\n                                    />\r\n\r\n                                    {/* //!COOKBOOKS */}\r\n                                    {/* View all cookbooks */}\r\n                                    <Route\r\n                                        path='/cookbooks'\r\n                                        element={<Cookbooks />}\r\n                                    />\r\n\r\n                                    {/* Create a new cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/create'\r\n                                        element={<CreateCookbook />}\r\n                                    />\r\n\r\n                                    {/* View all recipes in a cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID'\r\n                                        exact\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* Edit a cookbook (name, desc, img) */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* //!RECIPES */}\r\n                                    {/* Create a recipe in a certain cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/create'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* View recipe */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/:recipeID'\r\n                                        exact\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* Edit recipe */}\r\n                                    <Route\r\n                                        path='/cookbooks/:cookbookID/recipe/:recipeID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n                                </Route>\r\n                            </Routes>\r\n                        </IsCrushed.Provider>\r\n                    </ThemeProvider>\r\n                </AccountContext.Provider>\r\n            </ToastNotifContext.Provider>\r\n        </AppContainer>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'thereciperack-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue !== null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    console.log(`Saving ${prefixedKey} as data:\\n${JSON.stringify(value)}`)\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\n\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\n\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}