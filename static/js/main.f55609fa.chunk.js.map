{"version":3,"sources":["settings.js","api/cookbook.js","api/users.js","contexts/AccountContext.js","components/Routes/Routes.js","components/Routes/Private.jsx","components/Routes/Public.jsx","components/Navigation/NavButton.jsx","components/Navigation/NavLink.jsx","components/Navigation/Navbar.js","assets/ripped.png","pages/PageNotFound/PageNotFound.jsx","hooks/useForm.js","pages/Signup-Login/SignupValidation.js","components/Forms/Checkbox.jsx","components/Forms/FileInput.jsx","components/Forms/Textbox.jsx","components/Forms/Button.jsx","components/Forms/Label.jsx","components/Forms/TextArea.jsx","components/Forms/Form.js","pages/Signup-Login/SignupForm.jsx","pages/Signup-Login/LoginValidation.js","pages/Signup-Login/LoginForm.jsx","pages/Signup-Login/Signup-Login.jsx","contexts/ToastNotifContext.js","pages/Landing/Landing.jsx","contexts/IsCrushedContext.js","components/Pages/PageBody.jsx","components/Pages/Pages.js","pages/About/About.jsx","pages/Account/CreateThemeModal.jsx","pages/Account/DeleteAccountModal.jsx","api/settings.js","pages/Account/Account.jsx","assets/logo.svg","pages/Cookbooks/CookbookCard.jsx","pages/Cookbooks/CookbooksList.jsx","pages/Cookbooks/SearchBar.jsx","pages/Cookbooks/Cookbooks.jsx","pages/CreateCookbook/CreateValidation.js","utils/image.js","pages/CreateCookbook/CreateCookbook.jsx","App.js","hooks/useLocalStorage.js","index.js"],"names":["settings","isDevMode","activeDevelopment","SERVER_URL","getCookbooks","userID","a","console","error","Axios","get","res","response","request","log","message","createCookbook","cookbook","post","editCookbook","cookbookID","newCookbookData","put","deleteCookbook","delete","data","getUser","email","password","params","getUserByID","createUser","name","regenJWTToken","editUser","newUser","deleteUser","Account","createContext","Private","userData","useContext","AccountContext","undefined","to","Public","LinkDiv","styled","div","props","theme","foreground","accent","secondaryAccent","NavButton","path","title","Nav","Link","style","padding","as","cursor","muted","secondaryForeground","Bar","Navbar","Button","DivBody","secondaryBackground","Header404","h2","Desc","h1","GoBack","button","PageNotFound","navigate","useNavigate","userSelect","draggable","src","ripped","width","onClick","useForm","callback","validate","defaultValues","customFunctions","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleSubmit","event","preventDefault","validation","handleChange","persist","prev","target","value","addError","isSubmit","toString","trim","test","cPassword","Check","FormCheck","substring","inputBackground","Checkbox","label","checked","ThemeContext","display","marginLeft","paddingTop","color","File","input","attrs","type","FileDiv","Title","disabled","ChooseFile","DeleteButton","FileInput","inputRef","className","selectedFileName","setSelectedFile","current","files","ref","onChange","click","placeholder","TextboxInput","Textbox","InputButton","TextLabel","p","Label","TextAreaStyled","textarea","Text","TextArea","e","height","computed","window","getComputedStyle","parseInt","getPropertyValue","scrollHeight","BoxContainer","FormContainer","form","MutedText","BoldLink","TextInput","Form","SubmitButton","ErrorMessage","SignupForm","AuthLogin","SignUp","users","result","status","onSubmit","noValidate","required","marginTop","marginBottom","textDecoration","LoginForm","margin","href","TopContainer","BackDrop","motion","HeaderContainer","HeaderText","SmallText","h5","InnerContainer","backdropVariants","expanded","borderRadius","transform","collapsed","expandingTransition","duration","stiffness","SignupLogin","login","isExpanded","setExpanded","active","setActive","playExpandingAnimation","setTimeout","time","initial","animate","variants","transition","ToastNotif","Landing","IsCrushed","PageBody","children","DivClamp","Header","SectionTitle","h3","Description","About","Pages","xmlns","viewBox","fill","d","StyledModal","Modal","CreateThemeModal","themeName","setThemeName","size","centered","onHide","closeButton","id","Body","Footer","createthememodaltrue","confirmPassword","setConfirmPassword","restoreFocus","backdrop","keyboard","deleteAccountModalTrue","createTheme","newTheme","deleteTheme","themeID","Sidebar","SidebarButton","StickyItems","h4","Sections","Section","InputGroup","StyledSpinner","Spinner","ThemeChooser","select","StyledSketchPicker","SketchPicker","AppearanceColorTitle","disabledText","ShownOnHover","span","scrollTo","element","document","getElementById","pos","position","top","scrollIntoView","behavior","block","inline","setLocalAuth","setUserData","AuthLogout","Toast","NewData","setNewData","deleteAccount","modalShow","setModalShow","visibleAppearance","setVisibleAppearance","updateItem","newErr","newPassword","updateSetting","seePublicRecipes","themes","find","x","selectedTheme","res2","show","toLowerCase","DeleteAccountModal","animation","token","fontSize","sharePublicRecipes","map","index","selected","startsWith","onChangeComplete","newColor","findIndex","newThemes","background","hex","faded","navbar","navigator","clipboard","writeText","CardBody","thirdBackground","ImageWrapper","CardTitle","CardDescription","CardTags","CookbookCard","coverImage","description","tags","loading","setLoading","defaultImage","alt","onLoad","paddingLeft","join","slice","filter","variant","CookbooksList","filteredCookbooks","onDragEnd","destination","droppableId","provided","droppableProps","innerRef","book","draggableId","draggableProps","dragHandleProps","Alert","backgroundColor","alert","borderColor","border","Heading","SearchBox","TagSelect","SearchBar","tagOptions","isCrushed","IsCrushedContext","searchField","setSearchField","tagField","setTagField","cookbooks","includes","justifyContent","Cookbooks","CookbookName","FormRow","Row","CreateCookbook","Create","split","item","coverImageRef","useRef","some","ex","endsWith","reader","FileReader","onload","string","unit","Blob","byteSize","readAsDataURL","Container","Col","AppContainer","Background","toast","configure","App","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","localAuth","LoginPromise","Promise","resolve","reject","retrievedUser","SendToast","promise","pending","success","setIsCrushed","defaultThemes","IoConstructSharp","onWindowResize","innerWidth","removeEventListener","addEventListener","bind","currentTheme","icon","POSITION","BOTTOM_RIGHT","progressStyle","info","warn","render","ToastNotifContext","Provider","Routes","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f55609fa.chunk.js","sourcesContent":["let settings = {\r\n    isDevMode: true,\r\n    activeDevelopment: true,\r\n    SERVER_URL: '',\r\n}\r\n\r\nif (settings.isDevMode) settings.SERVER_URL = 'http://localhost:5000'\r\nelse settings.SERVER_URL = 'https://thereciperack-api.deathlybower959.repl.co'\r\n\r\nexport default settings\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getCookbooks = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createCookbook = async (userID, cookbook) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbook) return console.error('Missing cookbook')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbook,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editCookbook = async (userID, cookbookID, newCookbookData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n    if (!newCookbookData) return console.error('Missing newCookbookData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/cookbook', {\r\n            userID,\r\n            cookbookID,\r\n            newCookbookData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCookbook = async (userID, cookbookID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!cookbookID) return console.error('Missing cookbookID')\r\n\r\n    try {\r\n        const res = await Axios.delete(settings.SERVER_URL + '/cookbook', {\r\n            data: {\r\n                userID,\r\n                cookbookID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getUser = async (email, password) => {\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                email,\r\n                password,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserByID = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users', {\r\n            params: {\r\n                userID,\r\n            },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createUser = async (name, email, password) => {\r\n    if (!name) return console.error('Missing name')\r\n    if (!email) return console.error('Missing email')\r\n    if (!password) return console.error('Missing password')\r\n\r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/users', {\r\n            name,\r\n            email,\r\n            password,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const regenJWTToken = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/users/regenToken', {\r\n            params: {\r\n                userID\r\n            }\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editUser = async (userID, newUser) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newUser) return console.error('Missing newUser')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/users', {\r\n            userID,\r\n            newUser,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = Axios.delete(settings.SERVER_URL + '/users', {\r\n            data: { userID },\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst Account = createContext()\r\nexport default Account","import Private from './Private'\r\nimport Public from './Public'\r\n\r\nexport default {\r\n    Private,\r\n    Public,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet } from 'react-router'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst Private = () => {\r\n    const { userData} = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Navigate to='/login' />\r\n    ) : (\r\n        <Outlet />\r\n    )\r\n}\r\n\r\nexport default Private\r\n","import React, { useContext } from 'react'\r\nimport { Navigate, Outlet, useLocation } from 'react-router'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nconst Public = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    return userData == null || userData == undefined ? (\r\n        <Outlet />\r\n    ) : (\r\n        <Navigate to='/' />\r\n\r\n    )\r\n}\r\n\r\nexport default Public\r\n","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    padding: 0.5rem 1rem;\r\n    margin-right: -3px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst NavButton = ({ path, title }) => {\r\n    return (\r\n        <Nav.Link style={{ padding: '0' }} as={Link} to={path}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavButton\r\n","import { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst LinkDiv = styled.div`\r\n    color: ${(props) => props.theme.muted};\r\n    transition: color 300ms ease;\r\n\r\n    &:hover {\r\n        color: ${(props) => props.theme.secondaryForeground};\r\n    }\r\n`\r\n\r\nconst NavLink = ({ path, title, ...props }) => {\r\n    return (\r\n        <Nav.Link as={Link} to={path} {...props}>\r\n            <LinkDiv style={{ cursor: 'pointer' }}>{title}</LinkDiv>\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import Navbar from './Navbar'\r\nimport NavButton from './NavButton'\r\nimport NavLink from './NavLink'\r\n\r\nexport default {\r\n    Bar: Navbar,\r\n    Button: NavButton,\r\n    Link: NavLink\r\n}","export default __webpack_public_path__ + \"static/media/ripped.6e33437a.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ripped from '../../assets/ripped.png'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst DivBody = styled.div`\r\n    text-align: center;\r\n    width: 60%;\r\n    padding-bottom: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Header404 = styled.h2`\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst Desc = styled.h1`\r\n    padding: 0px 10px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst GoBack = styled.button`\r\n    width: 100px;\r\n    padding: 10px 10px;\r\n    margin: 20px auto 0px auto;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst PageNotFound = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <DivBody style={{ userSelect: 'none' }}>\r\n            <Header404>404 Error</Header404>\r\n            <Desc>Sorry, we can't seem to find what you're looking for.</Desc>\r\n            <img draggable={false} src={ripped} width='100%' />\r\n            <GoBack onClick={() => navigate(-1)}>Go Back</GoBack>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useForm = (callback, validate, defaultValues = {}, customFunctions = {}) => {\r\n    const [values, setValues] = useState(defaultValues)\r\n    const [errors, setErrors] = useState({})\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback()\r\n        }\r\n    }, [errors])\r\n\r\n    const handleSubmit = (event) => {\r\n        if (customFunctions.handleSubmit) return customFunctions.handleSubmit(event)\r\n\r\n        event?.preventDefault()\r\n\r\n        setErrors(() => {\r\n            const validation = validate(values, true)\r\n\r\n            setIsSubmitting(Object.keys(validation).length === 0)\r\n\r\n            return validation\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (customFunctions.handleChange) return customFunctions.handleChange(event)\r\n\r\n\r\n        event?.persist()\r\n        setErrors((prev) => {\r\n            return { ...prev, [event.target.name]: null }\r\n        })\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }))\r\n    }\r\n\r\n    const addError = (name, message) => {\r\n        if (customFunctions.addError) return customFunctions.addError(name, message)\r\n\r\n        setErrors((prev) => {\r\n            return { ...prev, [name]: message }\r\n        })\r\n    }\r\n\r\n    return {\r\n        addError,\r\n        handleChange,\r\n        setErrors, \r\n        setValues,\r\n        setIsSubmitting,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n    }\r\n}\r\n\r\nexport default useForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.name || isSubmit) {\r\n        if (!values.name) errors.name = 'Your name is required'\r\n        else if (values.name?.toString().trim() == '')\r\n            errors.name = 'Your name is required'\r\n        else if (values.name?.length < 5)\r\n        errors.name = 'Too short, must be at least 5 characters long'\r\n    }\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    if (values.cPassword || isSubmit) {\r\n        if (\r\n            !values.cPassword ||\r\n            values.cPassword?.toString().trim() == '' ||\r\n            values.cPassword != values.password\r\n        )\r\n            errors.cPassword = 'Password does not match'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import { useContext } from 'react'\r\nimport { FormCheck } from 'react-bootstrap'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst Check = styled(FormCheck)`\r\n    .form-check-input:checked[type='checkbox'] {\r\n        background-image: url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23${props => props.theme.secondaryForeground.substring(1)}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e\\\")!important;\r\n    }\r\n    .form-check-input {\r\n        background-color: ${(props) => props.theme.inputBackground};\r\n        border: 0;\r\n        cursor: pointer;\r\n        width: 1.3em;\r\n        height: 1.3em;\r\n        margin-left: 10px;\r\n    }\r\n    .form-check-input:focus {\r\n        box-shadow: none;\r\n    }\r\n`\r\n\r\nconst Checkbox = ({ label, checked, ...props }) => {\r\n    const theme = useContext(ThemeContext)\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <Check checked={checked || false} {...props} />\r\n            <p\r\n                style={{\r\n                    marginLeft: '6px',\r\n                    paddingTop: '2px',\r\n                    color: theme.foreground,\r\n                }}\r\n            >\r\n                {label ?? 'No checkbox name'}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst File = styled.input.attrs({ type: 'file' })`\r\n    display: none;\r\n`\r\n\r\nconst FileDiv = styled.div`\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    height: 42px;\r\n    font-size: 12px;\r\n    display: flex;\r\n    border-radius: 0.5rem;\r\n`\r\n\r\nconst Title = styled.input.attrs({ disabled: true })`\r\n    height: 42px;\r\n    outline: none;\r\n    padding: 0px 10px 0px 5px;\r\n    font-size: 12px;\r\n    border: 0;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    background-color: transparent;\r\n`\r\n\r\nconst ChooseFile = styled.button`\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    border: 0;\r\n    border-right: solid 2px ${(props) => props.theme.secondaryBackground};\r\n    outline: 0;\r\n    color: ${(props) => props.theme.muted};\r\n    border-top-left-radius: 0.5rem;\r\n    border-bottom-left-radius: 0.5rem;\r\n\r\n    transition: filter 250ms ease-in-out;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n    color: red;\r\n    width: 20px;\r\n    font-weight: bold;\r\n    background-color: rgba(0, 0, 0, 0);\r\n    border-width: 0px;\r\n    margin-left: 5px;\r\n`\r\n\r\nconst FileInput = ({ label, className, inputRef, ...props }) => {\r\n    const [selectedFileName, setSelectedFile] = useState()\r\n    useEffect(() => {\r\n        setSelectedFile(inputRef.current.files[0]?.name)\r\n    }, [inputRef, inputRef.current?.value, inputRef.current?.files])\r\n\r\n    return (\r\n        <>\r\n            <File ref={inputRef} {...props} />\r\n\r\n            <FileDiv>\r\n                {selectedFileName != null ? (\r\n                    <DeleteButton\r\n                        type='button'\r\n                        onClick={() => {\r\n                            inputRef.current.value = null\r\n                            props.onChange({ target: {name: inputRef.current.name, files: []} })\r\n                            setSelectedFile(null)\r\n                        }}\r\n                    >\r\n                        X\r\n                    </DeleteButton>\r\n                ) : (\r\n                    <ChooseFile\r\n                        onClick={() => inputRef.current.click()}\r\n                        type='button'\r\n                    >\r\n                        Choose File\r\n                    </ChooseFile>\r\n                )}\r\n                <Title placeholder={selectedFileName ?? label} />\r\n            </FileDiv>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextboxInput = styled.input`\r\n    border-radius: 0.5rem;\r\n    \r\n    max-width: 500px;\r\n    width: 50%;\r\n    height: 42px;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 0px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n\r\n    margin-left: 7px;\r\n`\r\n\r\nconst Textbox = (props) => {\r\n    return (\r\n        <TextboxInput {...props}/>\r\n    )\r\n}\r\n\r\nexport default Textbox\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InputButton = styled.button`\r\n    margin-left: 10px;\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <InputButton {...props}/>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextLabel = styled.p`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-top: 15px;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst Label = (props) => {\r\n    return (\r\n        <TextLabel {...props}/>\r\n    )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextAreaStyled = styled.textarea`\r\n    width: 60%;\r\n    border-radius: 0.5rem;\r\n    resize: none;\r\n    min-height: 42px;\r\n    height: 60px;\r\n    overflow: hidden;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 5px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\nconst TextArea = (props) => {\r\n    return (\r\n        <TextAreaStyled {...props} onChange={(e) => {\r\n            props.onChange(e)\r\n\r\n            // Reset field height\r\n            e.target.style.height = 'inherit'\r\n\r\n            // Get the computed styles for the element\r\n            const computed = window.getComputedStyle(\r\n                e.target\r\n            )\r\n\r\n            // Calculate the height\r\n            const height =\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'border-top-width'\r\n                    ),\r\n                    10\r\n                ) +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'padding-top'\r\n                    ),\r\n                    10\r\n                ) +\r\n                e.target.scrollHeight +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'padding-bottom'\r\n                    ),\r\n                    10\r\n                ) +\r\n                parseInt(\r\n                    computed.getPropertyValue(\r\n                        'border-bottom-width'\r\n                    ),\r\n                    10\r\n                )\r\n\r\n            e.target.style.height = `${height}px`\r\n        }}/>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","import Checkbox from './Checkbox'\r\nimport FileInput from './FileInput'\r\nimport Textbox from './Textbox'\r\nimport Button from './Button'\r\nimport Label from './Label'\r\nimport TextArea from './TextArea'\r\n\r\nexport default {\r\n    File: FileInput,\r\n    Check: Checkbox,\r\n    Text: Textbox,\r\n    Button,\r\n    Label,\r\n    TextArea: TextArea\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './SignupValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { cookbook, recipe, shopping, users } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.muted};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    transition: filter 250ms ease-in-out;\r\n`\r\n\r\nconst TextInput = styled(Form.Text)`\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    margin-left: 0;\r\n`\r\n\r\nconst SubmitButton = styled(Form.Button)`\r\n    width: 100%;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst SignupForm = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { AuthLogin } = useContext(AccountContext)\r\n\r\n    const SignUp = async () => {\r\n        const result = await users.createUser(\r\n            values.name,\r\n            values.email,\r\n            values.password\r\n        )\r\n\r\n        if (result?.status == 201) {\r\n            AuthLogin(values.email, values.password)\r\n\r\n            navigate('/')\r\n        } else if (result?.status == 403) {\r\n            addError(\r\n                'email',\r\n                'User with this email already exists, maybe login instead?'\r\n            )\r\n        } else {\r\n            console.log(result)\r\n        }\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit, addError } = useForm(\r\n        SignUp,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <TextInput\r\n                    type='text'\r\n                    name='name'\r\n                    onChange={handleChange}\r\n                    value={values.name || ''}\r\n                    placeholder='Name'\r\n                    required\r\n                />\r\n                {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n                <TextInput\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <TextInput\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n                <TextInput\r\n                    type='password'\r\n                    name='cPassword'\r\n                    onChange={handleChange}\r\n                    value={values.cPassword || ''}\r\n                    placeholder='Confirm Password'\r\n                    required\r\n                />\r\n                {errors.cPassword && (\r\n                    <ErrorMessage>{errors.cPassword}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <SubmitButton style={{ marginTop: '15px' }} onClick={handleSubmit}>\r\n                Sign Up\r\n            </SubmitButton>\r\n            <MutedText style={{ marginTop: '5px', marginBottom: '0' }}>\r\n                Already have an account?\r\n            </MutedText>\r\n            <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Login</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupForm\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.email || isSubmit) {\r\n        if (!values.email) errors.email = 'Your email is required'\r\n        else if (values.email?.toString().trim() == '')\r\n            errors.email = 'Your email is required'\r\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email))\r\n            errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if (values.password || isSubmit) {\r\n        if (!values.password) errors.password = 'Your password is required'\r\n        else if (values.password.toString().trim() == '')\r\n            errors.password = 'Your password is required'\r\n        else if (values.password?.length < 8)\r\n            errors.password = 'Password must be 8 or more characters'\r\n    }\r\n\r\n    return errors\r\n}\r\n","import useForm from '../../hooks/useForm'\r\nimport validate from './LoginValidation'\r\nimport styled from 'styled-components'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { users, cookbook, recipe, shopping } from '../../api/api'\r\nimport { useContext } from 'react'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst BoxContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormContainer = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst MutedText = styled.p`\r\n    font-size: 11px;\r\n    color: ${(props) => props.theme.muted};\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n`\r\n\r\nconst BoldLink = styled.p`\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${(props) => props.theme.accent};\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    transition: filter 250ms ease-in-out;\r\n`\r\n\r\nconst SubmitButton = styled(Form.Button)`\r\n    width: 100%;\r\n`\r\n\r\nconst TextInput = styled(Form.Text)`\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    margin-left: 0;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst LoginForm = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const { AuthLogin } = useContext(AccountContext)\r\n\r\n    const Login = () => {\r\n        AuthLogin(values.email, values.password)\r\n\r\n        navigate('/')\r\n    }\r\n\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n        Login,\r\n        validate\r\n    )\r\n\r\n    return (\r\n        <BoxContainer>\r\n            <FormContainer onSubmit={handleSubmit} noValidate>\r\n                <TextInput\r\n                    type='email'\r\n                    name='email'\r\n                    onChange={handleChange}\r\n                    value={values.email || ''}\r\n                    placeholder='Email'\r\n                    required\r\n                />\r\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n                <TextInput\r\n                    type='password'\r\n                    name='password'\r\n                    onChange={handleChange}\r\n                    value={values.password || ''}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                {errors.password && (\r\n                    <ErrorMessage>{errors.password}</ErrorMessage>\r\n                )}\r\n            </FormContainer>\r\n            <Link to='/resetpassword' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ margin: '5px auto 15px auto' }}>\r\n                    Forgot your password?\r\n                </BoldLink>\r\n            </Link>\r\n            <SubmitButton onClick={handleSubmit}>Login</SubmitButton>\r\n            <MutedText style={{ margin: '10px auto 0 auto' }} href='#'>\r\n                Don't have an account?\r\n            </MutedText>\r\n            <Link to='/signup' style={{ textDecoration: 'none' }}>\r\n                <BoldLink style={{ marginBottom: '10px' }}>Create one</BoldLink>\r\n            </Link>\r\n        </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion'\r\nimport Account from '../../contexts/AccountContext'\r\nimport SignupForm from './SignupForm'\r\nimport LoginForm from './LoginForm'\r\n\r\nconst BoxContainer = styled.div`\r\n    max-width: 280px;\r\n    width: 75%;\r\n    min-height: 550px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 19px;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n`\r\n\r\nconst TopContainer = styled.div`\r\n    width: 100%;\r\n    height: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    padding: 0 1.8em;\r\n    padding-bottom: 5em;\r\n`\r\n\r\nconst BackDrop = styled(motion.div)`\r\n    width: 160%;\r\n    height: 550px;\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 50%;\r\n    transform: rotate(60deg);\r\n    top: -290px;\r\n    left: -70px;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        0deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 80%\r\n    );\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst HeaderText = styled.h2`\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    line-height: 1.24;\r\n    color: ${(props) => props.theme.foreground};\r\n    z-index: 10;\r\n    margin: 0;\r\n`\r\n\r\nconst SmallText = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n    font-weight: 500;\r\n    font-size: 11px;\r\n    z-index: 10;\r\n    margin: 0;\r\n    margin-top: 7px;\r\n`\r\n\r\nconst InnerContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 1.8em;\r\n`\r\n\r\nconst backdropVariants = {\r\n    expanded: {\r\n        width: '233%',\r\n        height: '1050px',\r\n        borderRadius: '20%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n    collapsed: {\r\n        width: '160%',\r\n        height: '550px',\r\n        borderRadius: '50%',\r\n        transform: 'rotate(60deg)',\r\n    },\r\n}\r\n\r\nconst expandingTransition = {\r\n    type: 'spring',\r\n    duration: 2.3,\r\n    stiffness: 30,\r\n}\r\n\r\nconst SignupLogin = ({ login }) => {\r\n    const [isExpanded, setExpanded] = useState(true)\r\n\r\n    const [active, setActive] = useState(login ? 'login' : 'signup')\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation(250)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive(login ? 'login' : 'signup')\r\n        }, expandingTransition.duration * 1000 - 1500)\r\n    }, [login])\r\n\r\n    const playExpandingAnimation = (time) => {\r\n        setExpanded(true)\r\n        setTimeout(() => {\r\n            setExpanded(false)\r\n        }, time ?? expandingTransition.duration * 1000 - 1500)\r\n    }\r\n\r\n    const switchToSignup = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('signup')\r\n        }, 400)\r\n    }\r\n\r\n    const switchToSignin = () => {\r\n        playExpandingAnimation()\r\n        setTimeout(() => {\r\n            setActive('login')\r\n        }, 400)\r\n    }\r\n\r\n    return (\r\n            <BoxContainer>\r\n                <TopContainer>\r\n                    <BackDrop\r\n                        initial={false}\r\n                        animate={isExpanded ? 'expanded' : 'collapsed'}\r\n                        variants={backdropVariants}\r\n                        transition={expandingTransition}\r\n                    />\r\n                    {active === 'login' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Welcome</HeaderText>\r\n                            <HeaderText>Back!</HeaderText>\r\n                            <SmallText>Please login to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                    {active === 'signup' && (\r\n                        <HeaderContainer>\r\n                            <HeaderText>Create</HeaderText>\r\n                            <HeaderText>Account</HeaderText>\r\n                            <SmallText>Please sign-up to continue!</SmallText>\r\n                        </HeaderContainer>\r\n                    )}\r\n                </TopContainer>\r\n                <InnerContainer>\r\n                    {active === 'login' && <LoginForm />}\r\n                    {active === 'signup' && <SignupForm />}\r\n                </InnerContainer>\r\n            </BoxContainer>\r\n    )\r\n}\r\n\r\nexport default SignupLogin\r\n","import { createContext } from \"react\";\r\n\r\nconst ToastNotif = createContext()\r\nexport default ToastNotif","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport ToastNotifContext from '../../contexts/ToastNotifContext'\r\n\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n    overflow: hidden;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst Landing = () => {\r\n    const { userData } = useContext(AccountContext)\r\n\r\n    return (\r\n        <DivBody>\r\n            {/* <SearchBar /> */}\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import { createContext } from \"react\";\r\n\r\nconst IsCrushed = createContext()\r\nexport default IsCrushed","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst DivBody = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px auto;\r\n    background-color: ${(props) => props.theme.secondaryBackground};\r\n    -webkit-box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    box-shadow: 0 0 2px rgba(15, 15, 15, 0.58);\r\n    position: relative;\r\n\r\n    border-radius: 20px;\r\n`\r\n\r\nconst PageBody = ({ children, ...props }) => {\r\n    return <DivBody {...props}>{children}</DivBody>\r\n}\r\n\r\nexport default PageBody\r\n","import PageBody from './PageBody'\r\n\r\nexport default {\r\n    PageBody,\r\n}","import React, { useContext, useEffect } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport settings from '../../settings'\r\nimport { IoConstructSharp } from 'react-icons/io5'\r\nimport Pages from '../../components/Pages/Pages'\r\n\r\nconst DivClamp = styled.div`\r\n    text-align: center;\r\n    width: 50%;\r\n    margin: auto;\r\n`\r\n\r\nconst Header = styled.h2`\r\n    padding: 40px 0px 0px 0px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    font-weight: bold;\r\n`\r\n\r\nconst SectionTitle = styled.h3`\r\n    color: ${(props) => props.theme.foreground};\r\n    margin-top: 20px;\r\n`\r\n\r\nconst Description = styled.p`\r\n    font-size: 20px;\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n`\r\n\r\nconst About = () => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    return (\r\n        <Pages.PageBody>\r\n            <DivClamp>\r\n                <Header>About</Header>\r\n\r\n                <SectionTitle>Creator</SectionTitle>\r\n                <Description>\r\n                    My name is Benjamin, and I am a 13 year old developer, that\r\n                    strives to learn more. I wanted to learn something along the\r\n                    lines of web development. I didn't want to just use html,\r\n                    css, and js, I wanted to try something new! I looked around,\r\n                    and I eventually found a framework called React. Put very\r\n                    simply, it allows me to create much cleaner user interfaces,\r\n                    with much more interactive pages, and a faster websites.\r\n                </Description>\r\n\r\n                <SectionTitle>The Purpose</SectionTitle>\r\n                <Description>\r\n                    I had found some tutorials showing how to create some React\r\n                    projects, but I soon found myself in tutorial hell. I was\r\n                    just following along, not really learning. Since the best\r\n                    way for me to learn is to teach myself, I decided to come up\r\n                    with a project. I didn't want to make a pointless project,\r\n                    one that wasn't used. I wanted to create something my\r\n                    family, and friends could use. I eventually came up with\r\n                    this idea when I was helping my mother cook. She kept having\r\n                    to switch between recipes, and it seemed very annoying. I\r\n                    decided to make this website to help manage, and share your\r\n                    recipes. I know that they are many websites out there just\r\n                    like this, but I wanted it to have more features, no ads,\r\n                    and a cleaner ui!\r\n                </Description>\r\n\r\n                <SectionTitle>How was it made?</SectionTitle>\r\n                <Description>\r\n                    Since this was my first <i>real</i> React project, that I\r\n                    was doing without a tutorial, Stack Overflow, Youtube, and\r\n                    Google were my best friends. I first figured out how to make\r\n                    the client side of the website, the part that you see. It\r\n                    took a bit to figure out, but I picked it up in the end. I\r\n                    then had to learn how to make the sever side, the part that\r\n                    creates your account, and saves your data and settings. This\r\n                    bit was a little harder than I had originally thought it\r\n                    would be, but it worked out in the end. It's really nice to\r\n                    see that I thought about the code that went into this\r\n                    website, and that I can be proud of it, instead of just\r\n                    writing the code from videos online.\r\n                </Description>\r\n\r\n                {settings.activeDevelopment && (\r\n                    <h5 style={{ color: theme.error }}>\r\n                        <IoConstructSharp /> Development underway...{' '}\r\n                        <IoConstructSharp />\r\n                    </h5>\r\n                )}\r\n\r\n                <div style={{ marginBottom: '20px', marginTop: '20px' }}>\r\n                    <a\r\n                        href='https://github.com/DeathlyBower959/thereciperack'\r\n                        target='_blank'\r\n                    >\r\n                        <svg\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0 1 12 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                    <a\r\n                        href='https://youtube.com/DeathlyBower959?sub_confirmation=1'\r\n                        target='_blank'\r\n                    >\r\n                        <svg\r\n                            style={{ marginLeft: '10px' }}\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            width='50'\r\n                            height='50'\r\n                            viewBox='0 0 24 24'\r\n                        >\r\n                            <path\r\n                                fill={theme.foreground}\r\n                                d='M19.615 3.184c-3.604-.246-11.631-.245-15.23 0C.488 3.45.029 5.804 0 12c.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0C23.512 20.55 23.971 18.196 24 12c-.029-6.185-.484-8.549-4.385-8.816zM9 16V8l8 3.993L9 16z'\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n            </DivClamp>\r\n        </Pages.PageBody>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${props => props.theme.secondaryBackground};\r\n        color: ${props => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n\r\n    const [themeName, setThemeName] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            onHide={(e) => {\r\n                setThemeName('')\r\n                props.onHide(e)\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                   New Theme\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Label>Theme Name</Form.Label>\r\n                <Form.Text onChange={(e) => setThemeName(e.target.value)} value={themeName}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Form.Button onClick={() => props.createthememodaltrue(themeName)}>Create</Form.Button>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst StyledModal = styled(Modal)`\r\n    .modal-content {\r\n        background-color: ${(props) => props.theme.secondaryBackground};\r\n        color: ${(props) => props.theme.foreground};\r\n    }\r\n`\r\n\r\nconst Description = styled.p`\r\n    color: white;\r\n`\r\n\r\nconst CreateThemeModal = (props) => {\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    return (\r\n        <StyledModal\r\n            {...props}\r\n            size='lg'\r\n            restoreFocus\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            onHide={(e) => {\r\n                setConfirmPassword('')\r\n                props.onHide(e)\r\n            }}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                    Confirm Account Deletion\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Description>\r\n                    Deleting your account will mean all of your recipes,\r\n                    cookbooks, and account data will be removed.\r\n                </Description>\r\n                <Description>\r\n                    If you are sure you want to delete your account, please confirm your\r\n                    password.\r\n                </Description>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Text\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Form.Button\r\n                    disabled={confirmPassword != props.password}\r\n                    onClick={props.deleteAccountModalTrue}\r\n                >\r\n                    Delete Account\r\n                </Form.Button>\r\n            </Modal.Footer>\r\n        </StyledModal>\r\n    )\r\n}\r\n\r\nexport default CreateThemeModal\r\n","import Axios from 'axios'\r\nimport settings from '../settings.js'\r\n\r\nexport const getSettings = async (userID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n\r\n    try {\r\n        const res = await Axios.get(settings.SERVER_URL + '/settings', {\r\n            userID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editSettings = async (userID, newSettingData) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newSettingData) return console.error('Missing newSettingData')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings', {\r\n            userID,\r\n            newSettingData,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const createTheme = async (userID, newTheme) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newTheme) return console.error('Missing newTheme')\r\n    \r\n    try {\r\n        const res = await Axios.post(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newTheme,\r\n        })\r\n        \r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTheme = async (userID, newThemeData, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!newThemeData) return console.error('Missing newThemeData')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.put(settings.SERVER_URL + '/settings/theme', {\r\n            userID,\r\n            newThemeData,\r\n            themeID,\r\n        })\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTheme = async (userID, themeID) => {\r\n    if (!userID) return console.error('Missing userID')\r\n    if (!themeID) return console.error('Missing themeID')\r\n\r\n    try {\r\n        const res = await Axios.delete(\r\n            settings.SERVER_URL + '/settings/theme',\r\n            {\r\n                data: {\r\n                    userID,\r\n                    themeID,\r\n                },\r\n            }\r\n        )\r\n\r\n        return res\r\n    } catch (error) {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            return error.response\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n            // http.ClientRequest in node.js\r\n\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message)\r\n            return error\r\n        }\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { users } from '../../api/api'\r\nimport AccountContext from '../../contexts/AccountContext'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\n\r\nimport Checkbox from '../../components/Forms/Checkbox'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nimport { SketchPicker } from 'react-color'\r\nimport CreateThemeModal from './CreateThemeModal'\r\nimport DeleteAccountModal from './DeleteAccountModal'\r\nimport { createTheme, deleteTheme } from '../../api/settings'\r\n\r\nimport Form from '../../components/Forms/Form'\r\nimport Pages from '../../components/Pages/Pages'\r\n\r\n// Holds navigation for settings\r\nconst Sidebar = styled.div`\r\n    border-radius: 20px;\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\n// Button for sidebar\r\nconst SidebarButton = styled.button`\r\n    width: 100%;\r\n    display: block;\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n\r\n    transition: filter 240ms ease-in-out;\r\n\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    text-align: left;\r\n    padding: 10px 10px 10px 17px;\r\n    margin-right: 30px;\r\n`\r\n\r\n// Wraps navigation items, and makes them move down once top of the screen is hit.\r\nconst StickyItems = styled.div`\r\n    position: sticky;\r\n    top: 100px;\r\n`\r\n\r\n// Navigation Header\r\nconst Header = styled.h4`\r\n    color: ${(props) => props.theme.foreground};\r\n    margin: 15px 20px 15px 15px;\r\n`\r\n\r\n// Holds all <Section> element\r\nconst Sections = styled.div`\r\n    margin-left: 20px;\r\n    width: 100%;\r\n`\r\n\r\n// Setting section\r\nconst Section = styled.div`\r\n    margin-top: 20px;\r\n`\r\n\r\n// Setting section title\r\nconst SectionTitle = styled.h5`\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\n// Group for an input area\r\nconst InputGroup = styled.div`\r\n    margin-left: 8px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\n// Paragraph that is added when error is shown\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\n// Select Dropdown to choose theme\r\nconst ThemeChooser = styled.select`\r\n    display: block;\r\n    max-width: 500px;\r\n    width: 50%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    appearance: none;\r\n    border-radius: 0.5rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n    margin-left: 7px;\r\n`\r\n// Color picker\r\nconst StyledSketchPicker = styled(SketchPicker)`\r\n    background: transparent !important;\r\n    margin-top: 10px;\r\n    margin-left: 10px;\r\n\r\n    input {\r\n        background-color: ${(props) => props.theme.inputBackground};\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    label {\r\n        color: ${(props) => props.theme.secondaryForeground} !important;\r\n    }\r\n\r\n    input:focus-visible {\r\n        outline: 0 !important;\r\n    }\r\n`\r\n\r\n// Buttons to display color pickers\r\nconst AppearanceColorTitle = styled.button`\r\n    color: ${(props) => props.theme.secondaryForeground};\r\n    margin-left: 10px;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: transparent;\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: auto;\r\n        filter: none;\r\n        color: ${(props) => props.theme.disabledText};\r\n    }\r\n`\r\n\r\nconst ShownOnHover = styled.span`\r\n    filter: blur(3px);\r\n    transition: filter 250ms;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    &:hover {\r\n        filter: none;\r\n    }\r\n`\r\n\r\n// Scroll to any element, with an offset of x pixels\r\nconst scrollTo = (id) => {\r\n    var element = document.getElementById(id)\r\n\r\n    let pos = element.style.position\r\n    let top = element.style.top\r\n\r\n    element.style.position = 'relative'\r\n    element.style.top = '-75px'\r\n\r\n    element?.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n        inline: 'nearest',\r\n    })\r\n\r\n    element.style.top = top\r\n    element.style.position = pos\r\n}\r\n\r\nconst Account = () => {\r\n    const theme = useContext(ThemeContext)\r\n    const { setLocalAuth, userData, setUserData, AuthLogout } =\r\n        useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [NewData, setNewData] = useState({ ...userData, password: null })\r\n\r\n    const [modalShow, setModalShow] = useState({\r\n        createTheme: false,\r\n        deleteAccount: false,\r\n    })\r\n    const [visibleAppearance, setVisibleAppearance] = useState('')\r\n\r\n    // Updating state on inputs\r\n    const handleChange = (e) => {\r\n        setNewData((prev) => {\r\n            setErrors((prev) => {\r\n                return { ...prev, [e.target.name]: null }\r\n            })\r\n            return {\r\n                ...prev,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        })\r\n    }\r\n\r\n    // Update item in database\r\n    const updateItem = async (e) => {\r\n        let newErr = {}\r\n        if (e.target.name == 'name') {\r\n            if (!NewData.name) newErr.name = 'Your name is required'\r\n            else if (NewData.name?.toString().trim() == '')\r\n                newErr.name = 'Your name is required'\r\n            else if (NewData.name?.length < 5)\r\n                newErr.name = 'Too short, must be at least 5 characters long'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update name...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    Toast('Name updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'email') {\r\n            if (!NewData.email) newErr.email = 'Your email is required'\r\n            else if (NewData.email?.toString().trim() == '')\r\n                newErr.email = 'Your email is required'\r\n            else if (!/\\S+@\\S+\\.\\S+/.test(NewData.email))\r\n                newErr.email = 'Email address is invalid'\r\n            else {\r\n                const res = await users.editUser(userData.id, NewData)\r\n                if (res.status != 201)\r\n                    Toast('Failed to update email...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n\r\n                    Toast('Email updated!', 'success')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'password') {\r\n            if (!NewData.password)\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password.toString().trim() == '')\r\n                newErr.password = 'Your previous password is required'\r\n            else if (NewData.password?.length < 8)\r\n                newErr.password = 'Password must be 8 or more characters'\r\n        }\r\n\r\n        if (e.target.name == 'newPassword') {\r\n            if (!NewData.newPassword)\r\n                newErr.newPassword = 'You have to specify a new password'\r\n            else if (NewData.password.toString().trim() == '')\r\n                newErr.newPassword = 'You have to specify a new password'\r\n            else if (NewData.newPassword?.length < 8)\r\n                newErr.newPassword = 'Password must be 8 or more characters'\r\n            else if (NewData.newPassword == userData.password)\r\n                newErr.newPassword = 'Password must be different'\r\n            else {\r\n                const res = await users.editUser(userData.id, {\r\n                    ...NewData,\r\n                    password: NewData.newPassword,\r\n                })\r\n                if (res.status != 201)\r\n                    Toast('Failed to update password...', 'error')\r\n                else {\r\n                    setUserData(res.data)\r\n                    setNewData((prev) => {\r\n                        return { ...prev, password: null, newPassword: null }\r\n                    })\r\n                    setLocalAuth({\r\n                        email: res.data.email,\r\n                        password: res.data.password,\r\n                    })\r\n                    Toast(\r\n                        'Password updated! Make sure to remember it!',\r\n                        'success'\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        setErrors(newErr)\r\n    }\r\n\r\n    const updateSetting = async (e) => {\r\n        if (e.target.name == 'seePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('You can now see public recipes!', 'success')\r\n                else Toast(\"You can't see public recipes anymore!\", 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'sharePublicRecipes') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.checked,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201)\r\n                Toast('Failed to update recipe visibility...', 'error')\r\n            else {\r\n                setUserData(res.data)\r\n                if (res.data.settings.seePublicRecipes)\r\n                    Toast('Your public recipes are now visible!', 'success')\r\n                else Toast('Your public recipes are now hidden!', 'success')\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'selectedTheme') {\r\n            const res = await users.editUser(userData.id, {\r\n                ...NewData,\r\n                settings: {\r\n                    ...NewData.settings,\r\n                    [e.target.name]: e.target.value,\r\n                },\r\n            })\r\n\r\n            if (res.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n                console.log(res.data)\r\n            } else {\r\n                setUserData(res.data)\r\n                setVisibleAppearance('')\r\n                Toast(\r\n                    'Your theme was changed!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == e.target.value\r\n                    )\r\n                )\r\n            }\r\n        }\r\n\r\n        if (e.target.name == 'deleteTheme') {\r\n            const res = await deleteTheme(\r\n                userData.id,\r\n                userData.settings.selectedTheme\r\n            )\r\n\r\n            if (res.status != 200)\r\n                return Toast('Failed to delete theme', 'error')\r\n\r\n            const res2 = await users.editUser(userData.id, {\r\n                ...res.data,\r\n                settings: {\r\n                    ...res.data.settings,\r\n                    selectedTheme: 'default_themes.dark',\r\n                },\r\n            })\r\n\r\n            if (res2.status != 201) {\r\n                Toast('Failed to change theme...', 'error')\r\n            } else {\r\n                setUserData(res2.data)\r\n                Toast(\r\n                    'Theme deleted!',\r\n                    'success',\r\n                    res.data.settings.themes.find(\r\n                        (x) => x.themeID == res.data.settings.selectedTheme\r\n                    )\r\n                )\r\n                setVisibleAppearance('')\r\n            }\r\n        }\r\n    }\r\n\r\n    // Used as when data is saved to database, it sets password to null\r\n    useEffect(() => {\r\n        setNewData({ ...userData, password: null })\r\n    }, [userData])\r\n\r\n    return (\r\n        <>\r\n            <CreateThemeModal\r\n                show={modalShow.createTheme}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n                }\r\n                createthememodaltrue={async (name) => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, createTheme: false }\r\n                    })\r\n\r\n                    const res = await createTheme(userData.id, {\r\n                        name,\r\n                        themeID: 'user_themes.' + name.trim().toLowerCase(),\r\n                    })\r\n\r\n                    if (res.status != 201)\r\n                        return Toast('Failed to create theme', 'error')\r\n\r\n                    setUserData(res.data)\r\n                }}\r\n            />\r\n\r\n            <DeleteAccountModal\r\n                show={modalShow.deleteAccount}\r\n                password={userData.password}\r\n                onHide={() =>\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n                }\r\n                deleteAccountModalTrue={async () => {\r\n                    setModalShow((prev) => {\r\n                        return { ...prev, deleteAccount: false }\r\n                    })\r\n\r\n                    const id = userData.id\r\n                    setLocalAuth({ email: null, password: null })\r\n                    AuthLogout()\r\n                    Toast('Account Deleted!', 'warn ')\r\n                    users.deleteUser(id)\r\n                }}\r\n            />\r\n            <Pages.PageBody>\r\n                <Sidebar>\r\n                    <StickyItems>\r\n                        <Header>Settings</Header>\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-account')}\r\n                        >\r\n                            Account\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-privacy')}\r\n                        >\r\n                            Privacy\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-appearance')}\r\n                        >\r\n                            Appearance\r\n                        </SidebarButton>\r\n\r\n                        <SidebarButton\r\n                            onClick={() => scrollTo('account-adv.settings')}\r\n                        >\r\n                            Advanced settings\r\n                        </SidebarButton>\r\n                    </StickyItems>\r\n                </Sidebar>\r\n                <Sections>\r\n                    <Section id='account-account'>\r\n                        <SectionTitle>Account</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='name'\r\n                                value={NewData?.name ?? ''}\r\n                            />\r\n                            <Form.Button\r\n                                disabled={\r\n                                    userData?.name?.trim() ==\r\n                                    NewData.name?.trim()\r\n                                }\r\n                                name='name'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </Form.Button>\r\n\r\n                            {errors.name && (\r\n                                <ErrorMessage>{errors.name}</ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='email'\r\n                                value={NewData?.email ?? ''}\r\n                            />\r\n                            <Form.Button\r\n                                disabled={\r\n                                    userData?.email?.trim() ==\r\n                                    NewData?.email?.trim()\r\n                                }\r\n                                name='email'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </Form.Button>\r\n\r\n                            {errors.email ? (\r\n                                <ErrorMessage>{errors.email}</ErrorMessage>\r\n                            ) : (\r\n                                userData?.email?.trim() ==\r\n                                    NewData?.email?.trim() &&\r\n                                userData.token != null && (\r\n                                    <p\r\n                                        style={{\r\n                                            margin: '3px auto auto 12px',\r\n                                            color: theme.secondaryForeground,\r\n                                            fontSize: '12px',\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            users.regenJWTToken(userData.id)\r\n\r\n                                            Toast(\r\n                                                'Check your email for a verification link!(Check your spam)',\r\n                                                'info'\r\n                                            )\r\n                                            \r\n                                        }}\r\n                                    >\r\n                                        Resend Email\r\n                                    </p>\r\n                                )\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='password'\r\n                                type='password'\r\n                                value={NewData?.password ?? ''}\r\n                            />\r\n\r\n                            {errors.password && (\r\n                                <ErrorMessage>{errors.password}</ErrorMessage>\r\n                            )}\r\n\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Text\r\n                                onChange={handleChange}\r\n                                name='newPassword'\r\n                                type='password'\r\n                                value={NewData?.newPassword ?? ''}\r\n                            />\r\n                            <Form.Button\r\n                                disabled={\r\n                                    userData?.password?.trim() !=\r\n                                        NewData?.password?.trim() ||\r\n                                    NewData?.password?.trim() ==\r\n                                        NewData?.newPassword?.trim()\r\n                                }\r\n                                name='newPassword'\r\n                                onClick={updateItem}\r\n                            >\r\n                                Update\r\n                            </Form.Button>\r\n\r\n                            {errors.newPassword && (\r\n                                <ErrorMessage>\r\n                                    {errors.newPassword}\r\n                                </ErrorMessage>\r\n                            )}\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-privacy'>\r\n                        <SectionTitle>Privacy</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Checkbox\r\n                                name='seePublicRecipes'\r\n                                label='See public recipes'\r\n                                checked={NewData?.settings?.seePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                            <Checkbox\r\n                                name='sharePublicRecipes'\r\n                                label='Share your public recipes'\r\n                                checked={NewData.settings?.sharePublicRecipes}\r\n                                onChange={updateSetting}\r\n                            />\r\n                        </InputGroup>\r\n                    </Section>\r\n\r\n                    <Section id='account-appearance'>\r\n                        <SectionTitle>Appearance</SectionTitle>\r\n\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                                marginTop: '20px',\r\n                            }}\r\n                        >\r\n                            <div style={{ width: '100%', display: 'flex' }}>\r\n                                <ThemeChooser\r\n                                    name='selectedTheme'\r\n                                    onChange={updateSetting}\r\n                                >\r\n                                    {userData.settings?.themes?.map(\r\n                                        (theme, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    selected={\r\n                                                        userData.settings\r\n                                                            ?.selectedTheme ==\r\n                                                        theme.themeID\r\n                                                    }\r\n                                                    value={theme.themeID}\r\n                                                >\r\n                                                    {theme.name}\r\n                                                </option>\r\n                                            )\r\n                                        }\r\n                                    )}\r\n                                </ThemeChooser>\r\n                                <Form.Button\r\n                                    onClick={() =>\r\n                                        setModalShow((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                createTheme: true,\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Create\r\n                                </Form.Button>\r\n                            </div>\r\n                        </InputGroup>\r\n\r\n                        {/* Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor' ? '' : 'bgcolor'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            background: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'bgcolor2' ? '' : 'bgcolor2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'bgcolor2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Textbox Background */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'textbg' ? '' : 'textbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Textbox Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'textbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            inputBackground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).inputBackground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent' ? '' : 'accent'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            accent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).accent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Accent */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'accent2' ? '' : 'accent2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Accent\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'accent2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryAccent: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryAccent\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground' ? '' : 'foreground'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            foreground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).foreground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Secondary Foreground */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'foreground2'\r\n                                            ? ''\r\n                                            : 'foreground2'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Secondary Foreground\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'foreground2' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            secondaryForeground: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).secondaryForeground\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Muted Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'muted' ? '' : 'muted'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Muted Text\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'muted' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            muted: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).muted\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Faded Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'faded' ? '' : 'faded'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Faded\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'faded' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            faded: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).faded\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Error Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'error' ? '' : 'error'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Error\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'error' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            error: newColor.hex,\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).error\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Navbar background Color */}\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <AppearanceColorTitle\r\n                                disabled={userData?.settings?.selectedTheme.startsWith(\r\n                                    'default_themes'\r\n                                )}\r\n                                onClick={() =>\r\n                                    setVisibleAppearance((prev) =>\r\n                                        prev == 'navbarbg' ? '' : 'navbarbg'\r\n                                    )\r\n                                }\r\n                            >\r\n                                Navigation Bar Background\r\n                            </AppearanceColorTitle>\r\n                            {visibleAppearance == 'navbarbg' && (\r\n                                <StyledSketchPicker\r\n                                    onChangeComplete={async () => {\r\n                                        const res = await users.editUser(\r\n                                            userData.id,\r\n                                            NewData\r\n                                        )\r\n\r\n                                        if (res.status != 201)\r\n                                            Toast(\r\n                                                'Failed to update theme...',\r\n                                                'error'\r\n                                            )\r\n                                        else {\r\n                                            setUserData(res.data)\r\n                                        }\r\n                                    }}\r\n                                    onChange={(newColor) => {\r\n                                        const index =\r\n                                            NewData?.settings.themes.findIndex(\r\n                                                (theme) =>\r\n                                                    theme.themeID ==\r\n                                                    userData.settings\r\n                                                        .selectedTheme\r\n                                            )\r\n\r\n                                        let newThemes = NewData?.settings.themes\r\n                                        newThemes[index] = {\r\n                                            ...newThemes[index],\r\n                                            navbar: {\r\n                                                ...newThemes[index].navbar,\r\n                                                background: newColor.hex,\r\n                                            },\r\n                                        }\r\n\r\n                                        setNewData((prev) => {\r\n                                            return {\r\n                                                ...prev,\r\n                                                settings: {\r\n                                                    ...prev.settings,\r\n                                                    themes: newThemes,\r\n                                                },\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    color={\r\n                                        NewData?.settings?.themes?.find(\r\n                                            (theme) =>\r\n                                                theme.themeID ==\r\n                                                userData.settings.selectedTheme\r\n                                        ).navbar.background\r\n                                    }\r\n                                ></StyledSketchPicker>\r\n                            )}\r\n                        </InputGroup>\r\n\r\n                        {/* Only displays delete button if the user created the theme */}\r\n                        {!userData?.settings?.selectedTheme.startsWith(\r\n                            'default_themes'\r\n                        ) &&\r\n                            NewData?.id != null && (\r\n                                <Form.Button\r\n                                    name='deleteTheme'\r\n                                    style={{ marginTop: '7px' }}\r\n                                    onClick={updateSetting}\r\n                                >\r\n                                    Delete Theme\r\n                                </Form.Button>\r\n                            )}\r\n                    </Section>\r\n\r\n                    <Section id='account-adv.settings'>\r\n                        <SectionTitle>Advanced Settings</SectionTitle>\r\n                        {NewData?.id == null && (\r\n                            <StyledSpinner animation='border' />\r\n                        )}\r\n\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Label>\r\n                                User ID:{' '}\r\n                                <ShownOnHover\r\n                                    onClick={() => {\r\n                                        navigator.clipboard.writeText(\r\n                                            userData.id\r\n                                        )\r\n                                        Toast('Copied to clipboard!', 'info')\r\n                                    }}\r\n                                >\r\n                                    {userData.id}\r\n                                </ShownOnHover>\r\n                            </Form.Label>\r\n                        </InputGroup>\r\n                        <InputGroup\r\n                            style={{\r\n                                display: NewData?.id == null ? 'none' : '',\r\n                            }}\r\n                        >\r\n                            <Form.Button\r\n                                style={{ marginLeft: '0' }}\r\n                                name='closeAccount'\r\n                                onClick={() =>\r\n                                    setModalShow((prev) => {\r\n                                        return { ...prev, deleteAccount: true }\r\n                                    })\r\n                                }\r\n                            >\r\n                                Close Account\r\n                            </Form.Button>\r\n                        </InputGroup>\r\n                    </Section>\r\n                </Sections>\r\n            </Pages.PageBody>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","export default __webpack_public_path__ + \"static/media/logo.2573ae00.svg\";","import React, { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport defaultImage from '../../assets/logo.svg'\r\n\r\nconst CardBody = styled.div`\r\n    transition: transform 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n\r\n    border-radius: 15px;\r\n    margin-bottom: 15px;\r\n\r\n    background-color: ${(props) => props.theme.thirdBackground};\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n    margin-left: 10px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    padding-right: 0px;\r\n    width: 200px;\r\n`\r\nconst CardTitle = styled.h5`\r\n    margin-bottom: 0px;\r\n    margin-left: 10px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst CardDescription = styled.p`\r\n    margin-left: 10px;\r\n    margin-top: 5px;\r\n\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst CardTags = styled.p`\r\n    margin: 2px auto 0px 18px;\r\n    color: ${(props) => props.theme.muted};\r\n`\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n`\r\n\r\nconst CookbookCard = ({ cookbook, deleteCookbook }) => {\r\n    const {\r\n        name = 'No Name',\r\n        coverImage,\r\n        description = 'No Description',\r\n        tags,\r\n        id,\r\n    } = cookbook\r\n\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    return (\r\n        <CardBody>\r\n            <div className='row no-gutters'>\r\n                <ImageWrapper className='col-sm-3'>\r\n                    {loading && <StyledSpinner animation='border' />}\r\n\r\n                    <Link to={`/cookbook/${id}`}>\r\n                        <img\r\n                            src={coverImage ?? defaultImage}\r\n                            style={{\r\n                                borderRadius: '10px',\r\n                                display: loading ? 'none' : 'block',\r\n                            }}\r\n                            className='card-img-top h-100'\r\n                            alt='Not found... :('\r\n                            onLoad={() => setLoading(false)}\r\n                        />\r\n                    </Link>\r\n                </ImageWrapper>\r\n                <div\r\n                    className='col-sm-7'\r\n                    style={{ paddingLeft: '0px', paddingTop: '3px' }}\r\n                >\r\n                    <div className='card-body'>\r\n                        <Link\r\n                            style={{\r\n                                color: '#000',\r\n                                textDecoration: 'none',\r\n                            }}\r\n                            to={`/cookbook/${id}`}\r\n                        >\r\n                            <CardTitle className='card-title'>{name}</CardTitle>\r\n                        </Link>\r\n                        <CardTags className='card-text'>\r\n                            {tags.join(', ').trim().slice(0, -1)}\r\n                        </CardTags>\r\n                        <hr\r\n                            style={{\r\n                                margin: '10px auto 10px 10px',\r\n                                filter: 'blur(1px)',\r\n                                color: theme.foreground,\r\n                            }}\r\n                        />\r\n                        <CardDescription className='card-text'>\r\n                            {description}\r\n                        </CardDescription>\r\n                        <div>\r\n                            <Link to={`/cookbook/${id}/edit`}>\r\n                                <Button style={{ margin: '5px 5px 0px 5px' }}>\r\n                                    Edit\r\n                                </Button>\r\n                            </Link>\r\n                            <Button\r\n                                style={{ margin: '5px 5px 0px 5px' }}\r\n                                variant='danger'\r\n                                onClick={() => deleteCookbook(id)}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CardBody>\r\n    )\r\n}\r\n\r\nexport default CookbookCard\r\n","import React, { useContext } from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { ThemeContext } from 'styled-components'\r\nimport Account from '../../contexts/AccountContext'\r\nimport CookbookCard from './CookbookCard'\r\n\r\nconst CookbooksList = ({ filteredCookbooks, deleteCookbook }) => {\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const handleDragEnd = (res) => {\r\n        if (!res.destination) return\r\n        //    const items = Array.from(filteredRecipes)\r\n        //    const [reorderedItem] = items.splice(res.source.index, 1);\r\n        //    items.splice(res.destination.index, 0, reorderedItem)\r\n\r\n        //    setRecipes(items)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {filteredCookbooks?.length > 0 ? (\r\n                <DragDropContext onDragEnd={handleDragEnd}>\r\n                    <Droppable droppableId='recipeListDrop'>\r\n                        {(provided) => (\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                {filteredCookbooks.map((book, index) => {\r\n                                    return (\r\n                                        <Draggable\r\n                                            key={book.id}\r\n                                            draggableId={book.id}\r\n                                            index={index}\r\n                                        >\r\n                                            {(provided) => (\r\n                                                <div\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    ref={provided.innerRef}\r\n                                                >\r\n                                                    <CookbookCard\r\n                                                        cookbook={book}\r\n                                                        deleteCookbook={\r\n                                                            deleteCookbook\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    )\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            ) : (\r\n                <Alert\r\n                    style={{\r\n                        marginTop: '15px',\r\n                        backgroundColor: theme.alert.background,\r\n                        color: theme.alert.color,\r\n                        borderColor: theme.alert.border\r\n                    }}\r\n                    variant='danger'\r\n                >\r\n                    <Alert.Heading>Hmm...</Alert.Heading>\r\n                    <p>Seems like there are no cookbooks with that name!</p>\r\n                </Alert>\r\n            )}\r\n            <div style={{ marginTop: '20px' }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CookbooksList\r\n","import { useContext, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport IsCrushedContext from '../../contexts/IsCrushedContext'\r\nimport AccountContext from '../../contexts/AccountContext'\r\n\r\nimport CookbookCard from './CookbookCard'\r\nimport { cookbook } from '../../api/api'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\nimport { Alert, Spinner } from 'react-bootstrap'\r\nimport CookbookList from './CookbooksList'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst DivBody = styled.div`\r\n    width: 80%;\r\n    margin: 50px auto;\r\n`\r\n\r\nconst SearchBox = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.foreground};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    appearance: none;\r\n    border-radius: 0.5rem;\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst TagSelect = styled.select`\r\n    padding: 0.475rem 2.25rem 0.475rem 0.55rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: ${(props) => props.theme.muted};\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n    border-radius: 0.5rem;\r\n\r\n    border-width: 0;\r\n    outline: 0;\r\n`\r\n\r\nconst NewButton = styled.button`\r\n    padding: 8px 25px;\r\n    color: ${(props) => props.theme.foreground};\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    border: none;\r\n    border-radius: 100px 100px 100px 100px;\r\n    cursor: pointer;\r\n    transition: filter 240ms ease-in-out;\r\n    background: ${(props) => props.theme.accent};\r\n    background: linear-gradient(\r\n        58deg,\r\n        ${(props) => props.theme.accent} 20%,\r\n        ${(props) => props.theme.secondaryAccent} 100%\r\n    );\r\n    &:hover {\r\n        filter: brightness(0.9);\r\n    }\r\n\r\n    &:disabled {\r\n        filter: brightness(0.4);\r\n    }\r\n`\r\n\r\n// Shown in place when data is loading\r\nconst StyledSpinner = styled(Spinner)`\r\n    border-color: ${(props) => props.theme.accent};\r\n    border-right-color: transparent;\r\n\r\n    width: 50px;\r\n    height: 50px;\r\n`\r\n\r\nconst SearchBar = ({ tagOptions }) => {\r\n    const isCrushed = useContext(IsCrushedContext)\r\n    const { userData, setUserData } = useContext(AccountContext)\r\n    const Toast = useContext(ToastNotif)\r\n    const theme = useContext(ThemeContext)\r\n\r\n    const [searchField, setSearchField] = useState('')\r\n    const [tagField, setTagField] = useState('none')\r\n\r\n    const filteredCookbooks = userData?.cookbooks?.filter((book) => {\r\n        return book.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n\r\n    const handleChange = (e, type) => {\r\n        if (type === 'search') setSearchField(e.target.value)\r\n        else if (type === 'tag') setTagField(e.target.value)\r\n    }\r\n\r\n    const deleteCookbook = async (id) => {\r\n        const res = await cookbook.deleteCookbook(userData.id, id)\r\n        if (res?.status != 200) Toast('Failed to delete cookbook...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Cookbook deleted!', 'success')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DivBody>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    margin: `10px auto 10px auto`,\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <SearchBox\r\n                    placeholder='Search Cookbooks'\r\n                    aria-label='Search Cookbooks'\r\n                    onChange={(e) => handleChange(e, 'search')}\r\n                />\r\n                {!isCrushed && (\r\n                    <TagSelect\r\n                        value={tagField}\r\n                        onChange={(e) => handleChange(e, 'tag')}\r\n                        style={{ width: '35%', marginLeft: '10px' }}\r\n                    >\r\n                        <option value='none'>Choose...</option>\r\n                    </TagSelect>\r\n                )}\r\n                <Link to='/cookbook/create'>\r\n                    <Form.Button\r\n                        style={{ marginLeft: '10px' }}\r\n                        disabled={userData == null || userData == undefined}\r\n                    >\r\n                        New\r\n                    </Form.Button>\r\n                </Link>\r\n            </div>\r\n            {isCrushed && (\r\n                <TagSelect\r\n                    value={tagField}\r\n                    onChange={(e) => handleChange(e, 'tag')}\r\n                    style={{ width: '100%', marginBottom: '10px' }}\r\n                >\r\n                    <option value='none'>Choose...</option>\r\n                </TagSelect>\r\n            )}\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                {userData == null ||\r\n                    (userData == 'none' && (\r\n                        <div style={{ width: '100%' }}>\r\n                            <div style={{ margin: '10px 50% 0px 50%' }}>\r\n                                <StyledSpinner animation='border' />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <div\r\n                    style={{\r\n                        width: '55%',\r\n                        display:\r\n                            userData == null || userData == 'none'\r\n                                ? 'none'\r\n                                : '',\r\n                    }}\r\n                >\r\n                    {userData && userData?.cookbooks?.length == 0 ? (\r\n                        <Alert\r\n                            variant='danger'\r\n                            style={{\r\n                                marginTop: '10px',\r\n                                backgroundColor: theme.alert.background,\r\n                                color: theme.alert.color,\r\n                                borderColor: theme.alert.border,\r\n                            }}\r\n                        >\r\n                            <Alert.Heading>Hmm...</Alert.Heading>\r\n                            Seems like you have no cookbooks! Try creating\r\n                            one...\r\n                        </Alert>\r\n                    ) : (\r\n                        <CookbookList\r\n                            filteredCookbooks={filteredCookbooks}\r\n                            deleteCookbook={deleteCookbook}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Pages from '../../components/Pages/Pages'\r\nimport SearchBar from '../Cookbooks/SearchBar'\r\n\r\n\r\nconst Cookbooks = () => {\r\n    \r\n    return (\r\n        <Pages.PageBody>\r\n            <SearchBar/>\r\n        </Pages.PageBody>\r\n    )\r\n}\r\n\r\nexport default Cookbooks\r\n","export default function validate(values, isSubmit) {\r\n    let errors = {}\r\n\r\n    if (values.name || isSubmit) {\r\n        if (!values.name) errors.name = 'The name is required'\r\n        else if (values.name?.toString().trim() == '')\r\n            errors.name = 'The name is required'\r\n    }\r\n\r\n    if (values.description || isSubmit) {\r\n        if (!values.description) errors.description = 'A description is required'\r\n        else if (values.description.toString().trim() == '')\r\n            errors.description = 'A description is required'\r\n    }\r\n\r\n    return errors\r\n}\r\n","export const resizeBase64Img = (base64, newWidth, newHeight) => {\r\n    return new Promise((resolve, reject) => {\r\n        var canvas = document.createElement('canvas')\r\n        canvas.style.width = newWidth.toString() + 'px'\r\n        canvas.style.height = newHeight.toString() + 'px'\r\n        let context = canvas.getContext('2d')\r\n        let img = document.createElement('img')\r\n        img.src = base64\r\n        img.onload = function () {\r\n            context.scale(newWidth / img.width, newHeight / img.height)\r\n            context.drawImage(img, 0, 0)\r\n            const dataURL = canvas.toDataURL()\r\n            canvas.remove()\r\n            resolve(dataURL)\r\n        }\r\n    })\r\n}\r\n\r\nexport const byteSize = (string, unit) => {\r\n    const size = new Blob([string]).size\r\n    \r\n    \r\n    if (unit == 'kb') return size * 0.001\r\n    if (unit == 'mb') return size * 0.000001\r\n\r\n    return size\r\n}\r\n","import React, { useContext, useRef } from 'react'\r\nimport { Form as FormWrapper, Container, Row, Col } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { cookbook } from '../../api/api'\r\nimport Account from '../../contexts/AccountContext'\r\nimport IsCrushed from '../../contexts/IsCrushedContext'\r\nimport ToastNotif from '../../contexts/ToastNotifContext'\r\nimport useForm from '../../hooks/useForm'\r\nimport validate from './CreateValidation'\r\nimport { useNavigate } from 'react-router'\r\nimport { byteSize } from '../../utils/image'\r\nimport Pages from '../../components/Pages/Pages'\r\nimport Form from '../../components/Forms/Form'\r\n\r\nconst DivBody = styled(Pages.PageBody)`\r\n    text-align: center;\r\n    padding-bottom: 40px;\r\n`\r\n\r\nconst ErrorMessage = styled.p`\r\n    margin-left: 3px;\r\n    margin-top: 3px;\r\n    color: ${(props) => props.theme.error};\r\n    font-size: 14px;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 60%;\r\n    border-radius: 8px;\r\n    resize: none;\r\n    min-height: 42px;\r\n    height: 60px;\r\n    overflow: hidden;\r\n    outline: none;\r\n    color: ${(props) => props.theme.foreground};\r\n    border: 1px solid ${(props) => props.theme.secondaryBackground}08;\r\n    caret-color: ${(props) => props.theme.muted};\r\n    padding: 5px 10px;\r\n    border-bottom: 1.4px solid transparent;\r\n    transition: border 200ms ease;\r\n    font-size: 12px;\r\n    &::placeholder {\r\n        color: ${(props) => props.theme.muted};\r\n    }\r\n    &:not(:last-of-type) {\r\n        border-bottom: 1.5px solid rgba(200, 200, 200, 0.4);\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        border-bottom: 3px solid ${(props) => props.theme.accent};\r\n    }\r\n    background-color: ${(props) => props.theme.inputBackground};\r\n`\r\n\r\nconst CookbookName = styled.h1`\r\n    margin-top: 15px;\r\n    margin-bottom: 20px;\r\n    color: ${(props) => props.theme.foreground};\r\n`\r\n\r\nconst FormRow = styled(Row)`\r\n    margin-bottom: 10px;\r\n    justify-content: center;\r\n`\r\n\r\nconst CreateCookbook = () => {\r\n    const Create = async () => {\r\n        const res = await cookbook.createCookbook(userData.id, {\r\n            ...values,\r\n            tags: values?.tags?.split(',')?.map((item) => item?.trim()) || [],\r\n        })\r\n        if (res.status != 201) Toast('Failed to create cookbook...', 'error')\r\n        else {\r\n            setUserData(res.data)\r\n            Toast('Created cookbook!', 'success')\r\n            navigate(-1)\r\n        }\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const Toast = useContext(ToastNotif)\r\n    const isCrushed = useContext(IsCrushed)\r\n    const { userData, setUserData } = useContext(Account)\r\n\r\n    const coverImageRef = useRef()\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        setErrors,\r\n        setValues,\r\n        setIsSubmitting,\r\n        handleSubmit,\r\n    } = useForm(\r\n        Create,\r\n        validate,\r\n        {},\r\n        {\r\n            handleChange: (e) => {\r\n                if (e?.persist) e.persist()\r\n\r\n                if (e.target.name == 'coverImage') {\r\n                    if (\r\n                        !['.png', '.jpg', '.jpeg', '.bmp', '.ico'].some((ex) =>\r\n                            e.target.files[0]?.name?.toLowerCase()?.endsWith(ex)\r\n                        )\r\n                    ) {\r\n                        e.target.value = ''\r\n                        setValues((values) => ({\r\n                            ...values,\r\n                            [e.target.name]: null,\r\n                        }))\r\n                        return\r\n                    }\r\n\r\n                    let reader = new FileReader()\r\n                    reader.onload = (e) => {\r\n                        // Files bigger than 10mb will show a warning\r\n                        if (byteSize(e.target.result, 'mb') >= 10) {\r\n                            Toast('File to large!', 'warn')\r\n                            e.target.value = ''\r\n                            return\r\n                        }\r\n                        setValues((values) => ({\r\n                            ...values,\r\n                            coverImage: e.target.result,\r\n                        }))\r\n                    }\r\n                    reader.readAsDataURL(e.target.files[0])\r\n                    return\r\n                }\r\n\r\n                setErrors((prev) => {\r\n                    return { ...prev, [e.target.name]: null }\r\n                })\r\n\r\n                setValues((values) => ({\r\n                    ...values,\r\n                    [e.target.name]: e.target.value,\r\n                }))\r\n            },\r\n        }\r\n    )\r\n\r\n    return (\r\n        <DivBody>\r\n            <FormWrapper\r\n                style={{ width: '100%' }}\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <CookbookName>\r\n                            {values.name || 'New Cookbook'}\r\n                        </CookbookName>\r\n                    </Row>\r\n                    <FormRow>\r\n                        <Form.Text\r\n                            name='name'\r\n                            onChange={handleChange}\r\n                            value={values.name || ''}\r\n                            placeholder='Name'\r\n                            required\r\n                        />\r\n                        {errors.name && (\r\n                            <ErrorMessage>{errors.name}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    <FormRow>\r\n                        <Form.TextArea\r\n                            name='description'\r\n                            onChange={handleChange}\r\n                            value={values.description || ''}\r\n                            placeholder='Description'\r\n                            required\r\n                        />\r\n                        {errors.description && (\r\n                            <ErrorMessage>{errors.description}</ErrorMessage>\r\n                        )}\r\n                    </FormRow>\r\n                    <FormRow\r\n                        style={{\r\n                            width: isCrushed ? '60%' : '50%',\r\n                            margin: '0 auto',\r\n                        }}\r\n                    >\r\n                        <Col>\r\n                            <Form.File\r\n                                inputRef={coverImageRef}\r\n                                label='Cover Image'\r\n                                name='coverImage'\r\n                                onChange={(e) => handleChange(e)}\r\n                            />\r\n                            {errors.coverImage && (\r\n                                <ErrorMessage>{errors.coverImage}</ErrorMessage>\r\n                            )}\r\n                        </Col>\r\n\r\n                        {!isCrushed && (\r\n                            <Col>\r\n                                <Form.Text\r\n                                    style={{ width: '100%' }}\r\n                                    name='tags'\r\n                                    onChange={handleChange}\r\n                                    value={values.tags || ''}\r\n                                    placeholder='Tags (separated by \",\")'\r\n                                />\r\n                                {errors.tags && (\r\n                                    <ErrorMessage>{errors.tags}</ErrorMessage>\r\n                                )}\r\n                            </Col>\r\n                        )}\r\n                    </FormRow>\r\n                    {isCrushed && (\r\n                        <FormRow style={{ marginTop: '10px' }}>\r\n                            <Form.Text\r\n                                style={{ width: '60%' }}\r\n                                name='tags'\r\n                                onChange={handleChange}\r\n                                value={values.tags || ''}\r\n                                placeholder='Tags (separated by \",\")'\r\n                            />\r\n                            {errors.tags && (\r\n                                <ErrorMessage>{errors.tags}</ErrorMessage>\r\n                            )}\r\n                        </FormRow>\r\n                    )}\r\n                    <br />\r\n                    <Form.Button>Create</Form.Button>\r\n                    <Form.Button\r\n                        type='button'\r\n                        muted\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        Cancel\r\n                    </Form.Button>\r\n                </Container>\r\n            </FormWrapper>\r\n        </DivBody>\r\n    )\r\n}\r\n\r\nexport default CreateCookbook\r\n","import { useEffect, useState } from 'react'\r\nimport { Route, Routes as ReactRoutes } from 'react-router-dom'\r\n\r\n\r\nimport { shopping, users, recipe, cookbook } from './api/api'\r\n\r\nimport styled, { ThemeProvider } from 'styled-components'\r\nimport { themes } from './themes.json'\r\n\r\nimport Routes from './components/Routes/Routes'\r\n\r\nimport Navbar from './components/Navigation/Navbar'\r\nimport PageNotFound from './pages/PageNotFound/PageNotFound'\r\nimport SignupLogin from './pages/Signup-Login/Signup-Login'\r\n\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport Landing from './pages/Landing/Landing'\r\n\r\nimport IsCrushed from './contexts/IsCrushedContext'\r\nimport ToastNotifContext from './contexts/ToastNotifContext'\r\nimport AccountContext from './contexts/AccountContext'\r\nimport About from './pages/About/About'\r\n\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Account from './pages/Account/Account'\r\n\r\nimport defaultThemes from './themes.json'\r\n\r\nimport settings from './settings'\r\nimport Cookbooks from './pages/Cookbooks/Cookbooks'\r\nimport CreateCookbook from './pages/CreateCookbook/CreateCookbook'\r\n\r\nimport { IoConstructSharp } from 'react-icons/io5'\r\n\r\nconst AppContainer = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Background = styled.div`\r\n    background-color: ${(props) => props.theme.background};\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n`\r\n\r\ntoast.configure()\r\n\r\nconst App = () => {\r\n    const [localAuth, setLocalAuth] = useLocalStorage('email.password', {\r\n        email: null,\r\n        password: null,\r\n    })\r\n\r\n    const AuthLogin = async (email, password) => {\r\n        const LoginPromise = () => {\r\n            return new Promise(async (resolve, reject) => {\r\n                const retrievedUser = await users.getUser(email, password)\r\n\r\n                if (!retrievedUser || retrievedUser?.status != 200) {\r\n                    if (userData == 'none') setUserData(null)\r\n                    return reject('User not found')\r\n                }\r\n\r\n                setLocalAuth({ email, password })\r\n                setUserData(retrievedUser.data)\r\n                resolve(retrievedUser.data)\r\n            })\r\n        }\r\n\r\n        if (email && password) {\r\n            SendToast(\r\n                {\r\n                    promise: LoginPromise,\r\n                    pending: 'Logging you in...',\r\n                    error: 'Failed to login!',\r\n                    success: 'Successfully logged in!',\r\n                },\r\n                'promise'\r\n            )\r\n        } else {\r\n            console.error('No email or password')\r\n            if (userData == 'none') setUserData(null)\r\n        }\r\n    }\r\n\r\n    const AuthLogout = () => {\r\n        setUserData(null)\r\n        setLocalAuth({ email: null, password: null })\r\n    }\r\n\r\n    const [userData, setUserData] = useState('none')\r\n\r\n    const [isCrushed, setIsCrushed] = useState(false)\r\n\r\n    const theme =\r\n        (userData?.settings?.themes[\r\n            userData?.settings?.themes.findIndex(\r\n                (theme) => theme.themeID == userData?.settings?.selectedTheme\r\n            )\r\n        ] ||\r\n            userData?.settings?.themes.find(\r\n                (theme) => theme.themeID == 'default_themes.dark'\r\n            )) ??\r\n        defaultThemes.themes[0]\r\n\r\n    useEffect(() => {\r\n        if (settings.activeDevelopment)\r\n            SendToast(\r\n                `This app is still in development!`,\r\n                '',\r\n                theme,\r\n                IoConstructSharp\r\n            )\r\n\r\n        AuthLogin(localAuth?.email, localAuth?.password)\r\n\r\n        const onWindowResize = () => {\r\n            if (window.innerWidth < 768) {\r\n                setIsCrushed(true)\r\n            } else {\r\n                setIsCrushed(false)\r\n            }\r\n        }\r\n\r\n        window.removeEventListener('resize', onWindowResize)\r\n\r\n        onWindowResize()\r\n\r\n        window.addEventListener('resize', onWindowResize.bind(this))\r\n    }, [])\r\n\r\n    const SendToast = async (\r\n        message,\r\n        type,\r\n        currentTheme = theme,\r\n        icon = null\r\n    ) => {\r\n        if (!message) return console.error('Failed to send toast, no message!')\r\n        switch (type) {\r\n            case 'success':\r\n                toast.success(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${(props) =>\r\n                            props.currentTheme.accent} 20%,${(props) =>\r\n                            props.currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'info':\r\n                toast.info(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'warn':\r\n                toast.warn(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'error':\r\n                toast.error(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n            case 'promise':\r\n                if (!message.promise)\r\n                    return console.log('Error sending notification!')\r\n\r\n                const response = await toast.promise(message.promise, {\r\n                    pending: {\r\n                        render() {\r\n                            return message.pending || 'Working on it...'\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    success: {\r\n                        render() {\r\n                            return message.success || 'All done!'\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                    error: {\r\n                        render() {\r\n                            return (\r\n                                message.error || 'Whoops, this action failed!'\r\n                            )\r\n                        },\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        icon,\r\n                        style: {\r\n                            backgroundColor: currentTheme.secondaryBackground,\r\n                            color: currentTheme.foreground,\r\n                        },\r\n                        progressStyle: {\r\n                            background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                        },\r\n                    },\r\n                })\r\n\r\n                return response\r\n            default:\r\n                toast(message, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    icon,\r\n                    style: {\r\n                        backgroundColor: currentTheme.secondaryBackground,\r\n                        color: currentTheme.foreground,\r\n                    },\r\n                    progressStyle: {\r\n                        background: `linear-gradient(58deg,${currentTheme.accent} 20%,${currentTheme.secondaryAccent} 100%)`,\r\n                    },\r\n                })\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppContainer>\r\n            <ToastNotifContext.Provider value={SendToast}>\r\n                <AccountContext.Provider\r\n                    value={{\r\n                        localAuth,\r\n                        setLocalAuth,\r\n                        AuthLogin,\r\n                        AuthLogout,\r\n                        userData,\r\n                        setUserData,\r\n                    }}\r\n                >\r\n                    <ThemeProvider theme={theme}>\r\n                        <IsCrushed.Provider value={isCrushed}>\r\n                            <Background />\r\n                            <Navbar />\r\n                            <ReactRoutes>\r\n                                {/* Page not found */}\r\n                                <Route path='*' element={<PageNotFound />} />\r\n\r\n                                {/* Landing Page */}\r\n                                <Route path='/' element={<Landing />} />\r\n\r\n                                {/* Extra Routes */}\r\n                                <Route path='/about' element={<About />} />\r\n\r\n                                {/* No Account */}\r\n                                <Route element={<Routes.Public />}>\r\n                                    <Route\r\n                                        path='/signup'\r\n                                        element={<SignupLogin login={false} />}\r\n                                    />\r\n\r\n                                    <Route\r\n                                        path='/login'\r\n                                        element={<SignupLogin login={true} />}\r\n                                    />\r\n                                </Route>\r\n\r\n                                {/* Requires Account/Signed in */}\r\n                                <Route element={<Routes.Private />}>\r\n                                    {/* Manage Account */}\r\n                                    <Route\r\n                                        path='/account'\r\n                                        element={<Account />}\r\n                                    />\r\n\r\n                                    {/* //!COOKBOOKS */}\r\n                                    {/* View all cookbooks */}\r\n                                    <Route\r\n                                        path='/cookbooks'\r\n                                        element={<Cookbooks />}\r\n                                    />\r\n\r\n                                    {/* Create a new cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/create'\r\n                                        element={<CreateCookbook />}\r\n                                    />\r\n\r\n                                    {/* View all recipes in a cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID'\r\n                                        exact\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* Edit a cookbook (name, desc, img) */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* //!RECIPES */}\r\n                                    {/* Create a recipe in a certain cookbook */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/create'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* View recipe */}\r\n                                    <Route\r\n                                        path='/cookbook/:cookbookID/recipe/:recipeID'\r\n                                        exact\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n\r\n                                    {/* Edit recipe */}\r\n                                    <Route\r\n                                        path='/cookbooks/:cookbookID/recipe/:recipeID/edit'\r\n                                        element={<PageNotFound />}\r\n                                    />\r\n                                </Route>\r\n                            </ReactRoutes>\r\n                        </IsCrushed.Provider>\r\n                    </ThemeProvider>\r\n                </AccountContext.Provider>\r\n            </ToastNotifContext.Provider>\r\n        </AppContainer>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'thereciperack-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue !== null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    // console.log(`Saving ${prefixedKey} as data:\\n${JSON.stringify(value)}`)\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\n\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\n\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}